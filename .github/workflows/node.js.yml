# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Manage cache
      uses: actions/cache@v2.0.0
      with:
        path: app/node_modules
        key: Rac1.js

    - name: yarn install and test
      run: |
        cd app
        yarn install
        yarn test -- --coverage

    # Coverage badges will be updated on any branch except protected
    # branches 'develop' and 'master' and on a pull requests
    - run: mkdir -p .github/badges/
    - name: Test coverage badges
      uses: emibcn/clover-coverage-badges-action@v2.3
      with:
        # The GITHUB_TOKEN secret.
        github_token: ${{ secrets.GITHUB_TOKEN }}
        coverage-summary-path: app/coverage/clover.xml
        badges-directory: .github/badges/


  publish:

    # Only publish if all these conditions are met:
    # - The previous step ended successfully
    # - This is a push event
    # - The push event is on branch 'master'
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Manage cache
      uses: actions/cache@v2.0.0
      with:
        path: app/node_modules
        key: Rac1.js

    - name: yarn install and build
      run: |
        cd app
        yarn install
        yarn build

    - name: Deploy to GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v2
      with:
        target_branch: gh-pages
        build_dir: docs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
