{"version":3,"sources":["GAListener/GAListenerActive.js","i18n/en-en.lang.js","i18n/ca-es.lang.js","i18n/es-es.lang.js","i18n/available.js","GAListener/GAEventContext.js","GAListener/GAListener.jsx","GAListener/withGAEvent.js","GAListener/index.js","AppMenu.jsx","ErrorCatcher.jsx","Button.jsx","Volume.jsx","Controls.jsx","Rac1Directe.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","Rac1ByDate.jsx","App.js","serviceWorker.js","index.js"],"names":["GAListenerActive","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loadGoogleTag","ReactGA","initialize","titleCase","sendPageView","context","router","history","location","listen","set","PageLanguage","props","language","prevProps","page","pathname","pageview","GACode","global","dataLayer","gtag","push","arguments","Date","setTimeout","scriptTag","document","createElement","src","concat","body","appendChild","_ga","ga","children","React","Component","contextTypes","PropTypes","object","defaultProps","en_en_lang","locale","AppMenu","objectSpread","By date","Live","Update!","New version available!","Language","Change application language","reduce","res","lang","defineProperty","Allow tracking","Allow tracking user interactions for usage analysis","Yes","No","ErrorCatcher","Something went wrong :(","Try reloading the app to recover from it","Rac1ByDate","Rac1 Radio Podcasts Player","Rac1Directe","Rac1 live","ReloadButton","Reload","Button","Key","Keys","Prev","Next","More","Less","Play","Pause","Mute","Unmute","Remove last","Remove last podcast from playlist","Play previous podcast","Play next podcast","Toggle mute status","Toggle Play/Pause","Show more controls","Show less controls","symbol","orig","item","_objectSpread3","ca_es_lang","trans","es_es_lang","available","en","en_en","en-en","en-us","en-au","ca","ca_es","ca-es","es","es_es","es-es","GAEventContext","createContext","GAListener","origin","help","status","event","category","action","console","log","label","_this$props","trackOptIn","objectWithoutProperties","react_default","a","GAListener_GAEventContext","Provider","value","sendEvent","bind","withGAEvent","GAEvent","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","forwardedRef","Consumer","assign","ref","forwardRef","state","isOpen","isLanguageOpen","_this2","newServiceWorkerDetected","t","style","padding","background","process","backgroundSize","backgroundRepeat","backgroundPosition","Link","className","onClick","handleClick","to","index_es","icon","faByDate","marginRight","faLive","href","color","title","handleClickUpdate","faUpgrade","handleLanguageSectionClick","faLanguage","faCaretDown","faCaretRight","marginLeft","listStyleType","marginTop","code","name","map","handleClickLanguage","display","alignItems","es_default","onChange","onTrackOptIn","disabled","checkedChildren","unCheckedChildren","checked","handleClickOptTrackIn","_this3","extraClass","react_responsive_default","minWidth","matches","Menu","BigMenu","SmallMenu","pageWrapId","outerContainerId","onStateChange","handleMenuStateChange","disableCloseOnEsc","renderLinks","setState","e","currentTarget","text","preventDefault","onLanguageChange","onLoadNewServiceWorkerAccept","window","reload","optIn","translate","hasError","errorMessage","errorStack","info","error","componentStack","_this$state","Fragment","reloadApp","faRefresh","margin","textAlign","whiteSpace","message","stack","PureComponent","ButtonLegacy","keys","length","toConsumableArray","Set","toUpperCase","join","restProps","styleButton","borderRadius","helpExtra","keysString","aria-label","fontSize","fontWeight","Function","ButtonsGroup","_this$props2","buttons","keyHandlerFocus","justifyContent","width","control","index","onMouseUp","force","Volume","volume","muted","faVolume","faVolumeMute","faVolumeOff","faVolumeDown","faVolumeUp","flexDirection","height","paddingTop","rc_slider_es","onAfterChange","onSetVolume","vertical","onSetMuted","Controls","controls","faFastForward","flip","onPlayPrev","group","faForward","player","currentTime","position","left","isPlaying","faPause","faPlay","paused","play","pause","onPlayNext","incrementVolume","shiftKey","setMuted","_keyHandlerFocus","doFocus","relatedTarget","allowFocus","timer","_keyHandler","focus","getPlayer","noKeys","extraControls","forEach","c","_action","test","navigator","userAgent","clearTimeout","hideButtons","filter","includes","split","showAdvanced","volumeAsAdvanced","filterButtonsGroup","Button_ButtonsGroup","handleShowAdvancedChange","faEyeSlash","faEye","src_Volume","setVolume","border","bottom","right","backgroundColor","cursor","element","onKeyUp","handleKey","onBlur","increment","volumeNew","stopPropagation","key_orig","every","mod","onShowAdvancedChange","_player","audioEl","initialTitle","removeEventListener","handlePlayStatusChange","src_Controls","el","match","bundle_default","autoPlay","controlsList","preload","onPlay","onPause","onVolumeChanged","marginBottom","Playlist","completedDownload","date","minDate","maxDate","entry_default","handleDateChange","handleDateBlur","required","clearIcon","calendarIcon","faCalendar","onClickReload","setHours","setMinutes","onDateChange","onDateBlur","PodcastsList","current","undefined","child","textIndent","styles","paddingLeft","columnCount","Math","floor","renderChildren","Podcast","num","path","uuid","hour","minute","textDecoration","Rac1","_podcastsData","_pages_uuids","_previous_uuids","controller","AbortController","antiCorsBackends","url","parser","_parser","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","abrupt","sent","stop","_x","extraOptions","Content-Type","credentials","encodeURIComponent","_parser2","_callee2","json","_context2","http_code","contents","Error","_x2","_parser3","_callee3","_context3","_x3","dataAttrsFind","dataAttrsClean","searchData","noop","onListUpdate","onError","setDate","abort","ok","statusText","callback","err","Promise","reject","updateList","pageNumber","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","catch","catchFetchErrors","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","w","completed","dateToString","d","getFullYear","getMonth","getDate","filterByDates","d1","d2","pageUuids","podcastPage","allCompleted","podcastNew","_this4","_this5","getPage","dataRaw","_this5$parsePage","parsePage","uuidsPage","reverse","backend","pad2","getTime","dateNext","fetch","signal","handleFetchErrors","_this7","data","line","v","replace","Number","_this8","resolve","dateTime","startsWith","audio","time","appTabletTitle","titleFull","currentUUID","getDateFromParams","waitingUpdate","showAdvancedControls","handleClickReload","assertThisInitialized","params","year","month","day","unlisten","handleHistoryChange","rac1","handleError","dateText","findCurrentPodcast","autoplay","currentPath","playNext","playPrev","show","onEnded","playlist","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","_this$state2","waitingUpdateNext","historyPush","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","App","dnt","doNotTrack","msDoNotTrack","registration","hasOwnProperty","addEventListener","handleNewServiceWorker","detail","todayStr","translations","withErrorCatcher","component","src_ErrorCatcher","react_translate_lib","HashRouter","id","build_default","parent","prefix","blacklist","src_GAListener","src_AppMenu_0","handleLoadNewServiceWorkerAccept","handleLanguageChange","Switch","Route","render","src_Rac1Directe","Redirect","src_Rac1ByDate","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","ReactDOM","src_App_0","preventDevToolsReloadLoop","waiting","postMessage","getElementById","URL","contentType","headers","get","indexOf","ready","unregister","checkValidServiceWorker","CustomEvent","dispatchEvent"],"mappings":"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","file":"static/js/main.2795fb58.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListenerActive extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n    super();\n\n    const GACode = 'UA-129704402-1';\n    this.loadGoogleTag(GACode);\n    ReactGA.initialize(GACode, {\n      titleCase: false,\n    });\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n    ReactGA.set({ PageLanguage: this.props.language });\n  }\n\n  componentDidUpdate(prevProps) {\n    if ( prevProps.language !== this.props.language ) {\n      ReactGA.set({ PageLanguage: this.props.language });\n    }\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  removeGA() {\n    this._ga = ReactGA.ga;\n    ReactGA.ga = null;\n    global.gtag = [];\n    global.dataLayer = [];\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nGAListenerActive.defaultProps = {\n  language: 'en-en',\n};\n\nGAListenerActive.propTypes = {\n  language: PropTypes.string.isRequired,\n};\n\nexport default GAListenerActive;\n","export default {\n  locale: \"en-en\",\n\n  AppMenu: {\n    \"By date\": \"By date\",\n    \"Live\": \"Live\",\n    \"Update!\": \"Update!\",\n    \"New version available!\": \"New version available!\",\n    \"Language\": \"Language\",\n    \"Change application language\": \"Change application language\",\n    ...['Català', 'Castellano', 'English']\n      .reduce( (res, lang) => {\n        return {\n          ...res,\n          [`Change language to ${lang}`]: `Change language to ${lang}`,\n        }\n      }, {}),\n    \"Allow tracking\": \"Allow tracking\",\n    \"Allow tracking user interactions for usage analysis\": \"Allow tracking user interactions for usage analysis\",\n    \"Yes\": \"Yes\",\n    \"No\": \"No\",\n  },\n\n  ErrorCatcher: {\n    \"Something went wrong :(\": \"Something went wrong :(\",\n    \"Try reloading the app to recover from it\": \"Try reloading the app to recover from it\",\n  },\n\n  Rac1ByDate: {\n    \"Rac1 Radio Podcasts Player\": \"Rac1 Radio Podcasts Player\",\n  },\n\n  Rac1Directe: {\n    \"Live\": \"Live\",\n    \"Rac1 live\": \"Rac1 Live\",\n    \"Rac1 Radio Podcasts Player\": \"Rac1 Radio Podcasts Player\",\n  },\n\n  ReloadButton: {\n    \"Reload\": \"Reload\",\n  },\n\n  Button: {\n    \"Key\": \"Key\",\n    \"Keys\": \"Keys\",\n    \"Prev\": \"Prev\",\n    \"Next\": \"Next\",\n    \"More\": \"More\",\n    \"Less\": \"Less\",\n    \"Play\": \"Play\",\n    \"Pause\": \"Pause\",\n    \"Mute\": \"Mute\",\n    \"Unmute\": \"Unmute\",\n    \"Remove last\": \"Remove last\",\n    \"Remove last podcast from playlist\": \"Remove last podcast from playlist\",\n    \"Play previous podcast\": \"Play previous podcast\",\n    \"Play next podcast\": \"Play next podcast\",\n    \"Toggle mute status\": \"Toggle mute status\",\n    \"Toggle Play/Pause\": \"Toggle Play/Pause\",\n    \"Show more controls\": \"Show more controls\",\n    \"Show less controls\": \"Show less controls\",\n    ...[\n        { symbol: '10s', orig: '10 seconds'},\n        { symbol: '60s', orig: '1 minute'  },\n        { symbol: '10m', orig: '10 minutes'},\n      ].reduce( (res, item) => {\n        return {\n          ...res,\n          [`-${ item.symbol }`]: `-${ item.symbol }`,\n          [`+${ item.symbol }`]: `+${ item.symbol }`,\n          [`Go backwards ${ item.orig }`]: `Go backwards ${ item.orig }`,\n          [`Go forward ${ item.orig }`  ]: `Go forward ${ item.orig }`,\n        }\n      }, {}),\n  },\n}\n","export default {\n  locale: \"fr\", // :(\n\n  AppMenu: {\n    \"By date\": \"Per data\",\n    \"Live\": \"En directe\",\n    \"Update!\": \"Actualitza!\",\n    \"New version available!\": \"Nova versió disponible!\",\n    \"Language\": \"Idioma\",\n    \"Change application language\": \"Canvia l'idioma de l'aplicació\",\n    ...['Català', 'Castellano', 'English']\n      .reduce( (res, lang) => {\n        return {\n          ...res,\n          [`Change language to ${lang}`]: `Canvia l'idioma a ${lang}`,\n        }\n      }, {}),\n    \"Allow tracking\": \"Seguiment\",\n    \"Allow tracking user interactions for usage analysis\": \"Permet el seguiment de les accions de l'usuari amb fins d'anàlisi d'ús\",\n    \"Yes\": \"Si\",\n    \"No\": \"No\",\n  },\n\n  ErrorCatcher: {\n    \"Something went wrong :(\": \"Alguna cosa ha anat malament :(\",\n    \"Try reloading the app to recover from it\": \"Intenta recarregar l'aplicació per a continuar\",\n  },\n\n  Rac1ByDate: {\n    \"Rac1 Radio Podcasts Player\": \"Reproductor de podcasts de Rac1\",\n  },\n\n  Rac1Directe: {\n    \"Live\": \"En directe\",\n    \"Rac1 live\": \"Rac1 en Directe\",\n    \"Rac1 Radio Podcasts Player\": \"Reproductor de podcasts de Rac1\",\n  },\n\n  ReloadButton: {\n    \"Reload\": \"Recarrega\",\n  },\n\n  Button: {\n    \"Key\": \"Tecla\",\n    \"Keys\": \"Tecles\",\n    \"Prev\": \"Ant.\",\n    \"Next\": \"Seg.\",\n    \"More\": \"Més\",\n    \"Less\": \"Menys\",\n    \"Play\": \"Play\",\n    \"Pause\": \"Pausa\",\n    \"Mute\": \"Silenciar\",\n    \"Unmute\": \"Act. so\",\n    \"Remove last\": \"Elimina últ\",\n    \"Remove last podcast from playlist\": \"Elimina l'últim podcast de la llista de reproducció\",\n    \"Play previous podcast\": \"Reprodueix el podcast anterior\",\n    \"Play next podcast\": \"Reprodueix el podcast següent\",\n    \"Toggle mute status\": \"Canvia l'estat del silenci\",\n    \"Toggle Play/Pause\": \"Canvia Reprodueix/Pausa\",\n    \"Show more controls\": \"Mostra més controls\",\n    \"Show less controls\": \"Mostra menys controls\",\n    ...[\n        { symbol: '10s', orig: '10 seconds', trans: '10 segons'},\n        { symbol: '60s', orig: '1 minute'  , trans: '1 minut'},\n        { symbol: '10m', orig: '10 minutes', trans: '10 minuts'},\n      ].reduce( (res, item) => {\n        return {\n          ...res,\n          [`-${ item.symbol }`]: `-${ item.symbol }`,\n          [`+${ item.symbol }`]: `+${ item.symbol }`,\n          [`Go backwards ${ item.orig }`]: `Retrocedir ${ item.trans }`,\n          [`Go forward ${ item.orig }`  ]: `Avançar ${ item.trans }`,\n        }\n      }, {}),\n  },\n}\n","export default {\n  locale: \"es-es\",\n\n  AppMenu: {\n    \"By date\": \"Por fecha\",\n    \"Live\": \"En directo\",\n    \"Update!\": \"¡Actualiza!\",\n    \"New version available!\": \"¡Nueva versión disponible!\",\n    \"Language\": \"Idioma\",\n    \"Change application language\": \"Cambiar el idioma de la aplicación\",\n    ...['Català', 'Castellano', 'English']\n      .reduce( (res, lang) => {\n        return {\n          ...res,\n          [`Change language to ${lang}`]: `Cambiar idioma a ${lang}`,\n        }\n      }, {}),\n    \"Allow tracking\": \"Seguimiento\",\n    \"Allow tracking user interactions for usage analysis\": \"Permitir el seguimiento de las acciones del usuario con fines de análisis de uso\",\n    \"Yes\": \"Sí\",\n    \"No\": \"No\",\n  },\n\n  ErrorCatcher: {\n    \"Something went wrong :(\": \"Alguna cosa ha fallado :(\",\n    \"Try reloading the app to recover from it\": \"Intenta recargar la aplicación para continuar\",\n  },\n\n  Rac1ByDate: {\n    \"Rac1 Radio Podcasts Player\": \"Reproductor de podcasts de Rac1\",\n  },\n\n  Rac1Directe: {\n    \"Live\": \"En directo\",\n    \"Rac1 live\": \"Rac1 en Directo\",\n    \"Rac1 Radio Podcasts Player\": \"Reproductor de podcasts de Rac1\",\n  },\n\n  ReloadButton: {\n    \"Reload\": \"Recarga\",\n  },\n\n  Button: {\n    \"Key\": \"Tecla\",\n    \"Keys\": \"Teclas\",\n    \"Prev\": \"Ant.\",\n    \"Next\": \"Sig.\",\n    \"More\": \"Más\",\n    \"Less\": \"Menos\",\n    \"Play\": \"Play\",\n    \"Pause\": \"Pausa\",\n    \"Mute\": \"Silenciar\",\n    \"Unmute\": \"Act. sonido\",\n    \"Remove last\": \"Eliminar últ\",\n    \"Remove last podcast from playlist\": \"Eliminar el último podcast de la lista de reproducción\",\n    \"Play previous podcast\": \"Reproducir el podcast anterior\",\n    \"Play next podcast\": \"Reproducir el podcast seguinte\",\n    \"Toggle mute status\": \"Canviar el estado del silencio\",\n    \"Toggle Play/Pause\": \"Canviar Reproducir/Pausa\",\n    \"Show more controls\": \"Mostrar más controles\",\n    \"Show less controls\": \"Mostrar menos controles\",\n    ...[\n        { symbol: '10s', orig: '10 seconds', trans: '10 segundos'},\n        { symbol: '60s', orig: '1 minute'  , trans: '1 minuto'},\n        { symbol: '10m', orig: '10 minutes', trans: '10 minutos'},\n      ].reduce( (res, item) => {\n        return {\n          ...res,\n          [`-${ item.symbol }`]: `-${ item.symbol }`,\n          [`+${ item.symbol }`]: `+${ item.symbol }`,\n          [`Go backwards ${ item.orig }`]: `Retroceder ${ item.trans }`,\n          [`Go forward ${ item.orig }`  ]: `Avanzar ${ item.trans }`,\n        }\n      }, {}),\n  },\n}\n","import en_en from \"./en-en.lang.js\";\nimport ca_es from \"./ca-es.lang.js\";\nimport es_es from \"./es-es.lang.js\";\n\nexport default {\n  'en'   : en_en,\n  'en-en': en_en,\n  'en-us': en_en,\n  'en-au': en_en,\n  'ca'   : ca_es,\n  'ca-es': ca_es,\n  'es'   : es_es,\n  'es-es': es_es,\n};\n","import React from 'react';\n\nconst GAEventContext = React.createContext(() => {});\n\nexport default GAEventContext;\n\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nimport GAEventContext from './GAEventContext';\nimport GAListenerActive from './GAListenerActive';\n\n// Renders GA+children in production, only children for the rest\nclass GAListener extends React.Component {\n\n  sendEvent(origin, help, status) {\n    const event = {\n      category: origin,\n      action: help,\n    };\n\n    if ( typeof status === 'string' ) {\n      console.log(status);\n      event.label = status;\n    }\n\n    console.log(event);\n    ReactGA.event(event);\n  }\n\n  render() {\n    const { children, trackOptIn, ...props } = this.props;\n\n    // Disable GA unless user has opt'ed in to tracking\n    return trackOptIn ? (\n      <GAEventContext.Provider value={ this.sendEvent.bind(this) }>\n        <GAListenerActive { ...props } >\n          { children }\n        </GAListenerActive>\n      </GAEventContext.Provider>\n    ) : (\n      <GAEventContext.Provider value={ () => {} }>\n        { children }\n      </GAEventContext.Provider>\n    )\n  }\n}\n\nGAListener.defaultProps = {\n  ...GAListenerActive.defaultProps,\n  trackOptIn: false,\n};\n\nGAListener.propTypes = {\n  ...GAListenerActive.propTypes,\n  trackOptIn: PropTypes.bool.isRequired,\n};\n\nexport default GAListener;\n","import React from 'react';\n\nimport GAEventContext from './GAEventContext';\n\n// HOC to add `sendEvent` function respecting refs\nexport function withGAEvent(Component) {\n\n  // Wrapper component\n  class GAEvent extends React.Component {\n    render() {\n      const { forwardedRef, ...props } = this.props;\n\n      // Get `sendEvent` from context and pass it to the wrapped\n      // component, along with ref and the rest of props\n      return (\n        <GAEventContext.Consumer>\n          { sendEvent => <Component ref={ forwardedRef } { ...props } {...{ sendEvent }} /> }\n        </GAEventContext.Consumer>\n      );\n    }\n  }\n\n  // Return wrapper respecting ref\n  return React.forwardRef( (props, ref) => {\n    return <GAEvent { ...props } forwardedRef={ ref } />\n  });\n}\n\nexport default withGAEvent;\n","import GAListener from './GAListener';\nimport withGAEvent from './withGAEvent';\n\nexport { withGAEvent };\nexport default GAListener;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { translate } from 'react-translate'\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCalendarAlt as faByDate,\n  faBroadcastTower as faLive,\n  faArrowAltCircleUp as faUpgrade,\n  faLanguage,\n  faCaretRight,\n  faCaretDown,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport MediaQuery from 'react-responsive';\nimport {\n  slide as SmallMenu,\n  scaleRotate as BigMenu,\n} from 'react-burger-menu'\n\nimport { withGAEvent } from './GAListener';\nimport './AppMenu.css';\n\nclass AppMenu extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      isOpen: false,\n      isLanguageOpen: false,\n    };\n  }\n\n  renderLinks() {\n    const { newServiceWorkerDetected, trackOptIn, children, t } = this.props;\n    const { isLanguageOpen } = this.state;\n\n    return (\n      <div\n        style={{\n          padding: '3em 1em 1em',\n          background: `url(${ process.env.PUBLIC_URL }/logo-rac1.png)`,\n          backgroundSize: 50,\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center .5em',\n        }}>\n        <Link className='bm-item' onClick={ this.handleClick.bind(this) } to=\"/\">\n          <FontAwesomeIcon icon={ faByDate } style={{ marginRight: '.5em' }} />\n          <span>{ t(\"By date\") }</span>\n        </Link>\n        <Link className='bm-item' onClick={ this.handleClick.bind(this) } to=\"/live\" >\n          <FontAwesomeIcon icon={ faLive } style={{ marginRight: '.5em' }} />\n          <span>{ t(\"Live\") }</span>\n        </Link>\n        { newServiceWorkerDetected ? (\n            <a\n              href='/'\n              className='bm-item'\n              style={{ color: 'green' }}\n              title={ t(\"New version available!\") }\n              onClick={ this.handleClickUpdate.bind(this) }\n              >\n              <FontAwesomeIcon icon={ faUpgrade } style={{ marginRight: '.5em' }} />\n              <span>{ t(\"Update!\") }</span>\n            </a>\n          ) : null\n        }\n        <a\n          href='/'\n          className='bm-item'\n          title={ t(\"Change application language\") }\n          onClick={ this.handleLanguageSectionClick.bind(this) }\n          >\n          <FontAwesomeIcon icon={ faLanguage } style={{ marginRight: '.5em' }} />\n          <span>{ t(\"Language\") }</span>\n          <FontAwesomeIcon\n            icon={ isLanguageOpen ? faCaretDown : faCaretRight }\n            style={{ marginLeft: '.5em' }} />\n        </a>\n        { isLanguageOpen ? (\n          <ul style={{\n            listStyleType: 'none',\n            marginTop: 0,\n          }}>\n            { [\n                {code: 'ca', name: \"Català\"},\n                {code: 'es', name: \"Castellano\"},\n                {code: 'en', name: \"English\"},\n              ].map( lang => (\n                <li key={ lang.code } >\n                  <a\n                    href='/'\n                    className='bm-item'\n                    title={ t(`Change language to ${lang.name}`) }\n                    onClick={ this.handleClickLanguage.bind(this, lang.code) }\n                  >\n                    <span>{ lang.name }</span>\n                  </a>\n                </li>\n              ))\n            }\n          </ul>\n        ) : null }\n        <span style={{\n          display: 'flex',\n          alignItems: 'center',\n        }}>\n          <Switch\n            onChange={ this.props.onTrackOptIn }\n            disabled={ false }\n            checkedChildren={ t('Yes') }\n            unCheckedChildren={ t('No') }\n            checked={ trackOptIn }\n          />\n          <a\n            href='/'\n            className='bm-item'\n            title={ t(\"Allow tracking user interactions for usage analysis\") }\n            onClick={ this.handleClickOptTrackIn.bind(this) }\n            >\n            { t('Allow tracking') }\n          </a>\n        </span>\n        { children }\n      </div>\n    )\n  }\n\n  render() {\n    const { newServiceWorkerDetected } = this.props;\n    const { isOpen } = this.state;\n    const extraClass = newServiceWorkerDetected ? ' news' : '';\n\n    return (\n      <MediaQuery minWidth={ 1024 }>\n        { matches => {\n          const Menu = matches ? BigMenu : SmallMenu;\n\n          return (\n            <div className={ `menu-${matches ? 'big' : 'small'}${extraClass}` }>\n              <Menu\n                pageWrapId='page-wrap'\n                outerContainerId='router-container'\n                isOpen={ isOpen }\n                onStateChange={ state => this.handleMenuStateChange(state.isOpen) }\n                disableCloseOnEsc\n              >\n                { this.renderLinks() }\n              </Menu>\n            </div>\n          )\n        }}\n      </MediaQuery>\n    )\n  }\n\n  handleMenuStateChange(isOpen) {\n    if ( isOpen !== this.state.isOpen ) {\n      this.setState({\n        isOpen,\n      });\n      this.props.sendEvent('Menu', 'Change open state', `Menu is open: ${isOpen}`);\n    }\n  }\n\n  handleClick(e) {\n    this.handleMenuStateChange(false);\n    this.props.sendEvent('Menu', 'Click link', `${e.currentTarget.text}`);\n  }\n\n  handleLanguageSectionClick(e) {\n    const { isLanguageOpen } = this.state;\n    e.preventDefault();\n    this.setState({\n      ...this.state,\n      isLanguageOpen: !isLanguageOpen\n    });\n  }\n\n  handleClickLanguage(language, e) {\n    e.preventDefault();\n    this.handleMenuStateChange(false);\n    this.props.onLanguageChange(language);\n    this.props.sendEvent('Menu', 'Change language', `Current language: ${language}`);\n  }\n\n  handleClickUpdate(e) {\n    e.preventDefault();\n    this.handleMenuStateChange(false);\n    this.props.onLoadNewServiceWorkerAccept();\n    this.props.sendEvent('Menu', 'Update!');\n  }\n\n  handleClickOptTrackIn(e) {\n    e.preventDefault();\n    this.props.onTrackOptIn(!this.props.trackOptIn)\n    this.props.sendEvent('Menu', 'Change tracking preference', `Current tracking preference: ${!this.props.trackOptIn}`);\n    window.location.reload();\n  }\n}\n\nAppMenu.defaultProps = {\n  onLoadNewServiceWorkerAccept: () => {},\n  newServiceWorkerDetected: false,\n  onLanguageChange: language => {},\n  onTrackOptIn: optIn => {},\n  trackOptIn: false,\n  sendEvent: (origin, help, status) => {},\n};\n\nAppMenu.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n  newServiceWorkerDetected: PropTypes.bool.isRequired,\n  onLanguageChange: PropTypes.func.isRequired,\n  onTrackOptIn: PropTypes.func.isRequired,\n  trackOptIn: PropTypes.bool.isRequired,\n  sendEvent: PropTypes.func.isRequired,\n};\n\nexport default translate('AppMenu')(withGAEvent(AppMenu));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSyncAlt as faRefresh } from '@fortawesome/free-solid-svg-icons'\nimport { translate } from 'react-translate'\nimport { withGAEvent } from './GAListener';\n\n// Catches unhandled errors:\n// - Show it to user\n// - Send them to GA to help improve app\nclass ErrorCatcher extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      errorMessage: '',\n      errorStack: '',\n      info: '',\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      errorMessage: error.message,\n      errorStack: error.stack,\n    };\n  }\n\n  // Catch unhandled errors and send them to help improving the app\n  componentDidCatch(error, info) {\n\n    this.setState({\n      info: info.componentStack,\n    });\n\n    this.sendEvent('Unhandled Error');\n  }\n\n  reloadApp() {\n    this.sendEvent('Reload from Error');\n\n    // Reload app\n    window.location.reload();\n  }\n\n  // Send event to GA\n  sendEvent(event) {\n    this.props.sendEvent(event, this.props.origin, this.state.errorMessage);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      const { t } = this.props;\n      const { errorMessage, errorStack } = this.state;\n\n      // Show error to user\n      return (\n        <React.Fragment>\n          <h1>{ t('Something went wrong :(') }</h1>\n          <button\n            onClick={ this.reloadApp.bind(this) }\n            style={{ padding: '1em' }}\n          >\n            <FontAwesomeIcon\n              icon={ faRefresh }\n              style={{ margin: '0 .8em 0 .2em' }}\n            />\n            { t(\"Try reloading the app to recover from it\") }\n          </button>\n          <div style={{ textAlign: 'left' }}>\n            <h3>{ errorMessage }</h3>\n            <details style={{ whiteSpace: \"pre-wrap\" }}>\n              { errorStack }\n            </details>\n          </div>\n        </React.Fragment>\n      );\n    }\n\n    return this.props.children\n  }\n}\n\nErrorCatcher.defaultProps = {\n  origin: 'No name',\n};\n\nErrorCatcher.propTypes = {\n  origin: PropTypes.string.isRequired,\n};\n\nexport default translate('ErrorCatcher')(withGAEvent(ErrorCatcher));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from \"react-translate\"\n\nclass ButtonLegacy extends React.PureComponent {\n  keysString() {\n    if ( this.props.keys.length === 0 ) {\n      return '';\n    }\n\n    // Transform ' ' to 'Space'\n    // Transform letters (not texts) to uppercase\n    // Uniq with [...new Set()]\n    const { t } = this.props;\n    const keys = [\n      ...new Set(\n        this.props.keys\n          .map( key => key === ' ' ? 'Space' : key )\n          .map( key => key.length === 1 ? key.toUpperCase() : key )\n      )];\n    return ` | ${ t(`Key${ keys.length > 1 ? 's' : '' }`) }: ${ keys.join(', ') }`\n  }\n\n  render() {\n    const {\n      text,\n      help,\n      icon,\n      action,\n      keys,\n      style,\n      className,\n      t,\n      ...restProps\n    } = this.props;\n\n    const styleButton = {\n      borderRadius: '1em',\n      padding: '.5em',\n      margin: '.5em',\n      ...style,\n    };\n\n    const helpExtra = t(help) + this.keysString();\n\n    return (\n      <button\n        onClick={ action.bind(this, \"Button pressed\") }\n        aria-label={ helpExtra }\n        title={ helpExtra }\n        className={ 'rac1-controls-button' + (className ? ` ${className}` : '') }\n        style={ styleButton }\n        { ...restProps }\n      >\n        <div style={{\n          fontSize: 'calc(1em + 2.5vmin)',\n          fontWeight: 'bold',\n          minWidth: '1.5em',\n        }} >\n          { icon instanceof Function ? icon() : icon }\n        </div>\n        <span style={{\n          fontSize: 'calc(8px + 1vmin)',\n          color: '#333'\n        }}>\n          { t(text instanceof Function ? text() : text) }\n        </span>\n      </button>\n    )\n  }\n}\n\nButtonLegacy.defaultProps = {\n  action: () => {},\n  keys: [],\n};\n\nButtonLegacy.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node,\n  ]).isRequired,\n  icon: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node,\n  ]).isRequired,\n  action: PropTypes.func.isRequired,\n  help: PropTypes.string.isRequired,\n\n  // Get keys to let user know how to access the button\n  keys: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        shiftKey: PropTypes.bool,\n        altKey: PropTypes.bool,\n        ctrlKey: PropTypes.bool,\n        metaKey: PropTypes.bool,\n      }),\n    ])\n  ),\n};\n\nclass ButtonsGroup extends React.PureComponent {\n  render() {\n    const { buttons, keyHandlerFocus, children } = this.props;\n    return (\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100%',\n      }}>\n        { buttons.map( (control, index) => {\n            return <Button\n              key={ index }\n              onMouseUp={ e => keyHandlerFocus(e, true) }\n              action={ control.action.bind(this) }\n              help={ control.help }\n              text={ control.text }\n              icon={ control.icon }\n              keys={ control.keys }\n            />\n          })\n        }\n        { children }\n      </div>\n    )\n  }\n}\n\nButtonsGroup.defaultProps = {\n  keyHandlerFocus: (e, force) => {},\n};\n\nButtonsGroup.propTypes = {\n  keyHandlerFocus: PropTypes.func.isRequired,\n  buttons: PropTypes.arrayOf( PropTypes.shape( ButtonLegacy.propTypes ) )\n};\n\nconst Button = translate('Button')(ButtonLegacy);\nexport { Button, ButtonsGroup };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faVolumeUp,\n  faVolumeDown,\n  faVolumeOff,\n  faVolumeMute,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { Button } from './Button';\n\nclass Volume extends React.Component {\n  render() {\n    const { volume, muted } = this.props;\n    const title = \"Volume handler | Keys: Shift + Arrow Up, Shift + Arrow Down\";\n\n    // Select volume icon\n    const faVolume =\n      muted        ? faVolumeMute :\n      volume === 0 ? faVolumeOff  :\n      volume < .5  ? faVolumeDown : faVolumeUp;\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n      }}>\n        <div style={{\n          width: '100%',\n          minWidth: 40,\n          height: 100,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n          paddingTop: '.3em',\n        }}>\n          <Slider\n            onAfterChange={ () => this.props.keyHandlerFocus() }\n            onChange={ value => this.props.onSetVolume(value / 100) }\n            value={ volume * 100 }\n            vertical\n            aria-label={ title }\n            title={ title }\n          />\n        </div>\n        <div>\n          <Button\n            onMouseUp={ e => this.props.keyHandlerFocus(e, true) }\n            action={ () => this.props.onSetMuted( !muted ) }\n            help={ 'Toggle mute status' }\n            text={ muted ? 'Unmute' : 'Mute' }\n            icon={ <FontAwesomeIcon icon={ faVolume } /> }\n            keys={ [ 'M' ] }\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nVolume.defaultProps = {\n  keyHandlerFocus: () => {},\n  onSetVolume:     volume => {},\n  onSetMuted:      muted => {},\n  volume:          1,\n  muted:           false,\n};\n\nVolume.propTypes = {\n  keyHandlerFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onSetMuted: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  muted: PropTypes.bool.isRequired,\n};\n\nexport default Volume;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faPlay,\n  faPause,\n  faForward,\n  faFastForward,\n  faEye,\n  faEyeSlash,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { Button, ButtonsGroup } from './Button';\nimport Volume from './Volume';\nimport { withGAEvent } from './GAListener';\n\nclass Controls extends React.Component {\n\n  // Controls definitions:\n  // - Only button\n  // - Only key binding\n  // - Both\n  controls = [\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } flip=\"horizontal\" />,\n      text: 'Prev',\n      help: 'Play previous podcast',\n      action: () => this.props.onPlayPrev(),\n      group: 'basic',\n    },\n    {\n      icon: (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n        </span>\n      ),\n      text: '-10m',\n      help: 'Go backwards 10 minutes',\n      action: () => {\n        this.player().currentTime -= 600;\n        return `Current time: ${this.player().currentTime}`\n      },\n      keys: [ 'PageUp' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '-60s',\n      help: 'Go backwards 1 minute',\n      action: () => {\n        this.player().currentTime -= 60\n        return `Current time: ${this.player().currentTime}`\n      },\n      keys: [ 'ArrowUp' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />,\n      text: '-10s',\n      help: 'Go backwards 10 seconds',\n      action: () => {\n        this.player().currentTime -= 10\n        return `Current time: ${this.player().currentTime}`\n      },\n      keys: [ 'ArrowLeft' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: () => this.props.isPlaying ?\n         <FontAwesomeIcon icon={ faPause } /> :\n         <FontAwesomeIcon icon={ faPlay } /> ,\n      text: () => this.props.isPlaying ? 'Pause' : 'Play',\n      help: 'Toggle Play/Pause',\n      action: () => {\n        this.player().paused ? this.player().play() : this.player().pause()\n        return `Current pause status: ${this.player().paused}`\n      },\n      keys: [ ' ', 'p', 'P' ],\n      group: 'basic',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } />,\n      text: '+10s',\n      help: 'Go forward 10 seconds',\n      action: () => {\n        this.player().currentTime += 10\n        return `Current time: ${this.player().currentTime}`\n      },\n      keys: [ 'ArrowRight' ],\n      group: 'advanced next',\n    },\n    {\n      icon: (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '+60s',\n      help: 'Go forward 1 minute',\n      action: () => {\n        this.player().currentTime += 60\n        return `Current time: ${this.player().currentTime}`\n      },\n      keys: [ 'ArrowDown' ],\n      group: 'advanced next',\n    },\n    {\n      icon: (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <FontAwesomeIcon icon={ faForward } />\n          <FontAwesomeIcon icon={ faForward } />\n        </span>\n      ),\n      text: '+10m',\n      help: 'Go forward 10 minutes',\n      action: () => {\n        this.player().currentTime += 600\n        return `Current time: ${this.player().currentTime}`\n      },\n      keys: [ 'PageDown' ],\n      group: 'advanced next',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } />,\n      text: 'Next',\n      help: 'Play next podcast',\n      action: () => this.props.onPlayNext(),\n      keys: [ 'Enter' ],\n      group: 'basic',\n    },\n    {\n      help: 'Decrement volume 5%',\n      action: () => {\n        this.incrementVolume(-.05)\n        return `Current volume: ${this.player().volume}`\n      },\n      keys: [\n        '/',\n        {key: 'ArrowDown', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Increment volume 5%',\n      action: () => {\n        this.incrementVolume(.05)\n        return `Current volume: ${this.player().volume}`\n      },\n      keys: [\n        '*',\n        {key: 'ArrowUp', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Toggle mute status',\n      action: () => {\n        this.setMuted( !this.player().muted )\n        return `Current mute status: ${this.player().muted}`\n      },\n      keys: [ 'm', 'M' ],\n    },\n  ];\n\n  constructor(props) {\n    super();\n\n    // Keybindings disabled by default\n    // Enable for anything but mobiles\n    this.state = {\n      noKeys: true,\n    };\n\n    // Add extra controls\n    if ( props.extraControls.length ) {\n      this.controls = this.controls.concat( props.extraControls );\n    }\n\n    // Wrap control action to send event to GA on action execution\n    this.controls.forEach( c => {\n      c._action = c.action;\n      c.action = (origin) => this.sendEvent(origin, c.help, c._action());\n    });\n  }\n\n  keyHandlerFocus = () => {};\n  _keyHandlerFocus = (e, force) => {\n    let doFocus = true;\n\n    // Allow datepicker to get focus\n    if ( e && e.relatedTarget &&\n          this.props.allowFocus( e.relatedTarget ) ) {\n      doFocus = false;\n    }\n\n    if ( doFocus || force ) {\n      this.timer = setTimeout(() => this._keyHandler.focus(), 100);\n    }\n  };\n\n  componentDidMount() {\n\n    let noKeys = true;\n\n    // Disable key handler on mobile devices (enable on the rest)\n    if ( !(/Mobi|Android/i.test(navigator.userAgent)) ) {\n      noKeys = false;\n      this.keyHandlerFocus = this._keyHandlerFocus;\n      this.keyHandlerFocus();\n    }\n\n    this.setState({\n      ...this.state,\n      noKeys,\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  filterButtonsGroup(controls, group) {\n    const { hideButtons } = this.props;\n    const { noKeys } = this.state;\n\n    return controls\n\n      // Filter controls without button attributes\n      .filter( control => 'icon' in control && 'text' in control )\n\n      // Filter hidden buttons\n      .filter( control => !hideButtons.includes(control.text) )\n\n      // Filter buttons by group\n      .filter( control => control.group.split(' ').includes(group) )\n\n      // Remove keys info if keys are disabled\n      .map( control => {\n        if ( noKeys ) {\n          const { keys, ...rest } = control;\n          return rest\n        }\n        return control\n      })\n  }\n\n  render() {\n    const { showAdvanced, volumeAsAdvanced, volume, muted } = this.props;\n    const { noKeys } = this.state;\n\n    // Separate control buttons into 2 groups\n    const buttons = ['basic','advanced'].reduce( (res, group) => {\n      res[group] = this.filterButtonsGroup(this.controls, group);\n      return res;\n    }, {});\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n      }}>\n        { buttons['basic'].length ? (\n          <div style={{\n            display: 'flex',\n            alignItems: 'flex-end',\n          }}>\n            <ButtonsGroup\n              buttons={ buttons['basic'] }\n              keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n            >\n              { buttons['advanced'].length ? (\n                <Button\n                  onMouseUp={ e => this.keyHandlerFocus(e, true) }\n                  action={ this.handleShowAdvancedChange.bind(this, !showAdvanced) }\n                  help={ `Show ${ showAdvanced ? 'less' : 'more' } controls` }\n                  text={ showAdvanced ? 'Less' : 'More' }\n                  icon={ <FontAwesomeIcon icon={ showAdvanced ? faEyeSlash : faEye } /> }\n                />\n              ) : null }\n            </ButtonsGroup>\n            { !volumeAsAdvanced ? (\n              <Volume\n                volume={ volume }\n                muted={ muted }\n                onSetVolume={ this.setVolume.bind(this) }\n                onSetMuted={ this.setMuted.bind(this) }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n            ) : null }\n          </div>\n        ) : null }\n        <div style={{ display: 'flex' }}>\n          { showAdvanced && buttons['advanced'].length ? (\n            <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-around',\n            }}>\n              <ButtonsGroup\n                buttons={ this.filterButtonsGroup(buttons['advanced'], 'prev') }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n              <ButtonsGroup\n                buttons={ this.filterButtonsGroup(buttons['advanced'], 'next') }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n            </div>\n          ) : null }\n          { showAdvanced && volumeAsAdvanced ? (\n            <Volume\n              volume={ volume }\n              muted={ muted }\n              onSetVolume={ this.setVolume.bind(this) }\n              onSetMuted={ this.setMuted.bind(this) }\n              keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n            />\n          ) : null }\n        </div>\n        { noKeys ? null : (\n          <input\n            name='player-key-handler'\n            style={{ // Almost invisible ;)\n              width: '1px',\n              height: '1px',\n              border: 0,\n              margin: 0,\n              padding: 0,\n              bottom: 0,\n              right: 0,\n              position: 'fixed',\n              backgroundColor: 'transparent',\n              color: 'transparent',\n              cursor: 'default',\n            }}\n            ref={ element => { this._keyHandler = element } }\n            onKeyUp={ this.handleKey.bind(this) }\n            onBlur={ this.keyHandlerFocus.bind(this) }\n            aria-label=\"Key input handler\"\n          />\n        )}\n      </div>\n    );\n  }\n\n  player = () => this.props.getPlayer();\n\n  setMuted(muted) {\n    this.player().muted = muted;\n    this.props.onSetMuted(muted);\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.props;\n    let volumeNew = volume;\n\n    // Increment\n    if ( increment > 0 && volume < 1 ) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if ( increment < 0 && volume > 0 ) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    // Prevent updating volume if limit reached\n    if ( volumeNew !== volume ) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  // Send event to GA: get this func from GAListener HOC `withGAEvent`\n  sendEvent(origin, help, status) {\n    this.props.sendEvent(origin, help, status);\n  }\n\n  handleKey(e) {\n    let stopPropagation = false;\n\n    // Handle controls keys\n    this.controls.forEach( control => {\n      (control.keys||[]).forEach( key_orig => {\n\n        // Understand plain string or custom key object\n        let key = typeof key_orig === 'string' ? {key: key_orig} : key_orig;\n\n        // If it's exact key match\n        if(e.key === key.key &&\n          ['shiftKey', 'altKey', 'ctrlKey', 'metaKey']\n            .every( (mod) => !!e[mod] === !!key[mod] )) {\n          stopPropagation = true;\n          control.action(\"Key pressed\");\n        }\n      });\n    });\n\n    if ( stopPropagation ) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  handleShowAdvancedChange(showAdvanced, origin, event) {\n    event.preventDefault();\n    this.sendEvent(\n      origin,\n      this.props.onShowAdvancedChange(showAdvanced),\n    );\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:   e => {},\n  onSetMuted:    e => {},\n  onPlayPrev:    e => {},\n  onPlayNext:    e => {},\n  allowFocus:    e => {},\n  onShowAdvancedChange: e => {},\n  sendEvent:     (origin, help, status) => {},\n  extraControls: [],\n  hideButtons:   [],\n  volume:        1,\n  muted:         false,\n  isPlaying:     false,\n  showAdvanced:  false,\n  volumeAsAdvanced: false,\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  muted: PropTypes.bool.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onSetMuted: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  volumeAsAdvanced: PropTypes.bool.isRequired,\n  showAdvanced: PropTypes.bool.isRequired,\n  onShowAdvancedChange: PropTypes.func.isRequired,\n  hideButtons: PropTypes.arrayOf(\n    PropTypes.oneOf(\n      ['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s', 'Play/Pause']\n  )).isRequired,\n  extraControls: PropTypes.arrayOf(\n    // As a button, but `text` and `icon` are not required\n    PropTypes.shape({\n      ...Button.propTypes,\n      text: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n      ]),\n      icon: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n      ]),\n    })\n  ).isRequired,\n  sendEvent: PropTypes.func.isRequired,\n};\n\nexport default withGAEvent(Controls);\n\n","import React, { Component } from 'react';\n\nimport { translate } from \"react-translate\"\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\n\nclass Rac1Directe extends Component {\n  // Initial state\n  state = {\n    volume: 1,\n  };\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n\n    // Initial state\n    this.state = {\n      volume: 1,\n      muted: false,\n      isPlaying: false,\n    };\n  }\n\n  componentDidMount() {\n    const { t } = this.props;\n    this.initialTitle = document.title;\n    document.title = `${ t(this.initialTitle) } - ${ t(\"Live\") }`;\n  }\n\n  componentWillUnmount() {\n    // Unregister player event listeners\n    if ( this._player && this._player.removeEventListener ) {\n      this._player.removeEventListener('onPlay', this.handlePlayStatusChange.bind(this, true));\n      this._player.removeEventListener('onPause', this.handlePlayStatusChange.bind(this, false));\n    }\n\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { volume, muted, isPlaying } = this.state;\n    const { t } = this.props;\n    const currentPath = 'http://rac1.radiocat.net/;*.nsv';\n    const autoplay = true;\n    const title = t('Rac1 live');\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          allowFocus={ (el) => el.className.match( /rc-slider-handle/ ) }\n          isPlaying={ isPlaying }\n          onSetVolume={ volume => this.setState({ ...this.state, volume }) }\n          onSetMuted={ muted => this.setState({ ...this.state, muted }) }\n          hideButtons={['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s']}\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          title={ title }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          volume={ volume }\n          muted={ muted }\n          onPlay={ this.handlePlayStatusChange.bind(this, true) }\n          onPause={ this.handlePlayStatusChange.bind(this, false) }\n          onVolumeChanged={ e => this.setState({\n            ...this.state,\n            volume: e.currentTarget.volume,\n            muted: e.currentTarget.muted,\n          }) }\n        />\n      </React.Fragment>\n    );\n  }\n\n  handlePlayStatusChange(isPlaying) {\n    this.setState({\n      ...this.state,\n      isPlaying,\n    });\n  }\n}\n\nexport default translate('Rac1Directe')(Rac1Directe);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { translate } from \"react-translate\"\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = translate(\"ReloadButton\")( props => {\n  const { t, ...restProps } = props;\n  const text = t('Reload');\n  return (\n    <button\n      { ...restProps }\n      aria-label={ text }\n      style={{\n        borderRadius: '.5em',\n        padding: '.25em',\n        margin: '0 0 0 1em',\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#333'\n      }}>\n        { text }\n      </span>\n    </button>\n  )\n});\n\nclass Playlist extends React.PureComponent {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: '#333',\n        backgroundColor: 'white',\n        padding: '2em',\n        borderRadius: '1em',\n        margin: '1em',\n        textAlign: 'left',\n        position: 'relative',\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if ( e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/) ) {\n      focus = false;\n    }\n\n    if ( focus ) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MediaQuery from 'react-responsive';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends React.PureComponent {\n\n  renderChildren() {\n    const { children, current } = this.props;\n    return children === undefined || children.length === 0 ?\n      null : children.map( (child, index) =>\n          <li\n            key={ child.key }\n            style={{\n              position: 'relative',\n              marginLeft: '2.5em',\n              textIndent: '-1.5em',\n              padding: '1pt 0',\n            }}\n          >\n            { index === current ? (\n              <FontAwesomeIcon\n                icon={ faPlay }\n                style={{\n                  position: 'absolute',\n                  left: '-2.75em',\n                  padding: '1pt 0',\n                }}/>\n            ) : null\n            }\n            { child }\n          </li>\n        )\n  }\n\n  render() {\n    const { children } = this.props;\n    const styles = {\n      listStyleType: 'none',\n      marginLeft: 0,\n      paddingLeft: 0,\n      textAlign: 'left',\n    };\n\n    return children === undefined || children.length === 0 ?\n      null : (\n        <MediaQuery minWidth={ 1024 }>\n          { matches => {\n            return (\n              <ul style={{\n                ...styles,\n                columnCount: matches ? Math.floor(children.length / 10) || 1 : 1,\n              }}>\n                { this.renderChildren() }\n              </ul>\n            )\n          }}\n        </MediaQuery>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends React.PureComponent {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","import 'abortcontroller-polyfill'; // For GoogleBot\n\nclass Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  // Abort controller\n  controller = new AbortController();\n\n  // Anti-CORS backends\n  antiCorsBackends = [\n    { // Direct access to server\n      url: url => `${url}`,\n      parser: async response => {\n        return await response.text();\n      },\n      extraOptions: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n    },\n    {\n      url: url => `https://cors-anywhere.herokuapp.com/${url}`,\n      parser: response => response.text(),\n      extraOptions: {\n        credentials: 'same-origin',\n      },\n    },\n    {\n      url: url => `https://api.allorigins.ml/get?url=${encodeURIComponent(url)}`,\n      parser: async response => {\n        const json = await response.json();\n        if ( json.status.http_code === 200 ) {\n          return json.contents;\n        }\n        else {\n          throw Error(json);\n        }\n      },\n    },\n    { // https://github.com/messier31/cors-proxy-server\n      url: url => `https://secret-ocean-49799.herokuapp.com/${url}`,\n      parser: async response => {\n        return await response.text();\n      },\n      extraOptions: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n    },\n    /*\n    {\n      url: url => `http://www.whateverorigin.org/get?url=${encodeURIComponent(url)}`,\n      parser: async response => {\n        const text = await response.text();\n        console.log({text: JSON.parse(JSON.stringify(text))});\n        const json = JSON.parse(text);\n        console.log({json});\n        if ( json.status.http_code === 200 ) {\n          return json.contents;\n        }\n        else {\n          throw Error(json);\n        }\n      },\n      extraOptions: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        headers: {\n          \"Accept\": \"application/jsonp\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          \"Access-Control-Request-Method\": \"GET\",\n          \"Access-Control-Request-Headers\": \"content-type,script-charset\",\n        },\n      },\n    },\n    {\n      url: url => `https://crossorigin.me/${url}`,\n      parser: async response => await response.text(),\n      extraOptions: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n      },\n    },\n    {\n      url: url => `http://alloworigin.com/get?compress=1&url=${encodeURIComponent(url)}`,\n      parser: response => response.text(),\n      extraOptions: {\n      },\n    },\n    */\n  ];\n\n  constructor(props) {\n    const noop = () => {};\n    this.onListUpdate = props.onListUpdate || noop;\n    this.onError = props.onError || noop;\n    this.setDate(props.date);\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  // Raises exception on response error\n  handleFetchErrors(response) {\n    if ( !response.ok ) {\n      throw Error(`Rac1 backend: ${response.statusText}`);\n    }\n    return response;\n  }\n\n  // Catches the fetch error, original or 'self-raised'\n  catchFetchErrors(callback) {\n    return err => {\n      if ( err.name === 'AbortError' ) {\n        console.log(err.message);\n        return Promise.reject(err);\n      }\n      else {\n        err.message = `Rac1 backend: ${err.message}`;\n        if ( typeof callback === 'function' ) {\n          callback(err);\n        }\n        else {\n          this.onError(err);\n        }\n      }\n    }\n  }\n\n  setDate(date) {\n    if ( this.date !== date ) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if ( pageNumber === 0 ) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n\n      // Download podcast data if needed\n      .then( this.getPodcasts.bind(this, pageNumber) )\n\n      // Trigger event for list updated\n      .then( this.handleListUpdate.bind(this, pageNumber) )\n\n      // Catch Exceptions\n      .catch( this.catchFetchErrors() )\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map( podcast => {\n\n        // If it's a podcast and is not in the cache\n        if ( podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData) ) {\n\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n            .catch( this.catchFetchErrors() )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [ ...this._previous_uuids.filter(w => w.uuid !== '...') ];\n    let completed = true;\n\n    // Helper functions\n    const dateToString = d => `${d.getFullYear()}/${d.getMonth()+1}/${d.getDate()}`;\n    const compareDates = (d1, d2) => dateToString(d1) === dateToString(d2);\n    const filterByDates = podcast => {\n      return !(\"date\" in podcast) || compareDates( podcast.date, this.date )\n    };\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if ( pageUuids === undefined ) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n\n        // Add this page's podcasts to the list\n        pageUuids\n\n          // Filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n\n          // Filter out podcasts from other dates\n          .filter( filterByDates )\n\n          // Add remaining podcasts to the list\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map( podcast => this._podcastsData[podcast.uuid] || podcast )\n          // Filter out podcasts from other dates\n          .filter( filterByDates );\n\n    // Save complete list on finish\n    if ( completed ) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every( podcast => 'path' in podcast );\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach( (podcast,index) => {\n      if ( podcast.uuid === podcastNew.uuid ) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then( dataRaw => {\n\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n\n        // If it's the first page, call the rest\n        if ( pageNumber === 0 ) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        // Save in reversed order and along with the page number\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map( uuid => { return {uuid, page: pageNumber} } );\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0, backend=0) {\n\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    // Set next day's date and string\n    let next = new Date(this.date.getTime());\n    next.setDate(next.getDate() + 1);\n    let dateNext = '';\n\n    // Don't use next day date if it's 2018's last day\n    if ( !(next.getFullYear() === 2019 && next.getMonth() === 0 && next.getDate() === 1) ) {\n      dateNext =\n        pad2( next.getDate() ) + '/' +\n        pad2( 1 + next.getMonth() ) + '/' +\n        next.getFullYear();\n    }\n\n    return fetch(\n      this.antiCorsBackends[backend].url( // Anti CORS\n      \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + \"text=&programId=&sectionId=HOUR&\"\n      + `from=${date}&to=${dateNext}&pageNumber=${pageNumber}`),\n      {\n        ...this.antiCorsBackends[backend].extraOptions,\n        signal: this.controller.signal,\n      })\n      .then( this.handleFetchErrors )\n\n      .then( this.antiCorsBackends[backend].parser )\n\n      // Early catch backend error to retry with the next on list\n      // Reraise error when no more backends available\n      .catch( this.catchFetchErrors( err => {\n        console.error(err);\n\n        // If user aborted, reject promise silently\n        if ( err.name !== 'AbortError' ) {\n\n          // Deactivate AntiCORS feature\n          if ( true || backend === (this.antiCorsBackends.length - 1) ) {\n            //console.log(`AntiCORS backend ${backend} failed. No more backends available.`);\n            throw Error(err);\n          }\n          else {\n            console.log(`AntiCORS backend ${backend} failed. Trying next.`);\n            return this.getPage(pageNumber, backend + 1)\n          }\n        }\n        else {\n          Promise.reject(err);\n        }\n      }))\n  }\n\n  // Cached/compiled regexps & strings for parsing HTML\n  dataAttrsFind  = / class=\"(audioteca-item|pagination-link)\" /;\n  dataAttrsClean = /.* (data-(audio-id|audioteca-search-page))=\"([^\"]*)\".*/;\n  searchData = ['data-audio-id','data-audioteca-search-page'];\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const data = dataRaw\n      .split('\\n')\n\n      // Filter by class, eliminating sidebar unwanted info\n      .filter( line => this.dataAttrsFind.test(line) )\n\n      // Get relevant data-* attributes\n      .map( v => v.replace(this.dataAttrsClean, '$1=$3') )\n\n      // Convert to an array of 2 strings separating attr name and it's value\n      .map( line => line.split('=') );\n\n    return {\n\n      // Filter audio UUID's\n      uuidsPage: data\n        .filter( v => v[0] === this.searchData[0] )\n        .map( v => v[1] ),\n\n      // Filter page numbers\n      pages: data\n        .filter( v => v[0] === this.searchData[1] )\n        .map( v => Number(v[1]) ),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if ( uuid in this._podcastsData ) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(\n      `https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`,\n      { signal: this.controller.signal }\n    )\n      .then( this.handleFetchErrors )\n      .then( data => data.json() )\n      .then( podcast => {\n\n        // Fix server bug on year's last day, in which gives dates in the future\n        if ( podcast.dateTime.startsWith(\n          `${this.date.getFullYear() + 1}-${this.date.getMonth() + 1}`\n        )) {\n          podcast.dateTime = podcast.dateTime\n            .replace(`${this.date.getFullYear() + 1}`, `${this.date.getFullYear()}`);\n          console.log(\"Podcast date in future. Fixing to: \" + podcast.dateTime);\n        }\n\n        // Add some data to the podcast\n        podcast.uuid      = uuid;\n        podcast.date      = new Date(podcast.dateTime);\n        podcast.hour      = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute    = Number(podcast.audio.time.split(':')[1]);\n        podcast.title     = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n  }\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\n\nimport { translate } from \"react-translate\"\nimport ReactAudioPlayer from 'react-audio-player';\nimport MediaQuery from 'react-responsive';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\n\nclass Rac1ByDate extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour||0,\n        date.minute||0,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      muted: false,\n      isPlaying: false,\n      completed: false,\n      waitingUpdate: false,\n      showAdvancedControls: false,\n      hasError: false,\n      error: {},\n    };\n\n    this.extraControls = [\n      {\n        help: 'Reload playlist',\n        action: this.handleClickReload.bind(this),\n        keys: [ 'r', 'R' ],\n      },\n    ];\n\n    // Debugging on development\n    if ( process.env.NODE_ENV === 'development' ) {\n\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = props => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      };\n\n      // Add a button to remove the last podcast in the list\n      this.extraControls.push({\n        icon: 'RL',\n        text: 'Remove last',\n        help: 'Remove last podcast from playlist',\n        action: this.handlePodcastsLastRemove.bind(this),\n        group: 'advanced basic',\n      });\n    }\n  }\n\n  // Saves errors from backend into state so they\n  // can be reraised into ReactDOM tree and catched correctly\n  handleError(error) {\n    error.message = `Rac1ByDate: ${error.message}`;\n    this.setState({\n      hasError: true,\n      error: error,\n    });\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this));\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n      // Get errors from backend\n      onError: this.handleError.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n\n    // Unregister player event listeners\n    if ( this._player && this._player.removeEventListener ) {\n      this._player.removeEventListener('onPlay', this.handlePlayStatusChange.bind(this, true));\n      this._player.removeEventListener('onPause', this.handlePlayStatusChange.bind(this, false));\n    }\n\n    // Abort backend fetches\n    this.rac1.abort();\n\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const {\n      podcasts,\n      volume,\n      muted,\n      completed,\n      date,\n      maxDate,\n      isPlaying,\n      showAdvancedControls,\n      hasError,\n      error,\n    } = this.state;\n\n    // If we have a backend error, reraise into ReactDOM tree\n    if ( hasError ) {\n      throw Error(error);\n    }\n\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    const controls = <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          allowFocus={ el => el.className.match( /date-?picker|rc-slider-handle/ ) }\n          onPlayNext={ this.playNext.bind(this) }\n          onPlayPrev={ this.playPrev.bind(this) }\n          onSetVolume={ volume => this.setState({ ...this.state, volume }) }\n          onSetMuted={ muted => this.setState({ ...this.state, muted }) }\n          showAdvanced={ showAdvancedControls }\n          volumeAsAdvanced={ true }\n          onShowAdvancedChange={ show => {\n            this.setState({ ...this.state, showAdvancedControls: show });\n            return `${show ? 'Show' : 'Hide'} advanced buttons`\n          }}\n          isPlaying={ isPlaying }\n          ref={ el => { if ( el ) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          extraControls={ this.extraControls }\n        />;\n    const player = <ReactAudioPlayer\n          ref={ element => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          title={ title }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          onEnded={ this.playNext.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          onPlay={ this.handlePlayStatusChange.bind(this, true) }\n          onPause={ this.handlePlayStatusChange.bind(this, false) }\n          onVolumeChanged={ e => this.setState({\n            ...this.state,\n            volume: e.currentTarget.volume,\n            muted: e.currentTarget.muted,\n          }) }\n        />;\n    const playlist = <Playlist\n          date={ date }\n          minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n          maxDate={ maxDate }\n          completedDownload={ completed }\n          onClickReload={ this.handleClickReload.bind(this) }\n          onDateBlur={ () => this.keyHandlerFocus() }\n          onDateChange={ this.handleDateChange.bind(this) }\n        >\n          <PodcastsList current={ current } >\n            { podcasts.map((podcast, index) =>\n              <Podcast\n                key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n                { ...podcast }\n                onClick={ this.handlePodcastClick.bind(this, index) }\n              />\n            )}\n          </PodcastsList>\n        </Playlist>;\n\n    return (\n      <MediaQuery minWidth={ 1024 }>\n        { matches => {\n          if ( matches ) {\n            return (\n              <div style={{\n                display: 'flex',\n                alignItems: 'stretch',\n              }}>\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'stretch',\n                  justifyContent: 'space-evenly',\n                }}>\n                  <h3>{ title }</h3>\n                  { controls }\n                  { player }\n                </div>\n                { playlist }\n              </div>\n            );\n          } else {\n            return (\n              <React.Fragment>\n                <h3>{ title }</h3>\n                { controls }\n                { player }\n                { playlist }\n              </React.Fragment>\n            );\n          }\n        }}\n      </MediaQuery>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if( action !== 'POP' ) {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if ( date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if ( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if ( this.history.location.pathname !== newPath ) {\n      if ( !replace ) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handlePlayStatusChange(isPlaying) {\n    this.setState({\n      ...this.state,\n      isPlaying,\n    });\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if ( completed && currentUUID === '' ) {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if ( waitingUpdate === true && waitingUpdateNext === false ) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if ( date !== this.state.date ) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if ( date !== null ) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n\n    // If there is not already an incomplete update\n    if ( this.state.completed ) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter( podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if ( found.length > 0 ) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach( (podcast, index) => {\n      if ( podcast.uuid === uuid ) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const { t } = this.props;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if ( podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes() ) {\n      date.setHours( Number(podcast.hour) );\n      date.setMinutes( Number(podcast.minute) );\n    }\n\n    replace = currentUUID === '';\n    document.title = `${ t(this.initialTitle) }: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if ( current > 0 &&\n       'path' in this.state.podcasts[current - 1]) {\n      this.playPodcast(current - 1);\n      return `${this.state.podcasts[current - 1].titleFull}`\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if ( current < (this.state.podcasts.length - 1 ) &&\n       'path' in this.state.podcasts[current + 1]) {\n      this.playPodcast(current + 1);\n      return `${this.state.podcasts[current + 1].titleFull}`\n    }\n    else {\n      // If we are called to retry, update list\n      if ( retry ) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if ( !this.state.waitingUpdate ) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n          return \"Updating podcasts list\"\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nexport default translate('Rac1ByDate')(Rac1ByDate);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Storage from \"react-simple-storage\";\nimport { TranslatorProvider } from \"react-translate\"\nimport available from \"./i18n/available\"\n\nimport AppMenu from './AppMenu';\nimport GAListener from './GAListener';\nimport ErrorCatcher from './ErrorCatcher';\nimport Rac1Directe from './Rac1Directe';\nimport Rac1ByDate from './Rac1ByDate';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    // Get DoNotTrack user preference\n    // Deactivate tracking by default until legal modal is added to the app\n    const dnt = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;\n    this.dnt = process.env.NODE_ENV !== 'production' || dnt === \"1\" || dnt === \"yes\" || true;\n\n    this.registration = false;\n    this.state = {\n      newServiceWorkerDetected: false,\n      language: available.hasOwnProperty(navigator.language) ? navigator.language : 'en-en',\n      trackOptIn: !this.dnt,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  handleNewServiceWorker(event) {\n    this.registration = event.detail.registration;\n    this.setState({\n      ...this.state,\n      newServiceWorkerDetected: true,\n    });\n  }\n\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n    const { newServiceWorkerDetected, language, trackOptIn } = this.state;\n    const translations = available[language];\n    const withErrorCatcher = (origin, component) => <ErrorCatcher {...{ origin , key: origin }}>{ component }</ErrorCatcher>;\n\n    return (\n      <TranslatorProvider translations={ translations }>\n        <Router>\n          <div className=\"App\" id=\"router-container\">\n\n            {/* Persistent state saver into localStorage */}\n            <Storage\n              parent={ this }\n              prefix=\"App\"\n              blacklist={ ['newServiceWorkerDetected'] }\n            />\n\n            {/* GoogleAnalytics event provider and route change detector */}\n            <GAListener language={ language } trackOptIn={ trackOptIn } >\n\n              {/* Menu */}\n              <ErrorCatcher origin='AppMenu'>\n                <AppMenu\n                  newServiceWorkerDetected={ newServiceWorkerDetected }\n                  onLoadNewServiceWorkerAccept={ this.handleLoadNewServiceWorkerAccept.bind(this) }\n                  language={ language }\n                  onLanguageChange={ this.handleLanguageChange.bind(this) }\n                  onTrackOptIn={ trackOptIn => this.setState({...this.state, trackOptIn }) }\n                  trackOptIn={ trackOptIn }\n                />\n              </ErrorCatcher>\n\n              {/* App Route */}\n              <header className=\"App-header\" id=\"page-wrap\">\n                <Switch>\n                  <Route\n                    path=\"/live\"\n                    render={ props => withErrorCatcher('Rac1Live', <Rac1Directe { ...props } />) } />\n\n                  <Route path=\"/directe\">\n                    <Redirect to={{ pathname: \"live\" }} />\n                  </Route>\n\n                  <Route\n                    path=\"/:year/:month/:day/:hour/:minute\"\n                    render={ props => withErrorCatcher('Rac1ByDate 1', <Rac1ByDate { ...props } />) } />\n\n                  <Route\n                    path=\"/:year/:month/:day/:hour\"\n                    render={ props => withErrorCatcher('Rac1ByDate 2', <Rac1ByDate { ...props } />) } />\n\n                  <Route\n                    path=\"/:year/:month/:day\"\n                    render={ props => withErrorCatcher('Rac1ByDate 3', <Rac1ByDate { ...props } />) } />\n\n                  {/* Set default date to today */}\n                  <Redirect to={{ pathname: todayStr }} />\n                </Switch>\n              </header>\n            </GAListener>\n          </div>\n        </Router>\n      </TranslatorProvider>\n    )\n  }\n\n  handleLoadNewServiceWorkerAccept() {\n    this.props.onLoadNewServiceWorkerAccept(this.registration);\n  }\n\n  handleLanguageChange(language) {\n    this.setState({\n      ...this.state,\n      language,\n    });\n  }\n}\n\nApp.defaultProps = {\n  onLoadNewServiceWorkerAccept: registration => {},\n};\n\nApp.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill'; // For Google bot\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Callback to call when user accepts loading new service worker\n// - Send message to SW to trigger the update\n// - Once updated, reload this window to load new assets\nconst updateSW = (registration) => {\n  if( registration.waiting ) {\n\n    // When the user asks to refresh the UI, we'll need to reload the window\n    var preventDevToolsReloadLoop;\n    navigator.serviceWorker.addEventListener('controllerchange', function(event) {\n\n      // Ensure refresh is only called once.\n      // This works around a bug in \"force update on reload\".\n      if (preventDevToolsReloadLoop) {\n        return;\n      }\n\n      preventDevToolsReloadLoop = true;\n      console.log('Controller loaded');\n      window.location.reload();\n    });\n\n    // Send a message to the new serviceWorker to activate itself\n    registration.waiting.postMessage('skipWaiting');\n  }\n};\n\nReactDOM.render(\n  <App onLoadNewServiceWorkerAccept={ updateSW } />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({\n\n  // When new ServiceWorker is available, trigger an event on `document`,\n  // passing `registration` as extra data\n  onUpdate: registration => {\n    var event = new CustomEvent('onNewServiceWorker', { detail: { registration } });\n    document.dispatchEvent(event);\n  }\n\n});\n"],"sourceRoot":""}