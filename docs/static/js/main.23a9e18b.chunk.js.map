{"version":3,"sources":["rac1.js","App.js","serviceWorker.js","index.js"],"names":["handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","error","console","dataAttrsFind","dataAttrsClean","Rac1","props","Object","classCallCheck","this","noop","date","onListUpdate","onPodcastUpdate","_podcastsData","_pages_uuids","getPodcastsUUIDs","then","getPodcasts","bind","pageNumber","podcasts","_this","handleListUpdate","map","podcast","uuid","getPodcastData","handlePodcastUpdate","newList","pageIndex","pages","pageUuids","undefined","push","podcastIndex","found","done","podcastNew","index","page","_this2","arguments","length","getPage","dataRaw","_this2$parsePage","parsePage","uuidsPage","reverse","toLocaleDateString","fetch","concat","credentials","text","catch","searchData","data","match","v","replace","split","filter","includes","Number","_this3","json","audio","hour","time","App","possibleConstructorReturn","getPrototypeOf","call","state","current","Date","volume","controls","icon","action","playPrev","react_default","a","createElement","style","letterSpacing","paddingRight","player","currentTime","paused","play","pause","playNext","keyHandlerFocus","rac1","setState","objectSpread","_this$state","autoplay","className","title","name","width","height","border","margin","padding","position","ref","element","_keyHandler","onKeyUp","handleKey","onBlur","control","key","onClick","borderRadius","fontSize","fontWeight","Function","color","bundle_default","_player","src","path","autoPlay","preload","onEnded","backgroundColor","textAlign","listStyleType","marginLeft","paddingLeft","left","href","handleClickPodcast","textDecoration","focus","log","toConsumableArray","playPodcast","audioEl","e","stopPropagation","preventDefault","increment","volumeNew","setVolume","shiftKey","incrementVolume","muted","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23a9e18b.chunk.js","sourcesContent":["\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nfunction catchFetchErrors(error) {\n  console.error(error);\n}\n\nconst dataAttrsFind  = /.*\"(audioteca-item|pagination-link)\" (data-[^=]*)=\"([^\"]*)\"[ \\t>]/g;\nconst dataAttrsClean = /^.*[ \\t](data-[^=]*)=\"([^\"]*)\"[ \\t>].*$/;\n\nclass Rac1 {\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n    this.onPodcastUpdate = props.onPodcastUpdate || noop;\n\n    // Cache for UUID => podcast\n    this._podcastsData = {};\n\n    // Cache for pageNumber => UUIDs\n    this._pages_uuids = [];\n\n    // Begin work\n    this.getPodcastsUUIDs()\n      .then(this.getPodcasts.bind(this, 0));\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    // Trigger event for list updated\n    this.handleListUpdate();\n\n    return podcasts\n      .map(podcast => {\n        if(podcast.uuid !== '...') {\n          this.getPodcastData(podcast.uuid)\n            // Trigger event for each podcast when updated\n            .then(this.handlePodcastUpdate.bind(this, pageNumber))\n        }\n        return podcast;\n      })\n  }\n\n  handleListUpdate() {\n    let newList = [];\n\n    // Create a virtual list of all podcasts ordered correctly\n    for(let pageIndex in this.pages) {\n      var pageUuids = this._pages_uuids[ this.pages[pageIndex] ];\n\n      if(pageUuids === undefined) {\n        // Set temporal UUID for unresolved pages\n        newList.push({uuid: '...'});\n      }\n      else {\n\n        for(let podcastIndex in pageUuids) {\n          const podcast = pageUuids[podcastIndex];\n\n          let found = false;\n          for(let done in newList) {\n            if(newList[done].uuid === podcast.uuid) {\n              found = true;\n            }\n          }\n          if(!found) {\n            newList.push(podcast);\n          }\n        }\n\n      }\n    }\n\n    this.onListUpdate(newList);\n  }\n\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    for( let index in this._pages_uuids[pageNumber] ) {\n      if(this._pages_uuids[pageNumber][index].uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    }\n    this.onPodcastUpdate(podcastNew);\n  }\n\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n          this.pages = pages.reverse();\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          for(let page in this.pages) {\n\n            // Don't call again first page\n            if(this.pages[page] !== 0) {\n              this.getPodcastsUUIDs(this.pages[page])\n                .then(this.getPodcasts.bind(this, this.pages[page]));\n            }\n          }\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => {return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  getPage(pageNumber) {\n    const date = this.date.toLocaleDateString(\"es-ES\");\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://www.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${date}&pageNumber=${pageNumber}&btn-search=`,\n      {\n        //mode: 'no-cors',\n        credentials: 'omit',\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n      .catch(catchFetchErrors)\n  }\n\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .match(dataAttrsFind)\n      .map(v => v.replace(dataAttrsClean, '$1=$2').split('='))\n      .filter(v => searchData.includes(v[0]));\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  getPodcastData(uuid) {\n    return fetch(`https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`)\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n        podcast.uuid = uuid;\n        podcast.audio.hour = podcast.audio.time.split(':')[0];\n        this._podcastsData[uuid] = podcast;\n        return podcast;\n      })\n      .catch(catchFetchErrors)\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Rac1 from './rac1';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      podcasts: [\n      ],\n      current: 0,\n      date: new Date(), // Today\n      volume: 1,\n      controls: [],\n    };\n\n    this.controls = [\n      {\n        icon: '⏮',\n        text: 'Prev',\n        action: this.playPrev,\n      },\n      {\n        icon: <span style={{ letterSpacing: -10, paddingRight: 11 }}>⯇⯇⯇</span>,\n        text: '-10m',\n        action: () => this.player().currentTime -= 600,\n      },\n      {\n        icon: <span style={{ letterSpacing: -10, paddingRight: 11 }}>⯇⯇</span>,\n        text: '-60s',\n        action: () => this.player().currentTime -= 60,\n      },\n      {\n        icon: '⯇',\n        text: '-10s',\n        action: () => this.player().currentTime -= 10,\n      },\n      {\n        icon: '▮▶',\n        text: 'Play/Pause',\n        action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      },\n      {\n        icon: '⯈',\n        text: '+10s',\n        action: () => this.player().currentTime += 10,\n      },\n      {\n        icon: <span style={{ letterSpacing: -10, paddingRight: 11 }}>⯈⯈</span>,\n        text: '+60s',\n        action: () => this.player().currentTime += 60,\n      },\n      {\n        icon: <span style={{ letterSpacing: -10, paddingRight: 11 }}>⯈⯈⯈</span>,\n        text: '+10m',\n        action: () => this.player().currentTime += 600,\n      },\n      {\n        icon: '⏭',\n        text: 'Next',\n        action: this.playNext,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    this.keyHandlerFocus();\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n      onPodcastUpdate: this.handlePodcastUpdate.bind(this),\n    });\n    this.setState({\n      ...this.state,\n      controls: this.controls,\n    });\n  }\n\n  render() {\n    const { podcasts, current, volume } = this.state;\n    const autoplay = current > 0;\n\n    return (\n      <div\n        className=\"App\"\n      >\n        <header className=\"App-header\">\n          { podcasts !== undefined && podcasts.length > 0 ?\n              (\n                <h3>{ 'audio' in podcasts[current] ?\n                    podcasts[current].audio.title :\n                    podcasts[current].uuid\n                }</h3>\n              ) : null\n          }\n          <input\n            name=\"player-key-handler\"\n            style={{\n              width: '0px',\n              height: '0px',\n              border: 0,\n              margin: 0,\n              padding: 0,\n              position: 'absolute'\n            }}\n            ref={(element) => { this._keyHandler = element; }}\n            onKeyUp={ this.handleKey.bind(this) }\n            onBlur={ this.keyHandlerFocus.bind(this) }\n          />\n          <div>\n            { this.state.controls.map((control, index) => {\n              return (\n                <button\n                  key={ index }\n                  onClick={ control.action.bind(this) }\n                  style={{\n                    borderRadius: \"1em\",\n                    padding: \"1em\",\n                    margin: \"1em\",\n                  }}\n                >\n                  <div style={{ fontSize: 30, fontWeight: 'bold', width: '2em' }}>\n                    { control.icon instanceof Function ? control.icon() : control.icon }\n                  </div>\n                  <span style={{ fontSize: 9, color: '#777' }}>\n                    { control.text instanceof Function ? control.text() : control.text }\n                  </span>\n                </button>\n              )\n            }) }\n          </div>\n\t\t\t\t\t<ReactAudioPlayer\n            ref={(element) => { this._player = element; }}\n            style={{ width: '100%' }}\n            src={ podcasts !== undefined && podcasts.length > current && 'path' in podcasts[current] ? podcasts[current].path : '' }\n\t\t\t\t\t\tautoPlay={ autoplay }\n\t\t\t\t\t\tcontrols\n            preload={ (autoplay ? \"auto\" : \"metadata\") }\n            onEnded={ this.playNext.bind(this) }\n            volume={ volume }\n\t\t\t\t\t/>\n          <div\n            style={{\n              color: \"#777\",\n              backgroundColor: \"white\",\n              padding: \"2em\",\n              borderRadius: \"1em\",\n              margin: \"1em\",\n              textAlign: \"left\",\n            }}>\n            { podcasts !== undefined && podcasts.length > 0 ?\n              (\n                <ul style={{ listStyleType: \"none\", marginLeft: 0, paddingLeft: 0 }}>\n                  { podcasts.map((podcast, index) =>\n                    <li key={ podcast.uuid } style={{ position: \"relative\", marginLeft: \"1em\" }}>\n                      { index !== current ? null :\n                        <span style={{ position: \"absolute\", left: \"-1em\" }}>⯈</span>\n                      }\n                      { !('path' in podcast) ?\n                          (\n                            <span>{ podcast.uuid }</span>\n                          ) :\n                          (\n                            <a\n                              href={ podcast.path }\n                              onClick={ this.handleClickPodcast.bind(this, index) }\n                              style={{ textDecoration: \"none\" }}\n                            >\n                              { podcast.audio.hour }h: { podcast.audio.title } \n                            </a>\n                          )\n                      }\n                    </li>\n                  ) }\n                </ul>\n              ) : null\n            }\n          </div>\n        </header>\n      </div>\n    );\n  }\n\n  keyHandlerFocus() {\n    this._keyHandler.focus();\n  }\n\n  handleListUpdate(newList) {\n    console.log({newList});\n    this.setState({\n      ...this.state,\n      podcasts: newList\n    });\n  }\n\n  handlePodcastUpdate(podcastNew) {\n    let newList = this.state.podcasts;\n\n    console.log({podcastNew});\n\n    for(let index in this.state.podcasts) {\n      const podcast = this.state.podcasts[index];\n      if(podcastNew.uuid === podcast.uuid) {\n        newList = [ ...newList ];\n        newList[index] = podcastNew;\n      }\n    }\n    this.setState({\n      ...this.state,\n      podcasts: newList\n    });\n  }\n\n  playPodcast(index) {\n    this.setState({\n      ...this.state,\n      current: index,\n    });\n  }\n\n  playPrev() {\n    if(this.state.current > 0) {\n      this.playPodcast(this.state.current - 1);\n    }\n  }\n\n  playNext() {\n    if(this.state.current < (this.state.podcasts.length - 1)) {\n      this.playPodcast(this.state.current + 1);\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handleClickPodcast(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.setState({\n      ...this.state,\n      volume: volume,\n    });\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.state;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = true;\n    switch(e.key) {\n      case 'Enter':\n        this.playNext();\n        break;\n      case ' ':\n      case 'p':\n      case 'P':\n        this.player().paused ? this.player().play() : this.player().pause();\n        break;\n      case 'ArrowLeft':\n        this.player().currentTime -= 10;\n        break;\n      case 'ArrowRight':\n        this.player().currentTime += 10;\n        break;\n      case 'ArrowUp':\n        if(e.shiftKey) {\n          this.incrementVolume(.05);\n        }\n        else {\n          this.player().currentTime -= 60;\n        }\n        break;\n      case 'ArrowDown':\n        if(e.shiftKey) {\n          this.incrementVolume(-.05);\n        }\n        else {\n          this.player().currentTime += 60;\n        }\n        break;\n      case 'PageUp':\n        this.player().currentTime -= 600;\n        break;\n      case 'PageDown':\n        this.player().currentTime += 600;\n        break;\n      case '*':\n        this.incrementVolume(.05);\n        break;\n      case '/':\n        this.incrementVolume(-.05);\n        break;\n      case 'm':\n      case 'M':\n        this.player().muted = !this.player().muted;\n        break;\n      default:\n        stopPropagation = false;\n        break;\n    }\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}