{"version":3,"sources":["GAListener.jsx","AppMenu.jsx","Button.jsx","Volume.jsx","Controls.jsx","Rac1Directe.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","Rac1ByDate.jsx","App.js","serviceWorker.js","index.js"],"names":["GAListenerProd","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loadGoogleTag","ReactGA","initialize","sendPageView","context","router","history","location","listen","set","page","pathname","pageview","GACode","global","dataLayer","gtag","push","arguments","Date","setTimeout","scriptTag","document","createElement","src","concat","body","appendChild","props","children","React","Component","contextTypes","PropTypes","object","GAListener","dnt","navigator","doNotTrack","window","msDoNotTrack","react__WEBPACK_IMPORTED_MODULE_5___default","a","AppMenu","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","isOpen","_this$props","newServiceWorkerDetected","react_default","style","padding","background","backgroundSize","backgroundRepeat","backgroundPosition","Link","className","onClick","handleClick","bind","to","index_es","icon","faByDate","marginRight","faDirecte","href","color","title","handleClickUpdate","faUpgrade","_this2","extraClass","react_responsive_default","minWidth","matches","BurgerMenu","pageWrapId","outerContainerId","onStateChange","handleMenuStateChange","disableCloseOnEsc","renderLinks","setState","e","preventDefault","onLoadNewServiceWorkerAccept","defaultProps","Button","keys","length","toConsumableArray","Set","map","key","toUpperCase","join","text","help","action","restProps","objectWithoutProperties","styleButton","objectSpread","borderRadius","margin","helpExtra","keysString","assign","aria-label","fontSize","fontWeight","Function","PureComponent","ButtonsGroup","_this$props2","buttons","keyHandlerFocus","display","justifyContent","width","control","index","Button_Button","onMouseUp","force","Volume","volume","muted","faVolume","faVolumeMute","faVolumeOff","faVolumeDown","faVolumeUp","flexDirection","height","alignItems","paddingTop","es","onAfterChange","onChange","value","onSetVolume","vertical","onSetMuted","Controls","controls","faFastForward","flip","onPlayPrev","group","faForward","player","currentTime","position","left","isPlaying","faPause","faPlay","paused","play","pause","onPlayNext","incrementVolume","shiftKey","setMuted","_keyHandlerFocus","doFocus","relatedTarget","allowFocus","timer","_keyHandler","focus","getPlayer","extraControls","noKeys","test","userAgent","clearTimeout","hideButtons","filter","includes","split","rest","console","log","_this3","showAdvanced","volumeAsAdvanced","reduce","res","filterButtonsGroup","Button_ButtonsGroup","handleShowAdvancedChange","faEyeSlash","faEye","src_Volume","setVolume","name","border","bottom","right","backgroundColor","cursor","ref","element","onKeyUp","handleKey","onBlur","increment","volumeNew","stopPropagation","forEach","key_orig","every","mod","event","onShowAdvancedChange","Rac1Directe","_player","audioEl","initialTitle","_this$state","Fragment","src_Controls","el","match","bundle_default","autoPlay","controlsList","preload","onPlay","handlePlayStatusChange","onPause","onVolumeChanged","currentTarget","ReloadButton","marginBottom","faRefresh","Playlist","completedDownload","date","minDate","maxDate","textAlign","entry_default","handleDateChange","handleDateBlur","required","clearIcon","calendarIcon","faCalendar","Playlist_ReloadButton","onClickReload","disabled","setHours","setMinutes","onDateChange","onDateBlur","PodcastsList","current","undefined","child","marginLeft","textIndent","styles","listStyleType","paddingLeft","columnCount","Math","floor","renderChildren","Podcast","num","path","uuid","hour","minute","textDecoration","Rac1","_podcastsData","_pages_uuids","_previous_uuids","controller","AbortController","dataAttrsFind","dataAttrsClean","onListUpdate","setDate","abort","response","ok","Error","statusText","err","message","error","updateList","pageNumber","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","catch","catchFetchErrors","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","w","completed","dateToString","d","getFullYear","getMonth","getDate","filterByDates","d1","d2","pageUuids","podcastPage","allCompleted","podcastNew","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","next","getTime","dateNext","fetch","credentials","signal","handleFetchErrors","_this5","searchData","data","line","v","replace","Number","_this6","Promise","resolve","json","dateTime","startsWith","audio","time","appTabletTitle","titleFull","Rac1ByDate","currentUUID","getDateFromParams","waitingUpdate","showAdvancedControls","handleClickReload","assertThisInitialized","params","year","month","day","unlisten","handleHistoryChange","rac1","dateText","findCurrentPodcast","autoplay","currentPath","playNext","playPrev","show","onEnded","playlist","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","_this$state2","waitingUpdateNext","historyPush","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","App","registration","addEventListener","handleNewServiceWorker","removeEventListener","detail","todayStr","HashRouter","id","src_AppMenu_0","handleLoadNewServiceWorkerAccept","Switch","Route","render","src_Rac1Directe","src_Rac1ByDate","Redirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","ReactDOM","src_App_0","preventDevToolsReloadLoop","waiting","reload","postMessage","getElementById","URL","process","origin","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","CustomEvent","dispatchEvent"],"mappings":"gLAIMA,cAKJ,SAAAA,IAAa,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAA,OACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAGKI,cADU,kBAEfC,IAAQC,WAFO,kBAHLT,mFASXG,KAAKO,aAAaP,KAAKQ,QAAQC,OAAOC,QAAQC,UAC9CX,KAAKQ,QAAQC,OAAOC,QAAQE,OAAOZ,KAAKO,mDAG7BI,GACXN,IAAQQ,IAAI,CAAEC,KAAMH,EAASI,WAC7BV,IAAQW,SAASL,EAASI,gDAGdE,GAEZC,EAAOC,UAAYD,EAAOC,WAAa,GACvCD,EAAOE,KAAO,WAAYF,EAAOC,UAAUE,KAAKC,YAEhDJ,EAAOE,KAAK,KAAM,IAAIG,MACtBL,EAAOE,KAAK,SAAUH,GAGtBO,WAAW,WACT,IAAIC,EAAYC,SAASC,cAAc,UACvCF,EAAUG,IAAV,+CAAAC,OAA+DZ,GAC/DS,SAASI,KAAKC,YAAYN,IACzB,oCAIH,OAAOzB,KAAKgC,MAAMC,gBAxCOC,IAAMC,WAA7BvC,EACGwC,aAAe,CACpB3B,OAAQ4B,YAAUC,YA2ChBC,mLAGF,IAAMC,EAAMC,UAAUC,YAAcC,OAAOD,YAAcD,UAAUG,aAGnE,MAAwD,MAARJ,GAAuB,QAARA,EAC7DxC,KAAKgC,MAAMC,SACXY,EAAAC,EAAAnB,cAAC/B,EAAD,KACII,KAAKgC,MAAMC,iBATIC,IAAMC,WAehBI,0VC7CTQ,sBACJ,SAAAA,IAAc,IAAAlD,EAAA,OAAAC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAA+C,IACZlD,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAAiD,GAAA5C,KAAAH,QACKmD,MAAQ,CACXC,QAAQ,GAHEvD,6EAOA,IAAAwD,EACmCrD,KAAKgC,MAA5CsB,EADID,EACJC,yBAA0BrB,EADtBoB,EACsBpB,SAElC,OACEsB,EAAAT,EAAAnB,cAAA,OACE6B,MAAO,CACLC,QAAS,cACTC,WAAY,qBACZC,eAAgB,GAChBC,iBAAkB,YAClBC,mBAAoB,gBAEtBN,EAAAT,EAAAnB,cAACmC,EAAA,EAAD,CAAMC,UAAU,UAAUC,QAAUhE,KAAKiE,YAAYC,KAAKlE,MAAQmE,GAAG,KACnEZ,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOC,IAAWd,MAAO,CAAEe,YAAa,UACzDhB,EAAAT,EAAAnB,cAAA,wBAEF4B,EAAAT,EAAAnB,cAACmC,EAAA,EAAD,CAAMC,UAAU,UAAUC,QAAUhE,KAAKiE,YAAYC,KAAKlE,MAAQmE,GAAG,YACnEZ,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOG,IAAYhB,MAAO,CAAEe,YAAa,UAC1DhB,EAAAT,EAAAnB,cAAA,2BAEA2B,EACEC,EAAAT,EAAAnB,cAAA,KACE8C,KAAK,IACLV,UAAU,UACVP,MAAO,CAAEkB,MAAO,SAChBC,MAAM,yBACNX,QAAUhE,KAAK4E,kBAAkBV,KAAKlE,OAEtCuD,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOQ,IAAYrB,MAAO,CAAEe,YAAa,UAC1DhB,EAAAT,EAAAnB,cAAA,wBAEA,KAEJM,oCAKC,IAAA6C,EAAA9E,KACCsD,EAA6BtD,KAAKgC,MAAlCsB,yBACAF,EAAWpD,KAAKmD,MAAhBC,OACF2B,EAAazB,EAA2B,QAAU,GAExD,OACEC,EAAAT,EAAAnB,cAACqD,EAAAlC,EAAD,CAAYmC,SAAU,KAClB,SAAAC,GACA,OAAKA,EAED3B,EAAAT,EAAAnB,cAAA,OAAKoC,UAAY,WAAagB,GAC5BxB,EAAAT,EAAAnB,cAACwD,EAAA,YAAD,CACEC,WAAW,YACXC,iBAAiB,kBACjBjC,OAASA,EACTkC,cAAgB,SAAAnC,GAAK,OAAI2B,EAAKS,sBAAsBpC,EAAMC,SAC1DoC,mBAAiB,GAEfV,EAAKW,gBAMXlC,EAAAT,EAAAnB,cAAA,OAAKoC,UAAY,aAAegB,GAC9BxB,EAAAT,EAAAnB,cAACwD,EAAA,MAAD,CACEC,WAAW,YACXC,iBAAiB,kBACjBG,mBAAiB,GAEfV,EAAKW,gEAUDrC,GACpBpD,KAAK0F,SAAS,CACZtC,+CAIQuC,GACV3F,KAAKuF,uBAAsB,6CAGXI,GAChBA,EAAEC,iBACF5F,KAAKuF,uBAAsB,GAC3BvF,KAAKgC,MAAM6D,sCAnGO3D,IAAMC,YAuG5BY,EAAQ+C,aAAe,CACrBD,6BAA8B,aAC9BvC,0BAA0B,GAQbP,kDCjITgD,uLAEF,GAAgC,IAA3B/F,KAAKgC,MAAMgE,KAAKC,OACnB,MAAO,GAMT,IAAMD,EAAIlG,OAAAoG,EAAA,EAAApG,CACL,IAAIqG,IACLnG,KAAKgC,MAAMgE,KACRI,IAAK,SAAAC,GAAG,MAAY,MAARA,EAAc,QAAUA,IACpCD,IAAK,SAAAC,GAAG,OAAmB,IAAfA,EAAIJ,OAAgBI,EAAIC,cAAgBD,MAE3D,eAAAxE,OAAiBmE,EAAKC,OAAS,EAAI,IAAM,GAAzC,MAAApE,OAAkDmE,EAAKO,KAAK,wCAGrD,IAAAlD,EAUHrD,KAAKgC,MARPwE,EAFKnD,EAELmD,KACAC,EAHKpD,EAGLoD,KACApC,EAJKhB,EAILgB,KACAqC,EALKrD,EAKLqD,OAEAlD,GAPKH,EAML2C,KANK3C,EAOLG,OACAO,EARKV,EAQLU,UACG4C,EATE7G,OAAA8G,EAAA,EAAA9G,CAAAuD,EAAA,4DAYDwD,EAAW/G,OAAAgH,EAAA,EAAAhH,CAAA,CACfiH,aAAc,MACdtD,QAAS,OACTuD,OAAQ,OACLxD,GAGCyD,EAAYR,EAAOzG,KAAKkH,aAE9B,OACE3D,EAAAT,EAAAnB,cAAA,SAAA7B,OAAAqH,OAAA,CACEnD,QAAU0C,EACVU,aAAaH,EACbtC,MAAQsC,EACRlD,UAAY,wBAA0BA,EAAS,IAAAlC,OAAOkC,GAAc,IACpEP,MAAQqD,GACHF,GAELpD,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACV6D,SAAU,sBACVC,WAAY,OACZrC,SAAU,UAERZ,aAAgBkD,SAAWlD,IAASA,GAExCd,EAAAT,EAAAnB,cAAA,QAAM6B,MAAO,CACX6D,SAAU,oBACV3C,MAAO,SAEL8B,aAAgBe,SAAWf,IAASA,WA3D3BtE,IAAMsF,eAkE3BzB,EAAOD,aAAe,CACpBY,OAAQ,aACRV,KAAM,QA8BFyB,mLACK,IAAA5H,EAAAG,KAAA0H,EACwC1H,KAAKgC,MAA5C2F,EADDD,EACCC,QAASC,EADVF,EACUE,gBAAiB3F,EAD3ByF,EAC2BzF,SAClC,OACEsB,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVqE,QAAS,OACTC,eAAgB,gBAChBC,MAAO,SAELJ,EAAQvB,IAAK,SAAC4B,EAASC,GACrB,OAAO1E,EAAAT,EAAAnB,cAACuG,EAAD,CACL7B,IAAM4B,EACNE,UAAY,SAAAxC,GAAC,OAAIiC,EAAgBjC,GAAG,IACpCe,OAASsB,EAAQtB,OAAOxC,KAAKrE,GAC7B4G,KAAOuB,EAAQvB,KACfD,KAAOwB,EAAQxB,KACfnC,KAAO2D,EAAQ3D,KACf2B,KAAOgC,EAAQhC,SAInB/D,UArBiBC,IAAMsF,eA2BjCC,EAAa3B,aAAe,CAC1B8B,gBAAiB,SAACjC,EAAGyC,mBCjHjBC,2LACK,IAAAxI,EAAAG,KAAAqD,EACmBrD,KAAKgC,MAAvBsG,EADDjF,EACCiF,OAAQC,EADTlF,EACSkF,MACV5D,EAAQ,8DAGR6D,EACJD,EAAeE,IACJ,IAAXH,EAAeI,IACfJ,EAAS,GAAMK,IAAeC,IAEhC,OACErF,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVqE,QAAS,OACTgB,cAAe,SACff,eAAgB,aAEhBvE,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVuE,MAAO,OACP9C,SAAU,GACV6D,OAAQ,IACRjB,QAAS,OACTkB,WAAY,SACZF,cAAe,SACfG,WAAY,SAEZzF,EAAAT,EAAAnB,cAACsH,EAAA,EAAD,CACEC,cAAgB,kBAAMrJ,EAAKmC,MAAM4F,mBACjCuB,SAAW,SAAAC,GAAK,OAAIvJ,EAAKmC,MAAMqH,YAAYD,EAAQ,MACnDA,MAAiB,IAATd,EACRgB,UAAQ,EACRlC,aAAazC,EACbA,MAAQA,KAGZpB,EAAAT,EAAAnB,cAAA,WACE4B,EAAAT,EAAAnB,cAACuG,EAAD,CACEC,UAAY,SAAAxC,GAAC,OAAI9F,EAAKmC,MAAM4F,gBAAgBjC,GAAG,IAC/Ce,OAAS,kBAAM7G,EAAKmC,MAAMuH,YAAahB,IACvC9B,KAAO,qBACPD,KAAO+B,EAAQ,SAAW,OAC1BlE,KAAOd,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOmE,IAC/BxC,KAAO,CAAE,gBA1CA9D,IAAMC,YAkD3BkG,EAAOvC,aAAe,CACpB8B,gBAAiB,aACjByB,YAAiB,SAAAf,KACjBiB,WAAiB,SAAAhB,KACjBD,OAAiB,EACjBC,OAAiB,GAWJF,QClETmB,cAqIJ,SAAAA,EAAYxH,GAAO,IAAAnC,EAAA,OAAAC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAAwJ,IACjB3J,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAA0J,GAAArJ,KAAAH,QAhIFyJ,SAAW,CACT,CACEpF,KAAMd,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOqF,IAAgBC,KAAK,eACnDnD,KAAM,OACNC,KAAM,wBACNC,OAAQ,kBAAM7G,EAAKmC,MAAM4H,cACzBC,MAAO,SAET,CACExF,KACEd,EAAAT,EAAAnB,cAAA,YACE4B,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOyF,IAAYH,KAAK,eACzCpG,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOyF,IAAYH,KAAK,gBAG7CnD,KAAM,OACNC,KAAM,0BACNC,OAAQ,kBAAM7G,EAAKkK,SAASC,aAAe,KAC3ChE,KAAM,CAAE,UACR6D,MAAO,iBAET,CACExF,KACEd,EAAAT,EAAAnB,cAAA,YACE4B,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CACEC,KAAMyF,IACNH,KAAK,aACLnG,MAAO,CAAEyG,SAAU,WAAYC,KAAM,WACvC3G,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CACEC,KAAMyF,IACNH,KAAK,aACLnG,MAAO,CAAEyG,SAAU,WAAYC,KAAM,aAG3C1D,KAAM,OACNC,KAAM,wBACNC,OAAQ,kBAAM7G,EAAKkK,SAASC,aAAe,IAC3ChE,KAAM,CAAE,WACR6D,MAAO,iBAET,CACExF,KAAMd,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOyF,IAAYH,KAAK,eAC/CnD,KAAM,OACNC,KAAM,0BACNC,OAAQ,kBAAM7G,EAAKkK,SAASC,aAAe,IAC3ChE,KAAM,CAAE,aACR6D,MAAO,iBAET,CACExF,KAAM,kBAAMxE,EAAKmC,MAAMmI,UACpB5G,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAO+F,MACxB7G,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOgG,OAC3B7D,KAAM,kBAAM3G,EAAKmC,MAAMmI,UAAY,QAAU,QAC7C1D,KAAM,oBACNC,OAAQ,kBAAM7G,EAAKkK,SAASO,OAASzK,EAAKkK,SAASQ,OAAS1K,EAAKkK,SAASS,SAC1ExE,KAAM,CAAE,IAAK,IAAK,KAClB6D,MAAO,SAET,CACExF,KAAMd,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOyF,MAC9BtD,KAAM,OACNC,KAAM,wBACNC,OAAQ,kBAAM7G,EAAKkK,SAASC,aAAe,IAC3ChE,KAAM,CAAE,cACR6D,MAAO,iBAET,CACExF,KACEd,EAAAT,EAAAnB,cAAA,YACE4B,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CACEC,KAAMyF,IACNtG,MAAO,CAAEyG,SAAU,WAAYC,KAAM,WACvC3G,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CACEC,KAAMyF,IACNtG,MAAO,CAAEyG,SAAU,WAAYC,KAAM,aAG3C1D,KAAM,OACNC,KAAM,sBACNC,OAAQ,kBAAM7G,EAAKkK,SAASC,aAAe,IAC3ChE,KAAM,CAAE,aACR6D,MAAO,iBAET,CACExF,KACEd,EAAAT,EAAAnB,cAAA,YACE4B,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOyF,MACxBvG,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOyF,OAG5BtD,KAAM,OACNC,KAAM,wBACNC,OAAQ,kBAAM7G,EAAKkK,SAASC,aAAe,KAC3ChE,KAAM,CAAE,YACR6D,MAAO,iBAET,CACExF,KAAMd,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAOqF,MAC9BlD,KAAM,OACNC,KAAM,oBACNC,OAAQ,kBAAM7G,EAAKmC,MAAMyI,cACzBzE,KAAM,CAAE,SACR6D,MAAO,SAET,CACEpD,KAAM,sBACNC,OAAQ,kBAAM7G,EAAK6K,iBAAiB,MACpC1E,KAAM,CACJ,IACA,CAACK,IAAK,YAAasE,UAAU,KAGjC,CACElE,KAAM,sBACNC,OAAQ,kBAAM7G,EAAK6K,gBAAgB,MACnC1E,KAAM,CACJ,IACA,CAACK,IAAK,UAAWsE,UAAU,KAG/B,CACElE,KAAM,qBACNC,OAAQ,kBAAM7G,EAAK+K,UAAW/K,EAAKkK,SAASxB,QAC5CvC,KAAM,CAAE,IAAK,OAIEnG,EASnB+H,gBAAkB,aATC/H,EAUnBgL,iBAAmB,SAAClF,EAAGyC,GACrB,IAAI0C,GAAU,EAGTnF,GAAKA,EAAEoF,eACNlL,EAAKmC,MAAMgJ,WAAYrF,EAAEoF,iBAC7BD,GAAU,IAGPA,GAAW1C,KACdvI,EAAKoL,MAAQzJ,WAAW,kBAAM3B,EAAKqL,YAAYC,SAAS,OApBzCtL,EAuJnBkK,OAAS,kBAAMlK,EAAKmC,MAAMoJ,aAnJnBpJ,EAAMqJ,cAAcpF,SACvBpG,EAAK4J,SAAW5J,EAAK4J,SAAS5H,OAAQG,EAAMqJ,gBAL7BxL,mFA0BjBG,KAAKsL,QAAS,EAGP,gBAAgBC,KAAK9I,UAAU+I,aACpCxL,KAAKsL,QAAS,EACdtL,KAAK4H,gBAAkB5H,KAAK6K,iBAC5B7K,KAAK4H,kEAKP6D,aAAazL,KAAKiL,kDAGDxB,EAAUI,GAAO,IAAA/E,EAAA9E,KAC1B0L,EAAgB1L,KAAKgC,MAArB0J,YAER,OAAOjC,EACJkC,OAAQ,SAAA3D,GAAO,MAAI,SAAUA,GAAW,SAAUA,IAClD2D,OAAQ,SAAA3D,GAAO,OAAK0D,EAAYE,SAAS5D,EAAQxB,QACjDmF,OAAQ,SAAA3D,GAAO,OAAIA,EAAQ6B,MAAMgC,MAAM,KAAKD,SAAS/B,KACrDzD,IAAK,SAAA4B,GACJ,GAAKlD,EAAKwG,OAAS,KACTtF,EAAkBgC,EAAlBhC,KAAS8F,EADAhM,OAAA8G,EAAA,EAAA9G,CACSkI,EADT,UAGjB,OADA+D,QAAQC,IAAI,CAAChG,SACN8F,EAET,OAAO9D,qCAIJ,IAAAiE,EAAAjM,KAAAqD,EACkDrD,KAAKgC,MAAtDkK,EADD7I,EACC6I,aAAcC,EADf9I,EACe8I,iBAAkB7D,EADjCjF,EACiCiF,OAAQC,EADzClF,EACyCkF,MAC1CZ,EAAU,CAAC,QAAQ,YAAYyE,OAAQ,SAACC,EAAKxC,GAEjD,OADAwC,EAAIxC,GAASoC,EAAKK,mBAAmBL,EAAKxC,SAAUI,GAC7CwC,GACN,IAEH,OACE9I,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVqE,QAAS,OACTgB,cAAe,SACff,eAAgB,aAEdH,EAAO,MAAU1B,OACjB1C,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVqE,QAAS,OACTkB,WAAY,aAEZxF,EAAAT,EAAAnB,cAAC4K,EAAD,CACE5E,QAAUA,EAAO,MACjBC,gBAAkB5H,KAAK4H,gBAAgB1D,KAAKlE,OAE1C2H,EAAO,SAAa1B,OACpB1C,EAAAT,EAAAnB,cAACuG,EAAD,CACEC,UAAY,SAAAxC,GAAC,OAAIsG,EAAKrE,gBAAgBjC,GAAG,IACzCe,OAAS1G,KAAKwM,yBAAyBtI,KAAKlE,MAAOkM,GACnDzF,KAAI,QAAA5E,OAAYqK,EAAe,OAAS,OAApC,aACJ1F,KAAO0F,EAAe,OAAS,OAC/B7H,KAAOd,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAO6H,EAAeO,IAAaC,QAE3D,MAEHP,EAQC,KAPF5I,EAAAT,EAAAnB,cAACgL,EAAD,CACErE,OAASA,EACTC,MAAQA,EACRc,YAAcrJ,KAAK4M,UAAU1I,KAAKlE,MAClCuJ,WAAavJ,KAAK4K,SAAS1G,KAAKlE,MAChC4H,gBAAkB5H,KAAK4H,gBAAgB1D,KAAKlE,SAIhD,KACJuD,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CAAEqE,QAAS,SACnBqE,GAAgBvE,EAAO,SAAa1B,OACpC1C,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVqE,QAAS,OACTgB,cAAe,SACff,eAAgB,iBAEhBvE,EAAAT,EAAAnB,cAAC4K,EAAD,CACE5E,QAAU3H,KAAKsM,mBAAmB3E,EAAO,SAAc,QACvDC,gBAAkB5H,KAAK4H,gBAAgB1D,KAAKlE,QAE9CuD,EAAAT,EAAAnB,cAAC4K,EAAD,CACE5E,QAAU3H,KAAKsM,mBAAmB3E,EAAO,SAAc,QACvDC,gBAAkB5H,KAAK4H,gBAAgB1D,KAAKlE,SAG9C,KACFkM,GAAgBC,EAChB5I,EAAAT,EAAAnB,cAACgL,EAAD,CACErE,OAASA,EACTC,MAAQA,EACRc,YAAcrJ,KAAK4M,UAAU1I,KAAKlE,MAClCuJ,WAAavJ,KAAK4K,SAAS1G,KAAKlE,MAChC4H,gBAAkB5H,KAAK4H,gBAAgB1D,KAAKlE,QAE5C,MAENuD,EAAAT,EAAAnB,cAAA,SACEkL,KAAK,qBACLrJ,MAAO,CACLuE,MAAO,MACPe,OAAQ,MACRgE,OAAQ,EACR9F,OAAQ,EACRvD,QAAS,EACTsJ,OAAQ,EACRC,MAAO,EACP/C,SAAU,QACVgD,gBAAiB,cACjBvI,MAAO,cACPwI,OAAQ,WAEVC,IAAM,SAAAC,GAAanB,EAAKf,YAAckC,GACtCC,QAAUrN,KAAKsN,UAAUpJ,KAAKlE,MAC9BuN,OAASvN,KAAK4H,gBAAgB1D,KAAKlE,MACnCoH,aAAW,wDAQVmB,GACPvI,KAAK+J,SAASxB,MAAQA,EACtBvI,KAAKgC,MAAMuH,WAAWhB,qCAGdD,GACRtI,KAAK+J,SAASzB,OAASA,EACvBtI,KAAKgC,MAAMqH,YAAYf,2CAGTkF,GAAW,IACjBlF,EAAWtI,KAAKgC,MAAhBsG,OACJmF,EAAYnF,EAGXkF,EAAY,GAAKlF,EAAS,IAC7BmF,EAAYnF,GAAW,EAAIkF,EAAalF,EAASkF,EAAY,GAI1DA,EAAY,GAAKlF,EAAS,IAC7BmF,EAAYnF,IAAYkF,EAAalF,EAASkF,EAAY,GAIvDC,IAAcnF,GACjBtI,KAAK4M,UAAUa,qCAIT9H,GACR,IAAI+H,GAAkB,EAGtB1N,KAAKyJ,SAASkE,QAAS,SAAA3F,IACpBA,EAAQhC,MAAM,IAAI2H,QAAS,SAAAC,GAG1B,IAAIvH,EAA0B,kBAAbuH,EAAwB,CAACvH,IAAKuH,GAAYA,EAGxDjI,EAAEU,MAAQA,EAAIA,KACf,CAAC,WAAY,SAAU,UAAW,WAC/BwH,MAAO,SAACC,GAAD,QAAWnI,EAAEmI,OAAWzH,EAAIyH,OACtC/B,QAAQC,IAAIhE,EAAQvB,MACpBiH,GAAkB,EAClB1F,EAAQtB,cAKTgH,IACH/H,EAAE+H,kBACF/H,EAAEC,mEAImBsG,EAAc6B,GACrCA,EAAMnI,iBACN5F,KAAKgC,MAAMgM,qBAAqB9B,UAzVbhK,IAAMC,WA6V7BqH,EAAS1D,aAAe,CACtBuD,YAAe,SAAA1D,KACf4D,WAAe,SAAA5D,KACfiE,WAAe,SAAAjE,KACf8E,WAAe,SAAA9E,KACfqF,WAAe,SAAArF,KACfqI,qBAAsB,SAAArI,KACtB0F,cAAe,GACfK,YAAe,GACfpD,OAAe,EACfC,OAAe,EACf4B,WAAe,EACf+B,cAAe,EACfC,kBAAkB,GAmCL3C,QCpUAyE,cAzEb,SAAAA,EAAYjM,EAAOtB,GAAS,IAAAb,EAAA,OAAAC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAAiO,IAC1BpO,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAAmO,GAAA9N,KAAAH,QATFmD,MAAQ,CACNmF,OAAQ,GAURzI,EAAKa,QAAUsB,EAAMtB,QAGrBb,EAAKsD,MAAQ,CACXmF,OAAQ,EACRC,OAAO,EACP4B,WAAW,GATatK,wEAH1B,OAAOG,KAAKkO,QAAQC,qEAiBpBnO,KAAKoO,aAAe1M,SAASiD,MAC7BjD,SAASiD,MAAT,GAAA9C,OAAoB7B,KAAKoO,aAAzB,6DAKA1M,SAASiD,MAAQ3E,KAAKoO,8CAGf,IAAAtJ,EAAA9E,KAAAqO,EAC8BrO,KAAKmD,MAAlCmF,EADD+F,EACC/F,OAAQC,EADT8F,EACS9F,MAAO4B,EADhBkE,EACgBlE,UAKvB,OACE5G,EAAAT,EAAAnB,cAAC4B,EAAAT,EAAMwL,SAAP,KACE/K,EAAAT,EAAAnB,cAAA,UAJU,mBAKV4B,EAAAT,EAAAnB,cAAC4M,EAAD,CACEnD,UAAYpL,KAAK+J,OAAO7F,KAAKlE,MAC7BsI,OAASA,EACTC,MAAQA,EACRyC,WAAa,SAACwD,GAAD,OAAQA,EAAGzK,UAAU0K,MAAO,qBACzCtE,UAAYA,EACZd,YAAc,SAAAf,GAAM,OAAIxD,EAAKY,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GAAmBgF,EAAK3B,MAAxB,CAA+BmF,aACvDiB,WAAa,SAAAhB,GAAK,OAAIzD,EAAKY,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GAAmBgF,EAAK3B,MAAxB,CAA+BoF,YACrDmD,YAAa,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAExEnI,EAAAT,EAAAnB,cAAC+M,EAAA5L,EAAD,CACEqK,IAAK,SAACC,GAActI,EAAKoJ,QAAUd,GACnC5J,MAAO,CAAEuE,MAAO,QAChBnG,IApBc,kCAqBd+M,UApBW,EAqBXhK,MApBQ,kBAqBR8E,UAAQ,EACRmF,aAAa,aACbC,QAAsB,OACtBvG,OAASA,EACTC,MAAQA,EACRuG,OAAS9O,KAAK+O,uBAAuB7K,KAAKlE,MAAM,GAChDgP,QAAUhP,KAAK+O,uBAAuB7K,KAAKlE,MAAM,GACjDiP,gBAAkB,SAAAtJ,GAAC,OAAIb,EAAKY,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GAClBgF,EAAK3B,MADa,CAErBmF,OAAQ3C,EAAEuJ,cAAc5G,OACxBC,MAAO5C,EAAEuJ,cAAc3G,4DAOV4B,GACrBnK,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEEgH,sBA9EoBhI,uCCKpBgN,EAAe,SAACnN,GAEpB,OACEuB,EAAAT,EAAAnB,cAAA,SAAA7B,OAAAqH,OAAA,GACOnF,EADP,CAEEoF,aAJS,SAKT5D,MAAO,CACLuD,aAAc,OACdtD,QAAS,QACTuD,OAAQ,eAGVzD,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACV6D,SAAU,qBACVC,WAAY,OACZ8H,aAAc,WAEd7L,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAMgL,OAEzB9L,EAAAT,EAAAnB,cAAA,QAAM6B,MAAO,CACX6D,SAAU,oBACV3C,MAAO,SApBA,YA4BT4K,mLACK,IAAAjM,EACyDrD,KAAKgC,MAA7DuN,EADDlM,EACCkM,kBAAmBC,EADpBnM,EACoBmM,KAAMvN,EAD1BoB,EAC0BpB,SAAUwN,EADpCpM,EACoCoM,QAASC,EAD7CrM,EAC6CqM,QAEpD,OACEnM,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVkB,MAAO,OACPuI,gBAAiB,QACjBxJ,QAAS,MACTsD,aAAc,MACdC,OAAQ,MACR2I,UAAW,OACX1F,SAAU,WACV5C,SAAU,UAEV9D,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVqE,QAAS,OACTC,eAAgB,SAChBiB,WAAY,WAEZxF,EAAAT,EAAAnB,cAACiO,EAAA9M,EAAD,CACEqG,SAAWnJ,KAAK6P,iBAAiB3L,KAAKlE,MACtCuN,OAASvN,KAAK8P,eAAe5L,KAAKlE,MAClCyP,QAAUA,EACVC,QAAUA,EACVK,UAAW,EACX3G,MAAQoG,EACRQ,UAAY,KACZC,aAAe1M,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CAAiBC,KAAM6L,QAExC3M,EAAAT,EAAAnB,cAACwO,EAAD,CACEnM,QAAUhE,KAAKgC,MAAMoO,cAAclM,KAAKlE,MACxCqQ,UAAYd,KAGhBhM,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVmM,UAAW,WAET1N,6CAMOuN,GACfA,EAAKc,SAAS,GACdd,EAAKe,WAAW,GAChBvQ,KAAKgC,MAAMwO,aAAahB,0CAGX7J,GACb,IAAIwF,GAAQ,EACPxF,GAAKA,EAAEoF,eACVpF,EAAEoF,cAAchH,UAAU0K,MAAM,6BAChCtD,GAAQ,GAGLA,GACHnL,KAAKgC,MAAMyO,WAAW9K,UA1DLzD,IAAMsF,eAgE7B8H,EAASxJ,aAAe,CACtBsK,cAAe,SAACzK,KAChB8K,WAAY,SAAC9K,KACb6K,aAAc,SAAC7K,KACf4J,mBAAmB,EACnBC,KAAM,IAAIjO,KACVmO,QAAS,IAAInO,MAaA+N,QCpHToB,2LAEa,IAAArN,EACerD,KAAKgC,MAA3BC,EADOoB,EACPpB,SAAU0O,EADHtN,EACGsN,QAClB,YAAoBC,IAAb3O,GAA8C,IAApBA,EAASgE,OACxC,KAAOhE,EAASmE,IAAK,SAACyK,EAAO5I,GAAR,OACjB1E,EAAAT,EAAAnB,cAAA,MACE0E,IAAMwK,EAAMxK,IACZ7C,MAAO,CACLyG,SAAU,WACV6G,WAAY,QACZC,WAAY,SACZtN,QAAS,UAGTwE,IAAU0I,EACVpN,EAAAT,EAAAnB,cAACyC,EAAA,EAAD,CACEC,KAAOgG,IACP7G,MAAO,CACLyG,SAAU,WACVC,KAAM,UACNzG,QAAS,WAEX,KAEFoN,sCAKH,IAAAhR,EAAAG,KACCiC,EAAajC,KAAKgC,MAAlBC,SACF+O,EAAS,CACbC,cAAe,OACfH,WAAY,EACZI,YAAa,EACbvB,UAAW,QAGb,YAAoBiB,IAAb3O,GAA8C,IAApBA,EAASgE,OACxC,KACE1C,EAAAT,EAAAnB,cAACqD,EAAAlC,EAAD,CAAYmC,SAAW,MACnB,SAAAC,GACA,OACE3B,EAAAT,EAAAnB,cAAA,MAAI6B,MAAK1D,OAAAgH,EAAA,EAAAhH,CAAA,GACJkR,EADI,CAEPG,YAAajM,GAAUkM,KAAKC,MAAMpP,EAASgE,OAAS,KAAW,KAE7DpG,EAAKyR,2BAhDIpP,IAAMsF,eAyDjCkJ,EAAa5K,aAAe,GASb4K,QCtETa,6MAyBJtN,YAAc,SAAC0B,GAAD,OAAO9F,EAAKmC,MAAMgC,QAAQ2B,4EAxB/B,IAEM6L,EAFNnO,EACoCrD,KAAKgC,MAAxCyP,EADDpO,EACCoO,KAAMC,EADPrO,EACOqO,KAAMC,EADbtO,EACasO,KAAMC,EADnBvO,EACmBuO,OAAQjN,EAD3BtB,EAC2BsB,MAGlC,OACEpB,EAAAT,EAAAnB,cAAA,YACK8P,EAKGlO,EAAAT,EAAAnB,cAAA,KACE8C,KAAOgN,EACPzN,QAAUhE,KAAKiE,YAAYC,KAAKlE,MAChCwD,MAAO,CAAEqO,eAAgB,SAEvBF,EALJ,IAKaC,IAdVJ,EAcwBI,GAdT,GAAK,IAAM,IAAOJ,EAcC,GALrC,KAK6C7M,GAR7CpB,EAAAT,EAAAnB,cAAA,YAAQ+P,WATAxP,IAAMsF,eA4B5B+J,EAAQzL,aAAe,CACrB9B,QAAS,SAAC2B,MAaG4L,QCqQAO,aApSb,SAAAA,EAAY9P,GAAQlC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAA8R,GAAA9R,KAXpB+R,cAAgB,GAWG/R,KARnBgS,aAAe,GAQIhS,KALnBiS,gBAAkB,GAKCjS,KAFnBkS,WAAa,IAAIC,gBAEEnS,KA6BnBoS,cAAiB,6CA7BEpS,KA8BnBqS,eAAiB,8BA5BfrS,KAAKsS,aAAetQ,EAAMsQ,cADb,aAEbtS,KAAKuS,QAAQvQ,EAAMwN,0DAInBxP,KAAKkS,WAAWM,kDAIAC,GAChB,IAAMA,EAASC,GACb,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,2CAIQI,GACG,eAAbA,EAAIhG,KACPd,QAAQC,IAAI6G,EAAIC,SAGhB/G,QAAQgH,MAAMF,mCAQVrD,GACDxP,KAAKwP,OAASA,IACjBxP,KAAKiS,gBAAkB,IAEzBjS,KAAKwP,KAAOA,EACZxP,KAAKgT,kDAIkB,IAAdC,EAAc3R,UAAA2E,OAAA,QAAA2K,IAAAtP,UAAA,GAAAA,UAAA,GAAH,EAQpB,OAPoB,IAAf2R,IACHjT,KAAKgS,aAAe,GACpBhS,KAAKkT,MAAQ,CAAC,GACdlT,KAAKmT,oBAIAnT,KAAKoT,iBAAiBH,GAG1BI,KAAMrT,KAAKsT,YAAYpP,KAAKlE,KAAMiT,IAGlCI,KAAMrT,KAAKmT,iBAAiBjP,KAAKlE,KAAMiT,IAGvCM,MAAOvT,KAAKwT,sDAGLP,EAAYQ,GAAU,IAAA5T,EAAAG,KAChC,OAAOyT,EACJrN,IAAK,SAAAsN,GAWJ,MARsB,QAAjBA,EAAQhC,MAAoBgC,EAAQhC,QAAQ7R,EAAKkS,eAIpDlS,EAAK8T,eAAeD,EAAQhC,MACzB2B,KAAMxT,EAAK+T,oBAAoB1P,KAAKrE,EAAMoT,IAC1CM,MAAO1T,EAAK2T,kBAEVE,+CAOM,IAAA5O,EAAA9E,KACb6T,EAAO/T,OAAAoG,EAAA,EAAApG,CAAQE,KAAKiS,gBAAgBtG,OAAO,SAAAmI,GAAC,MAAe,QAAXA,EAAEpC,QAClDqC,GAAY,EAGVC,EAAe,SAAAC,GAAC,SAAApS,OAAOoS,EAAEC,cAAT,KAAArS,OAA0BoS,EAAEE,WAAW,EAAvC,KAAAtS,OAA4CoS,EAAEG,YAE9DC,EAAgB,SAAAX,GACpB,QAAS,SAAUA,KAFCY,EAEyBZ,EAAQlE,KAF7B+E,EAEmCzP,EAAK0K,KAFjCwE,EAAaM,KAAQN,EAAaO,IAA9C,IAACD,EAAIC,GAM1BvU,KAAKkT,MAAMvF,QAAS,SAAA7M,GAGlB,IAAI0T,EAAY1P,EAAKkN,aAAclR,QAGhB8P,IAAd4D,GACHX,EAAQxS,KAAK,CAACqQ,KAAM,QACpBqC,GAAY,GAKZS,EAGG7I,OAAQ,SAAA8I,GAGP,OAAwB,IAFVZ,EAAQlI,OACpB,SAAA+H,GAAO,OAAIA,EAAQhC,OAAS+C,EAAY/C,OAC7BzL,SAId0F,OAAQ0I,GAGR1G,QAAS,SAAA+F,GAAO,OAAIG,EAAQxS,KAAMqS,OAKzCG,EAAUA,EAAQzN,IAAK,SAAAsN,GAAO,OAAI5O,EAAKiN,cAAc2B,EAAQhC,OAASgC,IAE/D/H,OAAQ0I,GAGVN,IACH/T,KAAKiS,gBAAkB4B,GAIzB,IAAMa,EAAeX,GAAaF,EAAQhG,MAAO,SAAA6F,GAAO,MAAI,SAAUA,IAKtE,OAFA1T,KAAKsS,aAAauB,EAASa,GAEpBb,8CAKWZ,EAAY0B,GAAY,IAAA1I,EAAAjM,KAC1C2U,EAAW7T,KAAOmS,EAClBjT,KAAKgS,aAAaiB,GAAYtF,QAAS,SAAC+F,EAAQzL,GACzCyL,EAAQhC,OAASiD,EAAWjD,OAC/BzF,EAAK+F,aAAaiB,GAAYhL,GAAS0M,KAK3C3U,KAAKmT,iBAAiBwB,8CAKO,IAAAC,EAAA5U,KAAdiT,EAAc3R,UAAA2E,OAAA,QAAA2K,IAAAtP,UAAA,GAAAA,UAAA,GAAH,EAC1B,OAAOtB,KAAK6U,QAAQ5B,GACjBI,KAAM,SAAAyB,GAAW,IAAAC,EAEaH,EAAKI,UAAUF,GAApCG,EAFQF,EAERE,UAAW/B,EAFH6B,EAEG7B,MAoBnB,OAjBoB,IAAfD,IAKH2B,EAAK1B,MAAQA,EAAMjN,OAAS,EAAIiN,EAAMgC,UAAY,CAAC,GAInDN,EAAK1B,MAAMvF,QAAS,SAAA7M,GAAI,OAAc,IAATA,GAAe8T,EAAK5B,WAAYlS,MAI/D8T,EAAK5C,aAAaiB,GAAcgC,EAC7BC,UACA9O,IAAK,SAAAsL,GAAU,MAAO,CAACA,OAAM5Q,KAAMmS,KAE/B2B,EAAK5C,aAAaiB,uCAMT,IAAdA,EAAc3R,UAAA2E,OAAA,QAAA2K,IAAAtP,UAAA,GAAAA,UAAA,GAAH,EAGX6T,EAAO,SAAA3D,GAAG,OAAMA,EAAM,GAAK,IAAM,IAAOA,GACxChC,EACJ2F,EAAMnV,KAAKwP,KAAK4E,WAAc,IAC9Be,EAAM,EAAInV,KAAKwP,KAAK2E,YAAe,IACnCnU,KAAKwP,KAAK0E,cAGRkB,EAAO,IAAI7T,KAAKvB,KAAKwP,KAAK6F,WAC9BD,EAAK7C,QAAQ6C,EAAKhB,UAAY,GAC9B,IAAIkB,EAAW,GAUf,OAP8B,OAAvBF,EAAKlB,eAA8C,IAApBkB,EAAKjB,YAAuC,IAAnBiB,EAAKhB,YAClEkB,EACEH,EAAMC,EAAKhB,WAAc,IACzBe,EAAM,EAAIC,EAAKjB,YAAe,IAC9BiB,EAAKlB,eAGFqB,MACL,+HAAA1T,OAGU2N,EAHV,QAAA3N,OAGqByT,EAHrB,gBAAAzT,OAG4CoR,GAC5C,CACEuC,YAAa,cACbC,OAAQzV,KAAKkS,WAAWuD,SAEzBpC,KAAMrT,KAAK0V,mBACXrC,KAAM,SAAAZ,GAAQ,OAAIA,EAASjM,2CAKtBsO,GAAS,IAAAa,EAAA3V,KACX4V,EAAa,CAAC,gBAAgB,8BAC9BC,EAAOf,EACVjJ,MAAM,MACNF,OAAQ,SAAAmK,GAAI,OAAIH,EAAKvD,cAAc7G,KAAKuK,KACxC1P,IAAK,SAAA2P,GAAC,OAAIA,EAAEC,QAAQL,EAAKtD,eAAgB,WACzCjM,IAAK,SAAA0P,GAAI,OAAIA,EAAKjK,MAAM,OACxBF,OAAQ,SAAAoK,GAAC,OAAIH,EAAWhK,SAASmK,EAAE,MAEtC,MAAO,CACLd,UAAWY,EACRlK,OAAQ,SAAAoK,GAAC,MAAa,kBAATA,EAAE,KACf3P,IAAK,SAAA2P,GAAC,OAAIA,EAAE,KACf7C,MAAO2C,EACJlK,OAAQ,SAAAoK,GAAC,MAAa,+BAATA,EAAE,KACf3P,IAAK,SAAA2P,GAAC,OAAIE,OAAOF,EAAE,8CAMXrE,GAAM,IAAAwE,EAAAlW,KAGnB,OAAK0R,KAAQ1R,KAAK+R,cAGT,IAAIoE,QAAS,SAAAC,GAAO,OAAIA,EAAQF,EAAKnE,cAAcL,MAGrD6D,MAAK,iDAAA1T,OACuC6P,GACjD,CAAE+D,OAAQzV,KAAKkS,WAAWuD,SAEzBpC,KAAMrT,KAAK0V,mBACXrC,KAAM,SAAAwC,GAAI,OAAIA,EAAKQ,SACnBhD,KAAM,SAAAK,GAyBL,OAtBKA,EAAQ4C,SAASC,WAAjB,GAAA1U,OACAqU,EAAK1G,KAAK0E,cAAgB,EAD1B,KAAArS,OAC+BqU,EAAK1G,KAAK2E,WAAa,MAEzDT,EAAQ4C,SAAW5C,EAAQ4C,SACxBN,QADgB,GAAAnU,OACLqU,EAAK1G,KAAK0E,cAAgB,GADrB,GAAArS,OAC6BqU,EAAK1G,KAAK0E,gBAC1DnI,QAAQC,IAAI,sCAAwC0H,EAAQ4C,WAI9D5C,EAAQhC,KAAYA,EACpBgC,EAAQlE,KAAY,IAAIjO,KAAKmS,EAAQ4C,UACrC5C,EAAQ/B,KAAYsE,OAAOvC,EAAQ8C,MAAMC,KAAK5K,MAAM,KAAK,IACzD6H,EAAQ9B,OAAYqE,OAAOvC,EAAQ8C,MAAMC,KAAK5K,MAAM,KAAK,IACzD6H,EAAQ/O,MAAY+O,EAAQgD,eAAeV,QAAQ,YAAa,IAChEtC,EAAQiD,UAAYjD,EAAQgD,eAG5BhD,EAAQjC,KAAOiC,EAAQjC,KAAKuE,QAAQ,UAAW,UAAUA,QAAQ,WAAY,UAG7EE,EAAKnE,cAAcL,GAAQgC,EAEpBA,aC6IAkD,cAhab,SAAAA,EAAY5U,EAAOtB,GAAS,IAAAb,EAAA,OAAAC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAA4W,IAC1B/W,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAA8W,GAAAzW,KAAAH,QAEKU,QAAUsB,EAAMtB,QACrBb,EAAKuO,aAAe1M,SAASiD,MAG7B9E,EAAKsD,MAAQ,CACXsQ,SAAU,CAAC,CAAC/B,KAAM,QAClBmF,YAAa,GACbrH,KAAM3P,EAAKiX,kBAAkB9U,GAC7B0N,QAAS,IAAInO,KACb+G,OAAQ,EACRC,OAAO,EACP4B,WAAW,EACX4J,WAAW,EACXgD,eAAe,EACfC,sBAAsB,GAGxBnX,EAAKwL,cAAgB,CACnB,CACE5E,KAAM,kBACNC,OAAQ7G,EAAKoX,kBAAkB/S,KAAvBpE,OAAAoX,EAAA,EAAApX,QAAAoX,EAAA,EAAApX,CAAAD,KACRmG,KAAM,CAAE,IAAK,OAxBSnG,iFAXVmC,GAChB,IAAMwN,EAAOxN,EAAMyM,MAAM0I,OACzB,OAAO,IAAI5V,KACPiO,EAAK4H,KACL5H,EAAK6H,MAAM,EACX7H,EAAK8H,IACL9H,EAAKmC,MAAM,EACXnC,EAAKoC,QAAQ,iEA2DjB5R,KAAKuX,SAAWvX,KAAKU,QAAQE,OAAOZ,KAAKwX,oBAAoBtT,KAAKlE,OAGlEA,KAAKyX,KAAO,IAAI3F,EAAK,CACnBtC,KAAMxP,KAAKmD,MAAMqM,KACjB8C,aAActS,KAAKmT,iBAAiBjP,KAAKlE,uDAM3CA,KAAKuX,WAGLvX,KAAKyX,KAAKjF,QAGV9Q,SAASiD,MAAQ3E,KAAKoO,8CAGf,IAAAtJ,EAAA9E,KAAAqO,EAUHrO,KAAKmD,MARPsQ,EAFKpF,EAELoF,SACAnL,EAHK+F,EAGL/F,OACAC,EAJK8F,EAIL9F,MACAwL,EALK1F,EAKL0F,UACAvE,EANKnB,EAMLmB,KACAE,EAPKrB,EAOLqB,QACAvF,EARKkE,EAQLlE,UACA6M,EATK3I,EASL2I,qBAEIU,EAAWlI,aAAgBjO,KAAhB,GAAAM,OACZ2N,EAAK4E,UADO,KAAAvS,OACM,EAAI2N,EAAK2E,WADf,KAAAtS,OAC6B2N,EAAK0E,eAC/C,MAGEvD,EAAU3Q,KAAK2X,qBACfC,EAAWjH,EAAU,EACrBkH,OACSjH,IAAb6C,GACKA,EAASxN,OAAS0K,GAClB,SAAU8C,EAAS9C,GACpB8C,EAAS9C,GAASc,KAAO,GACzB9M,OAAqBiM,IAAb6C,GAA0BA,EAASxN,OAAS,GACtD,UAAWwN,EAAS9C,GAApB,GAAA9O,OACK4R,EAAS9C,GAASgG,WAEvBe,EAEEjO,EAAWlG,EAAAT,EAAAnB,cAAC4M,EAAD,CACXnD,UAAYpL,KAAK+J,OAAO7F,KAAKlE,MAC7BsI,OAASA,EACTC,MAAQA,EACRyC,WAAa,SAACwD,GAAD,OAAQA,EAAGzK,UAAU0K,MAAO,kCACzChE,WAAazK,KAAK8X,SAAS5T,KAAKlE,MAChC4J,WAAa5J,KAAK+X,SAAS7T,KAAKlE,MAChCqJ,YAAc,SAAAf,GAAM,OAAIxD,EAAKY,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GAAmBgF,EAAK3B,MAAxB,CAA+BmF,aACvDiB,WAAa,SAAAhB,GAAK,OAAIzD,EAAKY,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GAAmBgF,EAAK3B,MAAxB,CAA+BoF,YACrD2D,aAAe8K,EACf7K,kBAAmB,EACnB6B,qBAAuB,SAAAgK,GAAI,OAAIlT,EAAKY,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GAAmBgF,EAAK3B,MAAxB,CAA+B6T,qBAAsBgB,MACpF7N,UAAYA,EACZgD,IAAM,SAACqB,GAAYA,IAAM1J,EAAK8C,gBAAkB4G,EAAG5G,kBACnDyD,cAAgBrL,KAAKqL,gBAErBtB,EAASxG,EAAAT,EAAAnB,cAAC+M,EAAA5L,EAAD,CACTqK,IAAK,SAACC,GAActI,EAAKoJ,QAAUd,GACnC5J,MAAO,CAAEuE,MAAO,QAChBnG,IAAMiW,EACNlJ,SAAWiJ,EACXjT,MAAQA,EACR8E,UAAQ,EACRmF,aAAa,aACbC,QAAW+I,EAAW,OAAS,WAC/BK,QAAUjY,KAAK8X,SAAS5T,KAAKlE,MAC7BsI,OAASA,EACTC,MAAQA,EACRuG,OAAS9O,KAAK+O,uBAAuB7K,KAAKlE,MAAM,GAChDgP,QAAUhP,KAAK+O,uBAAuB7K,KAAKlE,MAAM,GACjDiP,gBAAkB,SAAAtJ,GAAC,OAAIb,EAAKY,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GAClBgF,EAAK3B,MADa,CAErBmF,OAAQ3C,EAAEuJ,cAAc5G,OACxBC,MAAO5C,EAAEuJ,cAAc3G,YAGzB2P,EAAW3U,EAAAT,EAAAnB,cAACwW,EAAD,CACX3I,KAAOA,EACPC,QAAU,IAAIlO,KAAK,KAAM,EAAG,GAC5BmO,QAAUA,EACVH,kBAAoBwE,EACpB3D,cAAgBpQ,KAAKiX,kBAAkB/S,KAAKlE,MAC5CyQ,WAAa,kBAAM3L,EAAK8C,mBACxB4I,aAAexQ,KAAK6P,iBAAiB3L,KAAKlE,OAE1CuD,EAAAT,EAAAnB,cAACyW,EAAD,CACEzH,QAAUA,GAEV8C,EAASrN,IAAI,SAACsN,EAASzL,GAAV,OACb1E,EAAAT,EAAAnB,cAAC0W,EAADvY,OAAAqH,OAAA,CACEd,IAAuB,QAAjBqN,EAAQhC,KAAiBgC,EAAQhC,KAAjC,OAAA7P,OAA+CoG,IAChDyL,EAFP,CAGE1P,QAAUc,EAAKwT,mBAAmBpU,KAAKY,EAAMmD,UAMvD,OACE1E,EAAAT,EAAAnB,cAACqD,EAAAlC,EAAD,CAAYmC,SAAW,MACnB,SAAAC,GACA,OAAKA,EAED3B,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVqE,QAAS,OACTkB,WAAY,YAEZxF,EAAAT,EAAAnB,cAAA,OAAK6B,MAAO,CACVqE,QAAS,OACTgB,cAAe,SACfE,WAAY,UACZjB,eAAgB,iBAEhBvE,EAAAT,EAAAnB,cAAA,UAAMgD,GACJ8E,EACAM,GAEFmO,GAKJ3U,EAAAT,EAAAnB,cAAC4B,EAAAT,EAAMwL,SAAP,KACE/K,EAAAT,EAAAnB,cAAA,UAAMgD,GACJ8E,EACAM,EACAmO,iDASIvX,EAAU+F,GAC5B,IAAM6R,EAAUvY,KAAK8W,kBAAkB9W,KAAKgC,OACpCwN,EAASxP,KAAKmD,MAAdqM,KAGO,QAAX9I,IASC8I,EAAK0E,gBAAkBqE,EAAQrE,eAClC1E,EAAK2E,aAAeoE,EAAQpE,YAC5B3E,EAAK4E,YAAcmE,EAAQnE,UAC3BpU,KAAK6P,iBAAiB0I,GAId/I,EAAKgJ,aAAeD,EAAQC,YACpChJ,EAAKiJ,eAAiBF,EAAQE,eAE9BzY,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEE0T,YAAa,GACb0B,aAEFvY,KAAK0Y,oBAAoBH,GAAS,yCAI1B/I,GAAqB,IAAfwG,EAAe1U,UAAA2E,OAAA,QAAA2K,IAAAtP,UAAA,IAAAA,UAAA,GACzBqX,EAAO,IAAA9W,OAAO2N,EAAK0E,cAAZ,KAAArS,OAA6B,EAAI2N,EAAK2E,WAAtC,KAAAtS,OAAoD2N,EAAK4E,UAAzD,KAAAvS,OAAsE2N,EAAKgJ,WAA3E,KAAA3W,OAAyF2N,EAAKiJ,cAGtGzY,KAAKU,QAAQC,SAASI,WAAa4X,IAChC3C,EAIJhW,KAAKU,QAAQsV,QAAQ2C,GAHrB3Y,KAAKU,QAAQW,KAAKsX,mDAQDxO,GACrBnK,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEEgH,wDAIa0J,EAASE,GAAW,IAAA6E,EAEU5Y,KAAKmD,MAA1C4T,EAF2B6B,EAE3B7B,cAAeF,EAFY+B,EAEZ/B,YAAarH,EAFDoJ,EAECpJ,KAC9BqJ,IAAoB9B,IAAiBhD,IAAoBgD,EAE/D/W,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEEsQ,SAAUI,EACVE,YACAgD,cAAe8B,EACfnJ,QAAS,IAAInO,QAIVwS,GAA6B,KAAhB8C,GAChB7W,KAAK0Y,oBAAoBlJ,IAIJ,IAAlBuH,IAAgD,IAAtB8B,GAC7B7Y,KAAK8X,UAAS,4CAIDtI,GAAM,IAAAvD,EAAAjM,KAChBwP,IAASxP,KAAKmD,MAAMqM,OAGvBxP,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEE0T,YAAa,GACbrH,UAIY,OAATA,IAEHxP,KAAK8Y,YAAYtJ,GAGjBhO,WAAW,kBAAMyK,EAAKwL,KAAKlF,QAAQ/C,IAAO,yDAO9CxP,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEEsQ,SAAU3T,OAAAoG,EAAA,EAAApG,CAAIE,KAAKmD,MAAMsQ,UAAUsF,MAAM,GAAG,kDAQ9C,GAAK/Y,KAAKmD,MAAM4Q,UAOd,OANA/T,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEE4Q,WAAW,KAIN/T,KAAKyX,KAAKzE,yDAKDxD,GAElB,IAAMwJ,EAAQhZ,KAAKmD,MAAMsQ,SAAS9H,OAAQ,SAAA+H,GACxC,OAAOA,EAAQ/B,MAAQnC,EAAKgJ,aACzB9E,EAAQ/B,KAAOnC,EAAKgJ,YACrB9E,EAAQ9B,QAAUpC,EAAKiJ,gBAItBO,EAAM/S,OAAS,GAClBjG,KAAKiZ,YACHjZ,KAAKkZ,kBAAkBF,EAAM,GAAGtH,iDAIpBA,GAChB,IAAIsH,EAAQ,EAOZ,OANAhZ,KAAKmD,MAAMsQ,SAAS9F,QAAS,SAAC+F,EAASzL,GAChCyL,EAAQhC,OAASA,IACpBsH,EAAQ/Q,KAIL+Q,+CAIP,OAAOhZ,KAAKkZ,kBAAmBlZ,KAAKmD,MAAM0T,iDAGhC5O,GAAO,IAKb+N,EALamD,EACanZ,KAAKmD,MAA3BqM,EADS2J,EACT3J,KAAMqH,EADGsC,EACHtC,YACRnD,EAAU1T,KAAKmD,MAAMsQ,SAASxL,GAI/ByL,EAAQ/B,OAASnC,EAAKgJ,YACzB9E,EAAQ9B,SAAWpC,EAAKiJ,eACxBjJ,EAAKc,SAAU2F,OAAOvC,EAAQ/B,OAC9BnC,EAAKe,WAAY0F,OAAOvC,EAAQ9B,UAGlCoE,EAA0B,KAAhBa,EACVnV,SAASiD,MAAT,GAAA9C,OAAoB7B,KAAKoO,aAAzB,MAAAvM,OAA0C6R,EAAQiD,WAClD3W,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEE0T,YAAanD,EAAQhC,KACrBlC,UAEFxP,KAAK8Y,YAAYtJ,EAAMwG,sCAIvB,IAAMrF,EAAU3Q,KAAK2X,qBAChBhH,EAAU,GACb3Q,KAAKiZ,YAAYtI,EAAU,sCAIV,IAAZyI,IAAY9X,UAAA2E,OAAA,QAAA2K,IAAAtP,UAAA,KAAAA,UAAA,GACbqP,EAAU3Q,KAAK2X,qBAGhBhH,EAAW3Q,KAAKmD,MAAMsQ,SAASxN,OAAS,GAC1C,SAAUjG,KAAKmD,MAAMsQ,SAAS9C,GAC/B3Q,KAAKiZ,YAAYtI,EAAU,GAItByI,IAGGpZ,KAAKmD,MAAM4T,gBACf/W,KAAKiX,oBACLjX,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEE4T,eAAe,wCAQvB,OAAO/W,KAAKkO,QAAQC,mDAGHlG,EAAOtC,GACxBA,EAAE+H,kBACF/H,EAAEC,iBACF5F,KAAKiZ,YAAYhR,UAzaI9F,aCInBkX,sBAEJ,SAAAA,IAAc,IAAAxZ,EAAA,OAAAC,OAAAkD,EAAA,EAAAlD,CAAAE,KAAAqZ,IACZxZ,EAAAC,OAAAmD,EAAA,EAAAnD,CAAAE,KAAAF,OAAAoD,EAAA,EAAApD,CAAAuZ,GAAAlZ,KAAAH,QACKsZ,cAAe,EACpBzZ,EAAKsD,MAAQ,CACXG,0BAA0B,GAJhBzD,mFASZ6B,SAAS6X,iBAAiB,qBAAsBvZ,KAAKwZ,uBAAuBtV,KAAKlE,sDAIjF0B,SAAS+X,oBAAoB,qBAAsBzZ,KAAKwZ,uBAAuBtV,KAAKlE,sDAG/D+N,GACrB/N,KAAKsZ,aAAevL,EAAM2L,OAAOJ,aACjCtZ,KAAK0F,SAAL5F,OAAAgH,EAAA,EAAAhH,CAAA,GACKE,KAAKmD,MADV,CAEEG,0BAA0B,sCAK5B,IAAMkM,EAAO,IAAIjO,KACXoY,EAAQ,IAAA9X,OAAO2N,EAAK0E,cAAZ,KAAArS,OAA6B,EAAI2N,EAAK2E,WAAtC,KAAAtS,OAAoD2N,EAAK4E,UAAzD,QACN9Q,EAA6BtD,KAAKmD,MAAlCG,yBAER,OACEC,EAAAT,EAAAnB,cAACiY,EAAA,EAAD,KACErW,EAAAT,EAAAnB,cAAA,OAAKoC,UAAU,MAAM8V,GAAG,mBAGtBtW,EAAAT,EAAAnB,cAACmY,EAAD,CACExW,yBAA2BA,EAC3BuC,6BAA+B7F,KAAK+Z,iCAAiC7V,KAAKlE,QAI5EuD,EAAAT,EAAAnB,cAAA,UAAQoC,UAAU,aAAa8V,GAAG,aAChCtW,EAAAT,EAAAnB,cAACY,EAAA,EAAD,KACEgB,EAAAT,EAAAnB,cAACqY,EAAA,EAAD,KACEzW,EAAAT,EAAAnB,cAACsY,EAAA,EAAD,CACExI,KAAK,WACLyI,OAAS,SAAAlY,GAAK,OAAIuB,EAAAT,EAAAnB,cAACwY,EAAiBnY,MAEtCuB,EAAAT,EAAAnB,cAACsY,EAAA,EAAD,CACExI,KAAK,mCACLyI,OAAS,SAAAlY,GAAK,OAAIuB,EAAAT,EAAAnB,cAACyY,EAAgBpY,MAErCuB,EAAAT,EAAAnB,cAACsY,EAAA,EAAD,CACExI,KAAK,2BACLyI,OAAS,SAAAlY,GAAK,OAAIuB,EAAAT,EAAAnB,cAACyY,EAAgBpY,MAErCuB,EAAAT,EAAAnB,cAACsY,EAAA,EAAD,CACExI,KAAK,qBACLyI,OAAQ,SAAAlY,GAAK,OAAIuB,EAAAT,EAAAnB,cAACyY,EAAgBpY,MAGpCuB,EAAAT,EAAAnB,cAAC0Y,EAAA,EAAD,CAAUlW,GAAI,CAAEpD,SAAU4Y,qEAUtC3Z,KAAKgC,MAAM6D,6BAA6B7F,KAAKsZ,qBAxE/BpX,IAAMC,YA4ExBkX,EAAIvT,aAAe,CACjBD,6BAA8B,SAAAyT,MAOjBD,QCxFTiB,EAAcC,QACW,cAA7B5X,OAAOhC,SAAS6Z,UAEe,UAA7B7X,OAAOhC,SAAS6Z,UAEhB7X,OAAOhC,SAAS6Z,SAAS/L,MACvB,2DAsCN,SAASgM,EAAgBC,EAAOC,GAC9BlY,UAAUmY,cACPC,SAASH,GACTrH,KAAK,SAAAiG,GACJA,EAAawB,cAAgB,WAC3B,IAAMC,EAAmBzB,EAAa0B,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5X,QACfV,UAAUmY,cAAc1I,YAI1BnG,QAAQC,IACN,gHAKE2O,GAAUA,EAAOO,UACnBP,EAAOO,SAAS5B,KAMlBvN,QAAQC,IAAI,sCAGR2O,GAAUA,EAAOQ,WACnBR,EAAOQ,UAAU7B,UAO5B/F,MAAM,SAAAR,GACLhH,QAAQgH,MAAM,4CAA6CA,KChEjEqI,IAASlB,OACP3W,EAAAT,EAAAnB,cAAC0Z,EAAD,CAAKxV,6BAxBU,SAACyT,GAId,IAAIgC,EAHFhC,EAAaiC,UAIf9Y,UAAUmY,cAAcrB,iBAAiB,mBAAoB,SAASxL,GAIhEuN,IAIJA,GAA4B,EAC5BvP,QAAQC,IAAI,qBACZrJ,OAAOhC,SAAS6a,YAIlBlC,EAAaiC,QAAQE,YAAY,mBAMnC/Z,SAASga,eAAe,SDZnB,SAAkBf,GACvB,GAA6C,kBAAmBlY,UAAW,CAGzE,GADkB,IAAIkZ,IAAIC,WAAwBjZ,OAAOhC,SAAS8D,MACpDoX,SAAWlZ,OAAOhC,SAASkb,OAIvC,OAGFlZ,OAAO4W,iBAAiB,OAAQ,WAC9B,IAAMmB,EAAK,GAAA7Y,OAAM+Z,WAAN,sBAEPtB,GAgEV,SAAiCI,EAAOC,GAEtCpF,MAAMmF,GACHrH,KAAK,SAAAZ,GAEJ,IAAMqJ,EAAcrJ,EAASsJ,QAAQC,IAAI,gBAEnB,MAApBvJ,EAASwJ,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CzZ,UAAUmY,cAAcuB,MAAM9I,KAAK,SAAAiG,GACjCA,EAAa8C,aAAa/I,KAAK,WAC7B1Q,OAAOhC,SAAS6a,aAKpBf,EAAgBC,EAAOC,KAG1BpH,MAAM,WACLxH,QAAQC,IACN,mEArFAqQ,CAAwB3B,EAAOC,GAI/BlY,UAAUmY,cAAcuB,MAAM9I,KAAK,WACjCtH,QAAQC,IACN,+GAMJyO,EAAgBC,EAAOC,MCV/BC,CAAuB,CAIrBM,SAAU,SAAA5B,GACR,IAAIvL,EAAQ,IAAIuO,YAAY,qBAAsB,CAAE5C,OAAQ,CAAEJ,kBAC9D5X,SAAS6a,cAAcxO","file":"static/js/main.a48bcc8f.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListenerProd extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n     super();\n\n     const GACode = 'UA-129704402-1';\n     this.loadGoogleTag(GACode);\n     ReactGA.initialize(GACode);\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\n// Renders GA+children in production, only children for the rest\nclass GAListener extends React.Component {\n  render() {\n\n    const dnt = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;\n\n    // Disable GA in dev and for people with DoNotTrack HTTP header\n    return process.env.NODE_ENV !== 'production' || dnt === \"1\" || dnt === \"yes\" ?\n      this.props.children : (\n      <GAListenerProd>\n        { this.props.children }\n      </GAListenerProd>\n    )\n  }\n}\n\nexport default GAListener;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faBroadcastTower as faDirecte,\n  faCalendarAlt as faByDate,\n  faArrowAltCircleUp as faUpgrade,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport MediaQuery from 'react-responsive';\nimport {\n  slide as SmallMenu,\n  scaleRotate as BigMenu,\n} from 'react-burger-menu'\n\nimport './AppMenu.css';\n\nclass AppMenu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  renderLinks() {\n    const { newServiceWorkerDetected, children } = this.props;\n\n    return (\n      <div\n        style={{\n          padding: '3em 1em 1em',\n          background: 'url(logo-rac1.png)',\n          backgroundSize: 50,\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center .5em',\n        }}>\n        <Link className='bm-item' onClick={ this.handleClick.bind(this) } to=\"/\">\n          <FontAwesomeIcon icon={ faByDate } style={{ marginRight: '.5em' }} />\n          <span>By date</span>\n        </Link>\n        <Link className='bm-item' onClick={ this.handleClick.bind(this) } to=\"/directe\" >\n          <FontAwesomeIcon icon={ faDirecte } style={{ marginRight: '.5em' }} />\n          <span>En directe</span>\n        </Link>\n        { newServiceWorkerDetected ? (\n            <a\n              href='/'\n              className='bm-item'\n              style={{ color: 'green' }}\n              title=\"New version available!\"\n              onClick={ this.handleClickUpdate.bind(this) }\n              >\n              <FontAwesomeIcon icon={ faUpgrade } style={{ marginRight: '.5em' }} />\n              <span>Update!</span>\n            </a>\n          ) : null\n        }\n        { children }\n      </div>\n    )\n  }\n\n  render() {\n    const { newServiceWorkerDetected } = this.props;\n    const { isOpen } = this.state;\n    const extraClass = newServiceWorkerDetected ? ' news' : '';\n\n    return (\n      <MediaQuery minWidth={700}>\n        { matches => {\n          if ( matches ) {\n            return (\n              <div className={ 'menu-big' + extraClass }>\n                <BigMenu\n                  pageWrapId='page-wrap'\n                  outerContainerId='outer-container'\n                  isOpen={ isOpen }\n                  onStateChange={ state => this.handleMenuStateChange(state.isOpen) }\n                  disableCloseOnEsc\n                >\n                  { this.renderLinks() }\n                </BigMenu>\n              </div>\n            );\n          } else {\n            return (\n              <div className={ 'menu-small' + extraClass }>\n                <SmallMenu\n                  pageWrapId='page-wrap'\n                  outerContainerId='outer-container'\n                  disableCloseOnEsc\n                >\n                  { this.renderLinks() }\n                </SmallMenu>\n              </div>\n            );\n          }\n        }}\n      </MediaQuery>\n    )\n  }\n\n  handleMenuStateChange(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  handleClick(e) {\n    this.handleMenuStateChange(false);\n  }\n\n  handleClickUpdate(e) {\n    e.preventDefault();\n    this.handleMenuStateChange(false);\n    this.props.onLoadNewServiceWorkerAccept();\n  }\n}\n\nAppMenu.defaultProps = {\n  onLoadNewServiceWorkerAccept: () => {},\n  newServiceWorkerDetected: false,\n};\n\nAppMenu.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n  newServiceWorkerDetected: PropTypes.bool.isRequired,\n};\n\nexport default AppMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends React.PureComponent {\n  keysString() {\n    if ( this.props.keys.length === 0 ) {\n      return '';\n    }\n\n    // Transform ' ' to 'Space'\n    // Transform letters (not texts) to uppercase\n    // Uniq with [...new Set()]\n    const keys = [\n      ...new Set(\n        this.props.keys\n          .map( key => key === ' ' ? 'Space' : key )\n          .map( key => key.length === 1 ?  key.toUpperCase() : key )\n      )];\n    return ` | Key${ keys.length > 1 ? 's' : '' }: ${ keys.join(', ') }`\n  }\n\n  render() {\n    const {\n      text,\n      help,\n      icon,\n      action,\n      keys,\n      style,\n      className,\n      ...restProps\n    } = this.props;\n\n    const styleButton = {\n      borderRadius: '1em',\n      padding: '.7em',\n      margin: '1em',\n      ...style,\n    };\n\n    const helpExtra = help + this.keysString();\n\n    return (\n      <button\n        onClick={ action }\n        aria-label={ helpExtra }\n        title={ helpExtra }\n        className={ 'rac1-controls-button' + (className ? ` ${className}` : '') }\n        style={ styleButton }\n        { ...restProps }\n      >\n        <div style={{\n          fontSize: 'calc(1em + 2.5vmin)',\n          fontWeight: 'bold',\n          minWidth: '1.5em',\n        }} >\n          { icon instanceof Function ? icon() : icon }\n        </div>\n        <span style={{\n          fontSize: 'calc(8px + 1vmin)',\n          color: '#333'\n        }}>\n          { text instanceof Function ? text() : text }\n        </span>\n      </button>\n    )\n  }\n};\n\nButton.defaultProps = {\n  action: () => {},\n  keys: [],\n};\n\nButton.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node,\n  ]).isRequired,\n  icon: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node,\n  ]).isRequired,\n  action: PropTypes.func.isRequired,\n  help: PropTypes.string.isRequired,\n\n  // Get keys to let user know how to access the button\n  keys: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        shiftKey: PropTypes.bool,\n        altKey: PropTypes.bool,\n        ctrlKey: PropTypes.bool,\n        metaKey: PropTypes.bool,\n      }),\n    ])\n  ),\n};\n\nclass ButtonsGroup extends React.PureComponent {\n  render() {\n    const { buttons, keyHandlerFocus, children } = this.props;\n    return (\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100%',\n      }}>\n        { buttons.map( (control, index) => {\n            return <Button\n              key={ index }\n              onMouseUp={ e => keyHandlerFocus(e, true) }\n              action={ control.action.bind(this) }\n              help={ control.help }\n              text={ control.text }\n              icon={ control.icon }\n              keys={ control.keys }\n            />\n          })\n        }\n        { children }\n      </div>\n    )\n  }\n}\n\nButtonsGroup.defaultProps = {\n  keyHandlerFocus: (e, force) => {},\n};\n\nButtonsGroup.propTypes = {\n  keyHandlerFocus: PropTypes.func.isRequired,\n  buttons: PropTypes.arrayOf( PropTypes.shape( Button.propTypes ) )\n};\n\nexport { Button, ButtonsGroup };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faVolumeUp,\n  faVolumeDown,\n  faVolumeOff,\n  faVolumeMute,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { Button } from './Button';\n\nclass Volume extends React.Component {\n  render() {\n    const { volume, muted } = this.props;\n    const title = \"Volume handler | Keys: Shift + Arrow Up, Shift + Arrow Down\";\n\n    // Select volume icon\n    const faVolume =\n      muted        ? faVolumeMute :\n      volume === 0 ? faVolumeOff  :\n      volume < .5  ? faVolumeDown : faVolumeUp;\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n      }}>\n        <div style={{\n          width: '100%',\n          minWidth: 40,\n          height: 100,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n          paddingTop: '.3em',\n        }}>\n          <Slider\n            onAfterChange={ () => this.props.keyHandlerFocus() }\n            onChange={ value => this.props.onSetVolume(value / 100) }\n            value={ volume * 100 }\n            vertical\n            aria-label={ title }\n            title={ title }\n          />\n        </div>\n        <div>\n          <Button\n            onMouseUp={ e => this.props.keyHandlerFocus(e, true) }\n            action={ () => this.props.onSetMuted( !muted ) }\n            help={ 'Toggle mute status' }\n            text={ muted ? 'Unmute' : 'Mute' }\n            icon={ <FontAwesomeIcon icon={ faVolume } /> }\n            keys={ [ 'M' ] }\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nVolume.defaultProps = {\n  keyHandlerFocus: () => {},\n  onSetVolume:     volume => {},\n  onSetMuted:      muted => {},\n  volume:          1,\n  muted:           false,\n};\n\nVolume.propTypes = {\n  keyHandlerFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onSetMuted: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  muted: PropTypes.bool.isRequired,\n};\n\nexport default Volume;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faPlay,\n  faPause,\n  faForward,\n  faFastForward,\n  faEye,\n  faEyeSlash,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { Button, ButtonsGroup } from './Button';\nimport Volume from './Volume';\n\nclass Controls extends React.Component {\n\n  // Controls definitions:\n  // - Only button\n  // - Only key binding\n  // - Both\n  controls = [\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } flip=\"horizontal\" />,\n      text: 'Prev',\n      help: 'Play previous podcast',\n      action: () => this.props.onPlayPrev(),\n      group: 'basic',\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n        </span>\n      ),\n      text: '-10m',\n      help: 'Go backwards 10 minutes',\n      action: () => this.player().currentTime -= 600,\n      keys: [ 'PageUp' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '-60s',\n      help: 'Go backwards 1 minute',\n      action: () => this.player().currentTime -= 60,\n      keys: [ 'ArrowUp' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />,\n      text: '-10s',\n      help: 'Go backwards 10 seconds',\n      action: () => this.player().currentTime -= 10,\n      keys: [ 'ArrowLeft' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: () => this.props.isPlaying ?\n         <FontAwesomeIcon icon={ faPause } /> :\n         <FontAwesomeIcon icon={ faPlay } /> ,\n      text: () => this.props.isPlaying ? 'Pause' : 'Play',\n      help: 'Toggle Play/Pause',\n      action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      keys: [ ' ', 'p', 'P' ],\n      group: 'basic',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } />,\n      text: '+10s',\n      help: 'Go forward 10 seconds',\n      action: () => this.player().currentTime += 10,\n      keys: [ 'ArrowRight' ],\n      group: 'advanced next',\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '+60s',\n      help: 'Go forward 1 minute',\n      action: () => this.player().currentTime += 60,\n      keys: [ 'ArrowDown' ],\n      group: 'advanced next',\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={ faForward } />\n          <FontAwesomeIcon icon={ faForward } />\n        </span>\n      ),\n      text: '+10m',\n      help: 'Go forward 10 minutes',\n      action: () => this.player().currentTime += 600,\n      keys: [ 'PageDown' ],\n      group: 'advanced next',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } />,\n      text: 'Next',\n      help: 'Play next podcast',\n      action: () => this.props.onPlayNext(),\n      keys: [ 'Enter' ],\n      group: 'basic',\n    },\n    {\n      help: 'Decrement volume 5%',\n      action: () => this.incrementVolume(-.05),\n      keys: [\n        '/',\n        {key: 'ArrowDown', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Increment volume 5%',\n      action: () => this.incrementVolume(.05),\n      keys: [\n        '*',\n        {key: 'ArrowUp', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Toggle mute status',\n      action: () => this.setMuted( !this.player().muted ),\n      keys: [ 'm', 'M' ],\n    },\n  ];\n\n  constructor(props) {\n    super();\n\n    // Add extra controls\n    if ( props.extraControls.length ) {\n      this.controls = this.controls.concat( props.extraControls );\n    }\n  }\n\n  keyHandlerFocus = () => {};\n  _keyHandlerFocus = (e, force) => {\n    let doFocus = true;\n\n    // Allow datepicker to get focus\n    if ( e && e.relatedTarget &&\n          this.props.allowFocus( e.relatedTarget ) ) {\n      doFocus = false;\n    }\n\n    if ( doFocus || force ) {\n      this.timer = setTimeout(() => this._keyHandler.focus(), 100);\n    }\n  };\n\n  componentDidMount() {\n\n    this.noKeys = true;\n\n    // Disable key handler on mobile devices (enable on the rest)\n    if ( !(/Mobi|Android/i.test(navigator.userAgent)) ) {\n      this.noKeys = false;\n      this.keyHandlerFocus = this._keyHandlerFocus;\n      this.keyHandlerFocus();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  filterButtonsGroup(controls, group) {\n    const { hideButtons } = this.props;\n\n    return controls\n      .filter( control => 'icon' in control && 'text' in control )\n      .filter( control => !hideButtons.includes(control.text) )\n      .filter( control => control.group.split(' ').includes(group) )\n      .map( control => {\n        if ( this.noKeys ) {\n          const { keys, ...rest } = control;\n          console.log({keys});\n          return rest\n        }\n        return control\n      })\n  }\n\n  render() {\n    const { showAdvanced, volumeAsAdvanced, volume, muted} = this.props;\n    const buttons = ['basic','advanced'].reduce( (res, group) => {\n      res[group] = this.filterButtonsGroup(this.controls, group);\n      return res;\n    }, {});\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n      }}>\n        { buttons['basic'].length ? (\n          <div style={{\n            display: 'flex',\n            alignItems: 'flex-end',\n          }}>\n            <ButtonsGroup\n              buttons={ buttons['basic'] }\n              keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n            >\n              { buttons['advanced'].length ? (\n                <Button\n                  onMouseUp={ e => this.keyHandlerFocus(e, true) }\n                  action={ this.handleShowAdvancedChange.bind(this, !showAdvanced) }\n                  help={ `Show ${ showAdvanced ? 'less' : 'more' } controls` }\n                  text={ showAdvanced ? 'Less' : 'More' }\n                  icon={ <FontAwesomeIcon icon={ showAdvanced ? faEyeSlash : faEye } /> }\n                />\n              ) : null }\n            </ButtonsGroup>\n            { !volumeAsAdvanced ? (\n              <Volume\n                volume={ volume }\n                muted={ muted }\n                onSetVolume={ this.setVolume.bind(this) }\n                onSetMuted={ this.setMuted.bind(this) }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n            ) : null }\n          </div>\n        ) : null }\n        <div style={{ display: 'flex' }}>\n          { showAdvanced && buttons['advanced'].length ? (\n            <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-around',\n            }}>\n              <ButtonsGroup\n                buttons={ this.filterButtonsGroup(buttons['advanced'], 'prev') }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n              <ButtonsGroup\n                buttons={ this.filterButtonsGroup(buttons['advanced'], 'next') }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n            </div>\n          ) : null }\n          { showAdvanced && volumeAsAdvanced ? (\n            <Volume\n              volume={ volume }\n              muted={ muted }\n              onSetVolume={ this.setVolume.bind(this) }\n              onSetMuted={ this.setMuted.bind(this) }\n              keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n            />\n          ) : null }\n        </div>\n        <input\n          name='player-key-handler'\n          style={{ // Almost invisible ;)\n            width: '1px',\n            height: '1px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            bottom: 0,\n            right: 0,\n            position: 'fixed',\n            backgroundColor: 'transparent',\n            color: 'transparent',\n            cursor: 'default',\n          }}\n          ref={ element => { this._keyHandler = element } }\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n          aria-label=\"Key input handler\"\n        />\n      </div>\n    );\n  }\n\n  player = () => this.props.getPlayer();\n\n  setMuted(muted) {\n    this.player().muted = muted;\n    this.props.onSetMuted(muted);\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.props;\n    let volumeNew = volume;\n\n    // Increment\n    if ( increment > 0 && volume < 1 ) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if ( increment < 0 && volume > 0 ) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    // Prevent updating volume if limit reached\n    if ( volumeNew !== volume ) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = false;\n\n    // Handle controls keys\n    this.controls.forEach( control => {\n      (control.keys||[]).forEach( key_orig => {\n\n        // Understand plain string or custom key object\n        let key = typeof key_orig === 'string' ? {key: key_orig} : key_orig;\n\n        // If it's exact key match\n        if(e.key === key.key &&\n          ['shiftKey', 'altKey', 'ctrlKey', 'metaKey']\n            .every( (mod) => !!e[mod] === !!key[mod] )) {\n          console.log(control.help);\n          stopPropagation = true;\n          control.action();\n        }\n      });\n    });\n\n    if ( stopPropagation ) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  handleShowAdvancedChange(showAdvanced, event) {\n    event.preventDefault();\n    this.props.onShowAdvancedChange(showAdvanced);\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:   e => {},\n  onSetMuted:    e => {},\n  onPlayPrev:    e => {},\n  onPlayNext:    e => {},\n  allowFocus:    e => {},\n  onShowAdvancedChange: e => {},\n  extraControls: [],\n  hideButtons:   [],\n  volume:        1,\n  muted:         false,\n  isPlaying:     false,\n  showAdvanced:  false,\n  volumeAsAdvanced: false,\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  muted: PropTypes.bool.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onSetMuted: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  volumeAsAdvanced: PropTypes.bool.isRequired,\n  showAdvanced: PropTypes.bool.isRequired,\n  onShowAdvancedChange: PropTypes.func.isRequired,\n  hideButtons: PropTypes.arrayOf(\n    PropTypes.oneOf(\n      ['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s', 'Play/Pause']\n  )).isRequired,\n  extraControls: PropTypes.arrayOf(\n    // As a button, but `text` and `icon` are not required\n    PropTypes.shape({\n      ...Button.propTypes,\n      text: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n      ]),\n      icon: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n      ]),\n    }) ),\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\n\nclass Rac1Directe extends Component {\n  // Initial state\n  state = {\n    volume: 1,\n  };\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n\n    // Initial state\n    this.state = {\n      volume: 1,\n      muted: false,\n      isPlaying: false,\n    };\n  }\n\n  componentDidMount() {\n    this.initialTitle = document.title;\n    document.title = `${this.initialTitle} - Directe`;\n  }\n\n  componentWillUnmount() {\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { volume, muted, isPlaying } = this.state;\n    const currentPath = 'http://rac1.radiocat.net/;*.nsv';\n    const autoplay = true;\n    const title = 'Rac1 en Directe';\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          allowFocus={ (el) => el.className.match( /rc-slider-handle/ ) }\n          isPlaying={ isPlaying }\n          onSetVolume={ volume => this.setState({ ...this.state, volume }) }\n          onSetMuted={ muted => this.setState({ ...this.state, muted }) }\n          hideButtons={['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s']}\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          title={ title }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          volume={ volume }\n          muted={ muted }\n          onPlay={ this.handlePlayStatusChange.bind(this, true) }\n          onPause={ this.handlePlayStatusChange.bind(this, false) }\n          onVolumeChanged={ e => this.setState({\n            ...this.state,\n            volume: e.currentTarget.volume,\n            muted: e.currentTarget.muted,\n          }) }\n        />\n      </React.Fragment>\n    );\n  }\n\n  handlePlayStatusChange(isPlaying) {\n    this.setState({\n      ...this.state,\n      isPlaying,\n    });\n  }\n}\n\nexport default Rac1Directe;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = (props) => {\n  const text = 'Reload';\n  return (\n    <button\n      { ...props }\n      aria-label={ text }\n      style={{\n        borderRadius: '.5em',\n        padding: '.25em',\n        margin: '0 0 0 1em',\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#333'\n      }}>\n        { text }\n      </span>\n    </button>\n  )\n};\n\nclass Playlist extends React.PureComponent {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: '#333',\n        backgroundColor: 'white',\n        padding: '2em',\n        borderRadius: '1em',\n        margin: '1em',\n        textAlign: 'left',\n        position: 'relative',\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if ( e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/) ) {\n      focus = false;\n    }\n\n    if ( focus ) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MediaQuery from 'react-responsive';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends React.PureComponent {\n\n  renderChildren() {\n    const { children, current } = this.props;\n    return children === undefined || children.length === 0 ?\n      null : children.map( (child, index) =>\n          <li\n            key={ child.key }\n            style={{\n              position: 'relative',\n              marginLeft: '2.5em',\n              textIndent: '-1.5em',\n              padding: '1pt 0',\n            }}\n          >\n            { index === current ? (\n              <FontAwesomeIcon\n                icon={ faPlay }\n                style={{\n                  position: 'absolute',\n                  left: '-2.75em',\n                  padding: '1pt 0',\n                }}/>\n            ) : null\n            }\n            { child }\n          </li>\n        )\n  }\n\n  render() {\n    const { children } = this.props;\n    const styles = {\n      listStyleType: 'none',\n      marginLeft: 0,\n      paddingLeft: 0,\n      textAlign: 'left',\n    };\n\n    return children === undefined || children.length === 0 ?\n      null : (\n        <MediaQuery minWidth={ 1024 }>\n          { matches => {\n            return (\n              <ul style={{\n                ...styles,\n                columnCount: matches ? Math.floor(children.length / 10) || 1 : 1,\n              }}>\n                { this.renderChildren() }\n              </ul>\n            )\n          }}\n        </MediaQuery>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends React.PureComponent {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","class Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  // Abort controller\n  controller = new AbortController();\n\n  constructor(props) {\n    const noop = () => {};\n    this.onListUpdate = props.onListUpdate || noop;\n    this.setDate(props.date);\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  // Raises exception on response error\n  handleFetchErrors(response) {\n    if ( !response.ok ) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  // Catches the fetch error, original or 'self-raised'\n  catchFetchErrors(err) {\n    if ( err.name === 'AbortError' ) {\n      console.log(err.message);\n    }\n    else {\n      console.error(err);\n    }\n  }\n\n  // Cached/compiled regexps for parsing HTML\n  dataAttrsFind  = / class=\"(audioteca-item|pagination-link)\" /;\n  dataAttrsClean = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\n  setDate(date) {\n    if ( this.date !== date ) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if ( pageNumber === 0 ) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n\n      // Download podcast data if needed\n      .then( this.getPodcasts.bind(this, pageNumber) )\n\n      // Trigger event for list updated\n      .then( this.handleListUpdate.bind(this, pageNumber) )\n\n      // Catch Exceptions\n      .catch( this.catchFetchErrors )\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map( podcast => {\n\n        // If it's a podcast and is not in the cache\n        if ( podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData) ) {\n\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n            .catch( this.catchFetchErrors )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [ ...this._previous_uuids.filter(w => w.uuid !== '...') ];\n    let completed = true;\n\n    // Helper functions\n    const dateToString = d => `${d.getFullYear()}/${d.getMonth()+1}/${d.getDate()}`;\n    const compareDates = (d1, d2) => dateToString(d1) === dateToString(d2);\n    const filterByDates = podcast => {\n      return !(\"date\" in podcast) || compareDates( podcast.date, this.date )\n    };\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if ( pageUuids === undefined ) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n\n        // Add this page's podcasts to the list\n        pageUuids\n\n          // Filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n\n          // Filter out podcasts from other dates\n          .filter( filterByDates )\n\n          // Add remaining podcasts to the list\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map( podcast => this._podcastsData[podcast.uuid] || podcast )\n          // Filter out podcasts from other dates\n          .filter( filterByDates );\n\n    // Save complete list on finish\n    if ( completed ) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every( podcast => 'path' in podcast );\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach( (podcast,index) => {\n      if ( podcast.uuid === podcastNew.uuid ) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then( dataRaw => {\n\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if ( pageNumber === 0 ) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        // Save in reversed order and along with the page number\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map( uuid => { return {uuid, page: pageNumber} } );\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    // Set next day's date and string\n    let next = new Date(this.date.getTime());\n    next.setDate(next.getDate() + 1);\n    let dateNext = '';\n\n    // Don't use next day date if it's 2018's last day\n    if ( !(next.getFullYear() === 2019 && next.getMonth() === 0 && next.getDate() === 1) ) {\n      dateNext =\n        pad2( next.getDate() ) + '/' +\n        pad2( 1 + next.getMonth() ) + '/' +\n        next.getFullYear();\n    }\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + \"text=&programId=&sectionId=HOUR&\"\n      + `from=${date}&to=${dateNext}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n        signal: this.controller.signal,\n      })\n      .then( this.handleFetchErrors )\n      .then( response => response.text() )\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter( line => this.dataAttrsFind.test(line) )\n      .map( v => v.replace(this.dataAttrsClean, '$1=$2') )\n      .map( line => line.split('=') )\n      .filter( v => searchData.includes(v[0]) );\n\n    return {\n      uuidsPage: data\n        .filter( v => v[0] === 'data-audio-id' )\n        .map( v => v[1] ),\n      pages: data\n        .filter( v => v[0] === 'data-audioteca-search-page' )\n        .map( v => Number(v[1]) ),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if ( uuid in this._podcastsData ) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(\n      `https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`,\n      { signal: this.controller.signal }\n    )\n      .then( this.handleFetchErrors )\n      .then( data => data.json() )\n      .then( podcast => {\n\n        // Fix server bug on year's last day, in which gives dates in the future\n        if ( podcast.dateTime.startsWith(\n          `${this.date.getFullYear() + 1}-${this.date.getMonth() + 1}`\n        )) {\n          podcast.dateTime = podcast.dateTime\n            .replace(`${this.date.getFullYear() + 1}`, `${this.date.getFullYear()}`);\n          console.log(\"Podcast date in future. Fixing to: \" + podcast.dateTime);\n        }\n\n        // Add some data to the podcast\n        podcast.uuid      = uuid;\n        podcast.date      = new Date(podcast.dateTime);\n        podcast.hour      = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute    = Number(podcast.audio.time.split(':')[1]);\n        podcast.title     = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\nimport MediaQuery from 'react-responsive';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\n\nclass Rac1ByDate extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour||0,\n        date.minute||0,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      muted: false,\n      isPlaying: false,\n      completed: false,\n      waitingUpdate: false,\n      showAdvancedControls: false,\n    };\n\n    this.extraControls = [\n      {\n        help: 'Reload playlist',\n        action: this.handleClickReload.bind(this),\n        keys: [ 'r', 'R' ],\n      },\n    ];\n\n    // Debugging on development\n    if ( process.env.NODE_ENV === 'development' ) {\n\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = props => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      };\n\n      // Add a button to remove the last podcast in the list\n      this.extraControls.push({\n        icon: 'RL',\n        text: 'Remove last',\n        help: 'Remove last podcast from playlist',\n        action: this.handlePodcastsLastRemove.bind(this),\n        group: 'advanced basic',\n      });\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n\n    // Abort backend fetches\n    this.rac1.abort();\n\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const {\n      podcasts,\n      volume,\n      muted,\n      completed,\n      date,\n      maxDate,\n      isPlaying,\n      showAdvancedControls,\n    } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    const controls = <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          allowFocus={ (el) => el.className.match( /date-?picker|rc-slider-handle/ ) }\n          onPlayNext={ this.playNext.bind(this) }\n          onPlayPrev={ this.playPrev.bind(this) }\n          onSetVolume={ volume => this.setState({ ...this.state, volume }) }\n          onSetMuted={ muted => this.setState({ ...this.state, muted }) }\n          showAdvanced={ showAdvancedControls }\n          volumeAsAdvanced={ true }\n          onShowAdvancedChange={ show => this.setState({ ...this.state, showAdvancedControls: show }) }\n          isPlaying={ isPlaying }\n          ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          extraControls={ this.extraControls }\n        />;\n    const player = <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          title={ title }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          onEnded={ this.playNext.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          onPlay={ this.handlePlayStatusChange.bind(this, true) }\n          onPause={ this.handlePlayStatusChange.bind(this, false) }\n          onVolumeChanged={ e => this.setState({\n            ...this.state,\n            volume: e.currentTarget.volume,\n            muted: e.currentTarget.muted,\n          }) }\n        />;\n    const playlist = <Playlist\n          date={ date }\n          minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n          maxDate={ maxDate }\n          completedDownload={ completed }\n          onClickReload={ this.handleClickReload.bind(this) }\n          onDateBlur={ () => this.keyHandlerFocus() }\n          onDateChange={ this.handleDateChange.bind(this) }\n        >\n          <PodcastsList\n            current={ current }\n          >\n          { podcasts.map((podcast, index) =>\n            <Podcast\n              key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n              { ...podcast }\n              onClick={ this.handlePodcastClick.bind(this, index) }\n            />\n          )}\n          </PodcastsList>\n        </Playlist>;\n\n    return (\n      <MediaQuery minWidth={ 1024 }>\n        { matches => {\n          if ( matches ) {\n            return (\n              <div style={{\n                display: 'flex',\n                alignItems: 'stretch',\n              }}>\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'stretch',\n                  justifyContent: 'space-evenly',\n                }}>\n                  <h3>{ title }</h3>\n                  { controls }\n                  { player }\n                </div>\n                { playlist }\n              </div>\n            );\n          } else {\n            return (\n              <React.Fragment>\n                <h3>{ title }</h3>\n                { controls }\n                { player }\n                { playlist }\n              </React.Fragment>\n            );\n          }\n        }}\n      </MediaQuery>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if( action !== 'POP' ) {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if ( date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if ( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if ( this.history.location.pathname !== newPath ) {\n      if ( !replace ) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handlePlayStatusChange(isPlaying) {\n    this.setState({\n      ...this.state,\n      isPlaying,\n    });\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if ( completed && currentUUID === '' ) {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if ( waitingUpdate === true && waitingUpdateNext === false ) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if ( date !== this.state.date ) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if ( date !== null ) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n\n    // If there is not already an incomplete update\n    if ( this.state.completed ) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter( podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if ( found.length > 0 ) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach( (podcast, index) => {\n      if ( podcast.uuid === uuid ) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if ( podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes() ) {\n      date.setHours( Number(podcast.hour) );\n      date.setMinutes( Number(podcast.minute) );\n    }\n\n    replace = currentUUID === '';\n    document.title = `${this.initialTitle}: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if ( current > 0 ) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if ( current < (this.state.podcasts.length - 1 ) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if ( retry ) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if ( !this.state.waitingUpdate ) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nexport default Rac1ByDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport AppMenu from './AppMenu';\nimport GAListener from './GAListener';\nimport Rac1Directe from './Rac1Directe';\nimport Rac1ByDate from './Rac1ByDate';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.registration = false;\n    this.state = {\n      newServiceWorkerDetected: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  handleNewServiceWorker(event) {\n    this.registration = event.detail.registration;\n    this.setState({\n      ...this.state,\n      newServiceWorkerDetected: true,\n    });\n  }\n\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n    const { newServiceWorkerDetected } = this.state;\n\n    return (\n      <Router>\n        <div className=\"App\" id=\"outer-container\">\n\n          {/* Menu */}\n          <AppMenu\n            newServiceWorkerDetected={ newServiceWorkerDetected }\n            onLoadNewServiceWorkerAccept={ this.handleLoadNewServiceWorkerAccept.bind(this) }\n          />\n\n          {/* App Route */}\n          <header className=\"App-header\" id=\"page-wrap\">\n            <GAListener>\n              <Switch>\n                <Route\n                  path=\"/directe\"\n                  render={ props => <Rac1Directe { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour/:minute\"\n                  render={ props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour\"\n                  render={ props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day\"\n                  render={props => <Rac1ByDate { ...props } /> } />\n\n                {/* Set default date to today */}\n                <Redirect to={{ pathname: todayStr }} />\n              </Switch>\n            </GAListener>\n          </header>\n        </div>\n      </Router>\n    )\n  }\n\n  handleLoadNewServiceWorkerAccept() {\n    this.props.onLoadNewServiceWorkerAccept(this.registration);\n  }\n}\n\nApp.defaultProps = {\n  onLoadNewServiceWorkerAccept: registration => {},\n};\n\nApp.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Callback to call when user accepts loading new service worker\n// - Send message to SW to trigger the update\n// - Once updated, reload this window to load new assets\nconst updateSW = (registration) => {\n  if( registration.waiting ) {\n\n    // When the user asks to refresh the UI, we'll need to reload the window\n    var preventDevToolsReloadLoop;\n    navigator.serviceWorker.addEventListener('controllerchange', function(event) {\n\n      // Ensure refresh is only called once.\n      // This works around a bug in \"force update on reload\".\n      if (preventDevToolsReloadLoop) {\n        return;\n      }\n\n      preventDevToolsReloadLoop = true;\n      console.log('Controller loaded');\n      window.location.reload();\n    });\n\n    // Send a message to the new serviceWorker to activate itself\n    registration.waiting.postMessage('skipWaiting');\n  }\n};\n\nReactDOM.render(\n  <App onLoadNewServiceWorkerAccept={ updateSW } />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({\n\n  // When new ServiceWorker is available, trigger an event on `document`,\n  // passing `registration` as extra data\n  onUpdate: registration => {\n    var event = new CustomEvent('onNewServiceWorker', { detail: { registration } });\n    document.dispatchEvent(event);\n  }\n\n});\n"],"sourceRoot":""}