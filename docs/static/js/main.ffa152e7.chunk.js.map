{"version":3,"sources":["GAListener.jsx","Controls.jsx","Rac1Directe.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","Rac1ByDate.jsx","App.js","serviceWorker.js","index.js"],"names":["GAListenerProd","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loadGoogleTag","ReactGA","initialize","sendPageView","context","router","history","location","listen","set","page","pathname","pageview","GACode","global","dataLayer","gtag","push","arguments","Date","setTimeout","scriptTag","document","createElement","src","concat","body","appendChild","props","children","React","Component","contextTypes","PropTypes","object","GAListener","dnt","navigator","doNotTrack","window","msDoNotTrack","react__WEBPACK_IMPORTED_MODULE_5___default","a","Controls","classCallCheck","possibleConstructorReturn","getPrototypeOf","controls","icon","react_default","index_es","faFastForward","flip","text","help","action","onPlayPrev","faForward","player","currentTime","keys","style","position","left","faEject","rotation","paused","play","pause","onPlayNext","incrementVolume","key","shiftKey","muted","keyHandlerFocus","_keyHandlerFocus","e","force","doFocus","relatedTarget","allowFocus","timer","_keyHandler","focus","getPlayer","extraControls","length","test","userAgent","clearTimeout","_this2","filter","control","hideButtons","includes","map","index","onClick","bind","onMouseUp","aria-label","title","className","borderRadius","padding","margin","fontSize","fontWeight","minWidth","Function","color","name","width","height","border","bottom","right","backgroundColor","cursor","ref","element","onKeyUp","handleKey","onBlur","volume","onSetVolume","increment","volumeNew","setVolume","stopPropagation","forEach","key_orig","every","mod","console","log","preventDefault","PureComponent","defaultProps","Rac1Directe","state","_player","audioEl","initialTitle","Fragment","src_Controls","v","setState","objectSpread","bundle_default","autoPlay","controlsList","preload","ReloadButton","assign","marginBottom","faRefresh","Playlist","_this$props","completedDownload","date","minDate","maxDate","textAlign","display","justifyContent","alignItems","entry_default","onChange","handleDateChange","handleDateBlur","required","value","clearIcon","calendarIcon","faCalendar","Playlist_ReloadButton","onClickReload","disabled","setHours","setMinutes","onDateChange","match","onDateBlur","PodcastsList","current","undefined","listStyleType","marginLeft","paddingLeft","child","textIndent","faPlay","Podcast","handleClick","num","path","uuid","hour","minute","href","textDecoration","handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","err","message","error","dataAttrsFind","dataAttrsClean","Rac1","_podcastsData","_pages_uuids","_previous_uuids","controller","AbortController","onListUpdate","updateList","abort","pageNumber","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","catch","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","toConsumableArray","w","completed","pageUuids","dateToString","d","getFullYear","getMonth","getDate","podcastPage","d1","d2","allCompleted","podcastNew","_this3","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","next","getTime","setDate","dateNext","fetch","credentials","signal","searchData","data","split","line","replace","Number","_this5","Promise","resolve","json","today","dateTime","startsWith","audio","time","appTabletTitle","titleFull","Rac1ByDate","currentUUID","getDateFromParams","waitingUpdate","handleClickReload","assertThisInitialized","params","year","month","day","unlisten","handleHistoryChange","rac1","_this$state","dateText","findCurrentPodcast","autoplay","currentPath","el","playNext","playPrev","onEnded","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","_this$state2","waitingUpdateNext","historyPush","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","App","registration","newServiceWorkerDetected","addEventListener","handleNewServiceWorker","removeEventListener","event","persist","todayStr","linkStyle","HashRouter","paddingInlineStart","Link","to","borderBottomLeftRadius","faByDate","marginRight","borderBottomRightRadius","faDirecte","onLoadNewServiceWorkerAccept","faUpgrade","Switch","Route","render","src_Rac1Directe","src_Rac1ByDate","Redirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","ReactDOM","src_App_0","preventDevToolsReloadLoop","waiting","reload","postMessage","getElementById","URL","process","origin","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","CustomEvent","dispatchEvent"],"mappings":"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","file":"static/js/main.ffa152e7.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListenerProd extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n     super();\n\n     const GACode = 'UA-129704402-1';\n     this.loadGoogleTag(GACode);\n     ReactGA.initialize(GACode);\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\n// Renders GA+children in production, only children for the rest\nclass GAListener extends React.Component {\n  render() {\n\n    const dnt = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;\n\n    // Disable GA in dev and for people with DoNotTrack HTTP header\n    return process.env.NODE_ENV !== 'production' || dnt === \"1\" || dnt === \"yes\" ?\n      this.props.children : (\n      <GAListenerProd>\n        { this.props.children }\n      </GAListenerProd>\n    )\n  }\n}\n\nexport default GAListener;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faEject,\n  faForward,\n  faFastForward,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Controls extends React.PureComponent {\n\n  // Controls definitions\n  controls = [\n    {\n      icon: <FontAwesomeIcon icon={faFastForward} flip=\"horizontal\" />,\n      text: 'Prev',\n      help: 'Play previous podcast',\n      action: () => this.props.onPlayPrev(),\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n          <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n        </span>\n      ),\n      text: '-10m',\n      help: 'Go backwards 10 minutes',\n      action: () => this.player().currentTime -= 600,\n      keys: [ 'PageUp' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '-60s',\n      help: 'Go backwards 1 minute',\n      action: () => this.player().currentTime -= 60,\n      keys: [ 'ArrowUp' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />,\n      text: '-10s',\n      help: 'Go backwards 10 seconds',\n      action: () => this.player().currentTime -= 10,\n      keys: [ 'ArrowLeft' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faEject} rotation={90} />,\n      text: 'Play/Pause',\n      help: 'Toggle Play/Pause',\n      action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      keys: [ ' ', 'p', 'P' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faForward} />,\n      text: '+10s',\n      help: 'Go forward 10 seconds',\n      action: () => this.player().currentTime += 10,\n      keys: [ 'ArrowRight' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '+60s',\n      help: 'Go forward 1 minute',\n      action: () => this.player().currentTime += 60,\n      keys: [ 'ArrowDown' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={faForward} />\n          <FontAwesomeIcon icon={faForward} />\n        </span>\n      ),\n      text: '+10m',\n      help: 'Go forward 10 minutes',\n      action: () => this.player().currentTime += 600,\n      keys: [ 'PageDown' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faFastForward} />,\n      text: 'Next',\n      help: 'Play next podcast',\n      action: () => this.props.onPlayNext(),\n      keys: [ 'Enter' ],\n    },\n    {\n      help: 'Decrement volume 5%',\n      action: () => this.incrementVolume(-.05),\n      keys: [\n        '/',\n        {key: 'ArrowDown', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Increment volume 5%',\n      action: () => this.incrementVolume(.05),\n      keys: [\n        '*',\n        {key: 'ArrowUp', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Toggle mute status',\n      action: () => this.player().muted = !this.player().muted,\n      keys: [ 'm', 'M' ],\n    },\n  ];\n\n  constructor(props) {\n    super();\n\n    // Add extra controls\n    if ( props.extraControls.length ) {\n      this.controls = this.controls.concat(props.extraControls);\n    }\n  }\n\n  keyHandlerFocus = () => {};\n  _keyHandlerFocus = (e, force) => {\n    let doFocus = true;\n\n    // Allow datepicker to get focus\n    if ( e && e.relatedTarget &&\n          this.props.allowFocus(e.relatedTarget) ) {\n      doFocus = false;\n    }\n\n    if(doFocus || force) {\n      this.timer = setTimeout(() => this._keyHandler.focus(), 100);\n    }\n  };\n\n  componentDidMount() {\n    // Disable key handler on mobile devices (enable on the rest)\n    if ( !(/Mobi|Android/i.test(navigator.userAgent)) ) {\n       this.keyHandlerFocus = this._keyHandlerFocus;\n       this.keyHandlerFocus();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    return (\n      <div>\n        { this.controls\n            .filter( control => 'icon' in control && 'text' in control)\n            .filter( control => !this.props.hideButtons.includes(control.text) )\n            .map((control, index) => {\n          return (\n            <button\n              key={ index }\n              onClick={ control.action.bind(this) }\n              onMouseUp={ (e) => this.keyHandlerFocus(e, true) }\n              aria-label={ control.help }\n              title={ control.help }\n              className='rac1-controls-button'\n              style={{\n                borderRadius: '1em',\n                padding: '1em',\n                margin: '1em',\n              }}\n            >\n              <div style={{\n                fontSize: 'calc(1em + 2.5vmin)',\n                fontWeight: 'bold',\n                minWidth: '1.5em',\n              }} >\n                { control.icon instanceof Function ? control.icon() : control.icon }\n              </div>\n              <span style={{\n                fontSize: 'calc(8px + 1vmin)',\n                color: '#333'\n              }}>\n                { control.text instanceof Function ? control.text() : control.text }\n              </span>\n            </button>\n          )\n        })}\n        <input\n          name='player-key-handler'\n          style={{ // Almost invisible ;)\n            width: '1px',\n            height: '1px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            bottom: 0,\n            right: 0,\n            position: 'fixed',\n            backgroundColor: 'transparent',\n            color: 'transparent',\n            cursor: 'default',\n          }}\n          ref={ (element) => { this._keyHandler = element } }\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n          aria-label=\"Key input handler\"\n        />\n      </div>\n    );\n  }\n\n  player = () => this.props.getPlayer();\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.props;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    // Prevent updating volume if limit reached\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = false;\n\n    // Handle controls keys\n    this.controls.forEach( (control) => {\n      (control.keys||[]).forEach( (key_orig) => {\n        let key = typeof key_orig === 'string' ? {key: key_orig} : key_orig;\n        if(e.key === key.key &&\n          ['shiftKey', 'altKey', 'ctrlKey', 'metaKey']\n            .every( (mod) => !!e[mod] === !!key[mod] )) {\n          console.log(control.help);\n          stopPropagation = true;\n          control.action();\n        }\n      });\n    });\n\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:   (e) => {},\n  onPlayPrev:    (e) => {},\n  onPlayNext:    (e) => {},\n  allowFocus:    (e) => {},\n  extraControls: [],\n  hideButtons:   [],\n  volume:        1,\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n  hideButtons: PropTypes.arrayOf(\n    PropTypes.oneOf(\n      ['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s', 'Play/Pause']\n  )).isRequired,\n  extraControls: PropTypes.arrayOf( PropTypes.shape({\n    help: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    icon: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    keys: PropTypes.arrayOf( PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        shiftKey: PropTypes.bool,\n        altKey: PropTypes.bool,\n        ctrlKey: PropTypes.bool,\n        metaKey: PropTypes.bool,\n      }),\n    ])),\n  })),\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\n\nclass Rac1Directe extends Component {\n  // Initial state\n  state = {\n    volume: 1,\n  };\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n  }\n\n  componentDidMount() {\n    this.initialTitle = document.title;\n    document.title = `${this.initialTitle} - Directe`;\n  }\n\n  componentWillUnmount() {\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { volume } = this.state;\n    const currentPath = 'http://rac1.radiocat.net/;*.nsv';\n    const autoplay = true;\n    const title = 'Rac1 en Directe';\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n          hideButtons={['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s']}\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          volume={ volume }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Rac1Directe;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = (props) => {\n  const text = 'Reload';\n  return (\n    <button\n      { ...props }\n      aria-label={ text }\n      style={{\n        borderRadius: '.5em',\n        padding: '.25em',\n        margin: '0 0 0 1em',\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#333'\n      }}>\n        { text }\n      </span>\n    </button>\n  )\n};\n\nclass Playlist extends React.PureComponent {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: '#333',\n        backgroundColor: 'white',\n        padding: '2em',\n        borderRadius: '1em',\n        margin: '1em',\n        textAlign: 'left',\n        position: 'relative',\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if(e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/)) {\n      focus = false;\n    }\n\n    if(focus) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends React.PureComponent {\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: 'none',\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left'\n        }}>\n          { children.map( (child, index) =>\n            <li\n              key={ child.key }\n              style={{\n                position: 'relative',\n                marginLeft: '2.5em',\n                textIndent: '-1.5em',\n                padding: '1pt 0',\n              }}\n            >\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={ faPlay }\n                  style={{\n                    position: 'absolute',\n                    left: '-2.75em',\n                    padding: '1pt 0',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends React.PureComponent {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","// Raises exception on response error\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n// Catches the fetch error, original or 'self-raised'\nfunction catchFetchErrors(err) {\n  if (err.name === 'AbortError') {\n    console.log(err.message);\n  }\n  else {\n    console.error(err);\n  }\n}\n\n// Cached/compiled regexps for parsing HTML\nconst dataAttrsFind   = / class=\"(audioteca-item|pagination-link)\" /;\nconst dataAttrsClean  = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\nclass Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  // Abort controller\n  controller = new AbortController();\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n\n    this.updateList();\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  setDate(date) {\n    if(this.date !== date) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if(pageNumber === 0) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n      // Download podcast data if needed\n      .then(this.getPodcasts.bind(this, pageNumber))\n      // Trigger event for list updated\n      .then(this.handleListUpdate.bind(this, pageNumber))\n      .catch(catchFetchErrors)\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map(podcast => {\n        // If it's a podcast and is not in the cache\n        if(podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData)) {\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n            .catch(catchFetchErrors)\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [...this._previous_uuids.filter(w => w.uuid !== '...')];\n    let completed = true;\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if(pageUuids === undefined) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n\n        // Helper functions\n        const dateToString = (d) => `${d.getFullYear()}/${d.getMonth()}/${d.getDate()}`;\n        const compareDates = (d1,d2) => dateToString(d1) === dateToString(d2);\n\n        // Add this page's podcasts to the list\n        pageUuids\n\n          // Filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n\n          // Filter out podcasts from other dates\n          .filter( podcast => {\n            return !(\"date\" in podcast) || compareDates( podcast.date, this.date )\n          })\n\n          // Add remaining podcasts to the list\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map(podcast => this._podcastsData[podcast.uuid] || podcast );\n\n    // Save complete list on finish\n    if(completed) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every(podcast => 'path' in podcast);\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach((podcast,index) => {\n      if(podcast.uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => { return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    // Set next day's date and string\n    let next = new Date(this.date.getTime());\n    next.setDate(next.getDate() + 1);\n    let dateNext = '';\n\n    // Don't use next day date if it's year's last day\n    if ( !(( next.getMonth() + 1 ) === 1 && next.getDate() === 1) ) {\n      dateNext =\n        pad2( next.getDate() ) + '/' +\n        pad2( 1 + next.getMonth() ) + '/' +\n        next.getFullYear();\n    }\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${dateNext}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n        signal: this.controller.signal,\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter(line => dataAttrsFind.test(line))\n      .map(v => v.replace(dataAttrsClean, '$1=$2'))\n      .map(line => line.split('='))\n      .filter(v => searchData.includes(v[0]));\n\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if(uuid in this._podcastsData) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(\n      `https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`,\n      { signal: this.controller.signal }\n    )\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n\n        // Fix server bug on year's last day, in which gives dates in the future\n        const today = new Date();\n        if (podcast.dateTime.startsWith(`${today.getFullYear() + 1}`)) {\n          podcast.dateTime = podcast.dateTime\n            .replace(`${today.getFullYear() + 1}`, `${today.getFullYear()}`);\n          console.log(\"Podcast date in future. Fixing to: \" + podcast.dateTime);\n        }\n\n        // Add some data to the podcast\n        podcast.uuid      = uuid;\n        podcast.date      = new Date(podcast.dateTime);\n        podcast.hour      = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute    = Number(podcast.audio.time.split(':')[1]);\n        podcast.title     = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\n\nclass Rac1ByDate extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour||0,\n        date.minute||0,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      completed: false,\n      waitingUpdate: false,\n    };\n\n    this.extraControls = [\n      {\n        help: 'Reload playlist',\n        action: this.handleClickReload.bind(this),\n        keys: [ 'r', 'R' ],\n      },\n    ];\n\n    // Debugging on development\n    if(process.env.NODE_ENV === 'development') {\n\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = (props) => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      }\n\n      // Add a button to remove the last podcast in the list\n      this.extraControls.push({\n        icon: 'RL',\n        text: 'Remove last',\n        help: 'Remove last podcast from playlist',\n        action: this.handlePodcastsLastRemove.bind(this),\n      });\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n\n    // Abort backend fetches\n    this.rac1.abort();\n\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { podcasts, volume, completed, date, maxDate } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          allowFocus={ (el) => el.className.match( /date-?picker/ ) }\n          onPlayNext={ this.playNext.bind(this) }\n          onPlayPrev={ this.playPrev.bind(this) }\n          onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n          ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          extraControls={ this.extraControls }\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          onEnded={ this.playNext.bind(this) }\n          volume={ volume }\n        />\n        <Playlist\n          date={ date }\n          minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n          maxDate={ maxDate }\n          completedDownload={ completed }\n          onClickReload={ this.handleClickReload.bind(this) }\n          onDateBlur={ () => this.keyHandlerFocus() }\n          onDateChange={ this.handleDateChange.bind(this) }\n        >\n          <PodcastsList\n            current={ current }\n          >\n          { podcasts.map((podcast, index) =>\n            <Podcast\n              key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n              { ...podcast }\n              onClick={ this.handlePodcastClick.bind(this, index) }\n            />\n          )}\n          </PodcastsList>\n        </Playlist>\n      </React.Fragment>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if(action !== 'POP') {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if(date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if(this.history.location.pathname !== newPath) {\n      if(!replace) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if(completed && currentUUID === '') {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if(waitingUpdate === true && waitingUpdateNext === false) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if(date !== this.state.date) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if(date !== null) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n\n    // If there is not already an incomplete update\n    if(this.state.completed) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter(podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if(found.length > 0) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach((podcast, index) => {\n      if(podcast.uuid === uuid) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if(podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes()) {\n      date.setHours(Number(podcast.hour));\n      date.setMinutes(Number(podcast.minute));\n    }\n\n    replace = currentUUID === '';\n    document.title = `${this.initialTitle}: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if(current > 0) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if(current < (this.state.podcasts.length - 1) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if(retry) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if(!this.state.waitingUpdate) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nexport default Rac1ByDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  Link,\n} from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faBroadcastTower as faDirecte,\n  faCalendarAlt as faByDate,\n  faArrowAltCircleUp as faUpgrade,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport GAListener from './GAListener';\n\nimport Rac1Directe from './Rac1Directe';\nimport Rac1ByDate from './Rac1ByDate';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.registration = false;\n    this.state = {\n      newServiceWorkerDetected: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  handleNewServiceWorker(event) {\n    if ( 'persist' in event) {\n      event.persist();\n    }\n    console.log({event});\n    this.registration = event.registration;\n    this.setState({\n      ...this.state,\n      newServiceWorkerDetected: true,\n    });\n  }\n\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n    const { newServiceWorkerDetected } = this.state;\n    const linkStyle = {\n      padding: '1em',\n      backgroundColor: '#ddd',\n      border: '1px solid #777',\n      display: 'block',\n    };\n\n    return (\n      <Router>\n        <div className=\"App\">\n\n          {/* Menu */}\n          <ul style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              listStyleType: 'none',\n              backgroundColor: '#282c34',\n              paddingInlineStart: 0,\n              margin: 0,\n          }}>\n            <li>\n              <Link\n                to=\"/\"\n                style={{\n                  ...linkStyle,\n                  borderBottomLeftRadius: '.5em',\n                }}>\n                <FontAwesomeIcon icon={ faByDate } style={{ marginRight: '.5em' }} />\n                By date\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/directe\"\n                style={{\n                  ...linkStyle,\n                  borderBottomRightRadius: newServiceWorkerDetected ? null : '.5em',\n                }}>\n                <FontAwesomeIcon icon={ faDirecte } style={{ marginRight: '.5em' }} />\n                En directe\n              </Link>\n            </li>\n            { newServiceWorkerDetected ? (\n                <li>\n                  <a\n                    href='/'\n                    title=\"New version available!\"\n                    onClick={ (e) => {\n                      e.preventDefault();\n                      console.log({ registration: this.registration });\n                      this.props.onLoadNewServiceWorkerAccept(this.registration)\n                    }}\n                    style={{\n                      ...linkStyle,\n                      color: 'green',\n                      borderBottomRightRadius: '.5em',\n                    }}>\n                    <FontAwesomeIcon icon={ faUpgrade } style={{ marginRight: '.5em' }} />\n                    Update!\n                  </a>\n                </li>\n              ) : null\n            }\n          </ul>\n\n          {/* App Route */}\n          <header className=\"App-header\">\n            <GAListener>\n              <Switch>\n                <Route\n                  path=\"/directe\"\n                  render={props => <Rac1Directe { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour/:minute\"\n                  render={props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour\"\n                  render={props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day\"\n                  render={props => <Rac1ByDate { ...props } /> } />\n\n                {/* Set default date to today */}\n                <Redirect to={{ pathname: todayStr }} />\n              </Switch>\n            </GAListener>\n          </header>\n        </div>\n      </Router>\n    )\n  }\n}\n\nApp.defaultProps = {\n  onLoadNewServiceWorkerAccept: (e) => {},\n};\n\nApp.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Callback to call when user accepts loading new service worker\n// - Send message to SW to trigger the update\n// - Once updated, reload this window to load new assets\nconst updateSW = (registration) => {\n  console.log(\"Registration from index.js::updateSW :\", registration);\n  if( registration.waiting ) {\n\n    // When the user asks to refresh the UI, we'll need to reload the window\n    var preventDevToolsReloadLoop;\n    navigator.serviceWorker.addEventListener('controllerchange', function(event) {\n      // Ensure refresh is only called once.\n      // This works around a bug in \"force update on reload\".\n      if (preventDevToolsReloadLoop)\n        return;\n      preventDevToolsReloadLoop = true;\n      console.log('Controller loaded');\n      window.location.reload();\n    });\n\n    // Send a message to the new serviceWorker to activate itself\n    registration.waiting.postMessage('skipWaiting');\n  }\n};\n\nReactDOM.render(\n  <App onLoadNewServiceWorkerAccept={ updateSW } />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({\n\n  // When new ServiceWorker is available, trigger an event on `document`,\n  // passing `registration` as extra data\n  onUpdate: (registration) => {\n    var event = new CustomEvent('onNewServiceWorker', { registration });\n    document.dispatchEvent(event);\n  }\n\n});\n"],"sourceRoot":""}