{"version":3,"sources":["AppMenu.jsx","Controls.jsx","Rac1Directe.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","Rac1ByDate.jsx","App.js","serviceWorker.js","index.js","GAListener.jsx"],"names":["AppMenu","_this$props","this","props","newServiceWorkerDetected","children","linkStyle","react_default","a","createElement","style","padding","background","backgroundSize","backgroundRepeat","backgroundPosition","Link","className","to","index_es","icon","faByDate","marginRight","faDirecte","href","Object","objectSpread","color","title","onClick","handleClickUpdate","bind","faUpgrade","_this","extraClass","react_responsive_default","minWidth","matches","BurgerMenu","pageWrapId","outerContainerId","disableCloseOnEsc","renderLinks","e","preventDefault","onLoadNewServiceWorkerAccept","React","Component","defaultProps","Controls","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","controls","faFastForward","flip","text","help","action","onPlayPrev","faForward","player","currentTime","keys","position","left","faEject","rotation","paused","play","pause","onPlayNext","incrementVolume","key","shiftKey","muted","keyHandlerFocus","_keyHandlerFocus","force","doFocus","relatedTarget","allowFocus","timer","setTimeout","_keyHandler","focus","getPlayer","extraControls","length","concat","test","navigator","userAgent","clearTimeout","_this2","filter","control","hideButtons","includes","map","index","onMouseUp","aria-label","borderRadius","margin","fontSize","fontWeight","Function","name","width","height","border","bottom","right","backgroundColor","cursor","ref","element","onKeyUp","handleKey","onBlur","volume","onSetVolume","increment","volumeNew","setVolume","stopPropagation","forEach","key_orig","every","mod","console","log","PureComponent","Rac1Directe","history","state","_player","audioEl","initialTitle","document","Fragment","src_Controls","v","setState","bundle_default","src","autoPlay","controlsList","preload","ReloadButton","assign","marginBottom","faRefresh","Playlist","completedDownload","date","minDate","maxDate","textAlign","display","justifyContent","alignItems","entry_default","onChange","handleDateChange","handleDateBlur","required","value","clearIcon","calendarIcon","faCalendar","Playlist_ReloadButton","onClickReload","disabled","setHours","setMinutes","onDateChange","match","onDateBlur","Date","PodcastsList","current","undefined","listStyleType","marginLeft","paddingLeft","child","textIndent","faPlay","Podcast","handleClick","num","path","uuid","hour","minute","textDecoration","Rac1","_podcastsData","_pages_uuids","_previous_uuids","controller","AbortController","dataAttrsFind","dataAttrsClean","onListUpdate","setDate","abort","response","ok","Error","statusText","err","message","error","updateList","pageNumber","arguments","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","catch","catchFetchErrors","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","toConsumableArray","w","completed","dateToString","d","getFullYear","getMonth","getDate","filterByDates","d1","d2","page","pageUuids","push","podcastPage","allCompleted","podcastNew","_this3","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","next","getTime","dateNext","fetch","credentials","signal","handleFetchErrors","_this5","searchData","data","split","line","replace","Number","_this6","Promise","resolve","json","dateTime","startsWith","audio","time","appTabletTitle","titleFull","Rac1ByDate","currentUUID","getDateFromParams","waitingUpdate","handleClickReload","assertThisInitialized","params","year","month","day","unlisten","listen","handleHistoryChange","rac1","_this$state","dateText","findCurrentPodcast","autoplay","currentPath","el","playNext","playPrev","onEnded","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","location","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","pathname","_this$state2","waitingUpdateNext","historyPush","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","App","registration","addEventListener","handleNewServiceWorker","removeEventListener","event","detail","todayStr","HashRouter","id","src_AppMenu_0","handleLoadNewServiceWorkerAccept","GAListener","Switch","Route","render","src_Rac1Directe","src_Rac1ByDate","Redirect","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","ReactDOM","src_App_0","preventDevToolsReloadLoop","waiting","reload","postMessage","getElementById","URL","process","origin","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","CustomEvent","dispatchEvent","GAListenerProd","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","loadGoogleTag","ReactGA","initialize","sendPageView","context","router","set","pageview","GACode","global","dataLayer","gtag","scriptTag","body","appendChild","contextTypes","PropTypes","object","dnt","doNotTrack","msDoNotTrack","react__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"static/js/main.84facc80.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faBroadcastTower as faDirecte,\n  faCalendarAlt as faByDate,\n  faArrowAltCircleUp as faUpgrade,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport MediaQuery from 'react-responsive';\nimport {\n  slide as SmallMenu,\n  slide as BigMenu,\n} from 'react-burger-menu'\n\nimport './AppMenu.css';\n\nclass AppMenu extends React.Component {\n  renderLinks() {\n    const { newServiceWorkerDetected, children } = this.props;\n    const linkStyle = {\n    };\n\n    return (\n      <div\n        style={{\n          padding: '3em 1em 1em',\n          background: 'url(logo-rac1.png)',\n          backgroundSize: 50,\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center .5em',\n        }}>\n        <Link className=\"bm-item\" style={ linkStyle } to=\"/\">\n          <FontAwesomeIcon icon={ faByDate } style={{ marginRight: '.5em' }} />\n          <span>By date</span>\n        </Link>\n        <Link className=\"bm-item\" style={ linkStyle } to=\"/directe\">\n          <FontAwesomeIcon icon={ faDirecte } style={{ marginRight: '.5em' }} />\n          <span>En directe</span>\n        </Link>\n        { newServiceWorkerDetected ? (\n            <a\n              href='/'\n              className=\"bm-item\"\n              style={{ ...linkStyle, color: 'green' }}\n              title=\"New version available!\"\n              onClick={ this.handleClickUpdate.bind(this) }\n              >\n              <FontAwesomeIcon icon={ faUpgrade } style={{ marginRight: '.5em' }} />\n              <span>Update!</span>\n            </a>\n          ) : null\n        }\n        { children }\n      </div>\n    )\n  }\n\n  render() {\n    const { newServiceWorkerDetected } = this.props;\n    const extraClass = newServiceWorkerDetected ? ' news' : '';\n\n    return (\n      <MediaQuery minWidth={700}>\n        { matches => {\n          if ( matches ) {\n            return (\n              <div className={ \"menu-big\" + extraClass }>\n                <BigMenu\n                  pageWrapId=\"page-wrap\"\n                  outerContainerId=\"outer-container\"\n                  disableCloseOnEsc\n                >\n                  { this.renderLinks() }\n                </BigMenu>\n              </div>\n            );\n          } else {\n            return (\n              <div className={ \"menu-small\" + extraClass }>\n                <SmallMenu\n                  pageWrapId=\"page-wrap\"\n                  outerContainerId=\"outer-container\"\n                  disableCloseOnEsc\n                >\n                  { this.renderLinks() }\n                </SmallMenu>\n              </div>\n            );\n          }\n        }}\n      </MediaQuery>\n    )\n  }\n\n  handleClickUpdate(e) {\n    e.preventDefault();\n    this.props.onLoadNewServiceWorkerAccept();\n  }\n}\n\nAppMenu.defaultProps = {\n  onLoadNewServiceWorkerAccept: () => {},\n  newServiceWorkerDetected: false,\n};\n\nAppMenu.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n  newServiceWorkerDetected: PropTypes.bool.isRequired,\n};\n\nexport default AppMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faEject,\n  faForward,\n  faFastForward,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Controls extends React.PureComponent {\n\n  // Controls definitions\n  controls = [\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } flip=\"horizontal\" />,\n      text: 'Prev',\n      help: 'Play previous podcast',\n      action: () => this.props.onPlayPrev(),\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n        </span>\n      ),\n      text: '-10m',\n      help: 'Go backwards 10 minutes',\n      action: () => this.player().currentTime -= 600,\n      keys: [ 'PageUp' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '-60s',\n      help: 'Go backwards 1 minute',\n      action: () => this.player().currentTime -= 60,\n      keys: [ 'ArrowUp' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />,\n      text: '-10s',\n      help: 'Go backwards 10 seconds',\n      action: () => this.player().currentTime -= 10,\n      keys: [ 'ArrowLeft' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faEject } rotation={90} />,\n      text: 'Play/Pause',\n      help: 'Toggle Play/Pause',\n      action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      keys: [ ' ', 'p', 'P' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } />,\n      text: '+10s',\n      help: 'Go forward 10 seconds',\n      action: () => this.player().currentTime += 10,\n      keys: [ 'ArrowRight' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '+60s',\n      help: 'Go forward 1 minute',\n      action: () => this.player().currentTime += 60,\n      keys: [ 'ArrowDown' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={ faForward } />\n          <FontAwesomeIcon icon={ faForward } />\n        </span>\n      ),\n      text: '+10m',\n      help: 'Go forward 10 minutes',\n      action: () => this.player().currentTime += 600,\n      keys: [ 'PageDown' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } />,\n      text: 'Next',\n      help: 'Play next podcast',\n      action: () => this.props.onPlayNext(),\n      keys: [ 'Enter' ],\n    },\n    {\n      help: 'Decrement volume 5%',\n      action: () => this.incrementVolume(-.05),\n      keys: [\n        '/',\n        {key: 'ArrowDown', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Increment volume 5%',\n      action: () => this.incrementVolume(.05),\n      keys: [\n        '*',\n        {key: 'ArrowUp', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Toggle mute status',\n      action: () => this.player().muted = !this.player().muted,\n      keys: [ 'm', 'M' ],\n    },\n  ];\n\n  constructor(props) {\n    super();\n\n    // Add extra controls\n    if ( props.extraControls.length ) {\n      this.controls = this.controls.concat( props.extraControls );\n    }\n  }\n\n  keyHandlerFocus = () => {};\n  _keyHandlerFocus = (e, force) => {\n    let doFocus = true;\n\n    // Allow datepicker to get focus\n    if ( e && e.relatedTarget &&\n          this.props.allowFocus( e.relatedTarget ) ) {\n      doFocus = false;\n    }\n\n    if ( doFocus || force ) {\n      this.timer = setTimeout(() => this._keyHandler.focus(), 100);\n    }\n  };\n\n  componentDidMount() {\n    // Disable key handler on mobile devices (enable on the rest)\n    if ( !(/Mobi|Android/i.test(navigator.userAgent)) ) {\n       this.keyHandlerFocus = this._keyHandlerFocus;\n       this.keyHandlerFocus();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    return (\n      <div>\n        { this.controls\n            .filter( control => 'icon' in control && 'text' in control)\n            .filter( control => !this.props.hideButtons.includes(control.text) )\n            .map( (control, index) => {\n          return (\n            <button\n              key={ index }\n              onClick={ control.action.bind(this) }\n              onMouseUp={ e => this.keyHandlerFocus(e, true) }\n              aria-label={ control.help }\n              title={ control.help }\n              className='rac1-controls-button'\n              style={{\n                borderRadius: '1em',\n                padding: '1em',\n                margin: '1em',\n              }}\n            >\n              <div style={{\n                fontSize: 'calc(1em + 2.5vmin)',\n                fontWeight: 'bold',\n                minWidth: '1.5em',\n              }} >\n                { control.icon instanceof Function ? control.icon() : control.icon }\n              </div>\n              <span style={{\n                fontSize: 'calc(8px + 1vmin)',\n                color: '#333'\n              }}>\n                { control.text instanceof Function ? control.text() : control.text }\n              </span>\n            </button>\n          )\n        })}\n        <input\n          name='player-key-handler'\n          style={{ // Almost invisible ;)\n            width: '1px',\n            height: '1px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            bottom: 0,\n            right: 0,\n            position: 'fixed',\n            backgroundColor: 'transparent',\n            color: 'transparent',\n            cursor: 'default',\n          }}\n          ref={ element => { this._keyHandler = element } }\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n          aria-label=\"Key input handler\"\n        />\n      </div>\n    );\n  }\n\n  player = () => this.props.getPlayer();\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.props;\n    let volumeNew = volume;\n\n    // Increment\n    if ( increment > 0 && volume < 1 ) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if ( increment < 0 && volume > 0 ) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    // Prevent updating volume if limit reached\n    if ( volumeNew !== volume ) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = false;\n\n    // Handle controls keys\n    this.controls.forEach( control => {\n      (control.keys||[]).forEach( key_orig => {\n\n        // Understand plain string or custom key object\n        let key = typeof key_orig === 'string' ? {key: key_orig} : key_orig;\n\n        // If it's exact key match\n        if(e.key === key.key &&\n          ['shiftKey', 'altKey', 'ctrlKey', 'metaKey']\n            .every( (mod) => !!e[mod] === !!key[mod] )) {\n          console.log(control.help);\n          stopPropagation = true;\n          control.action();\n        }\n      });\n    });\n\n    if ( stopPropagation ) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:   e => {},\n  onPlayPrev:    e => {},\n  onPlayNext:    e => {},\n  allowFocus:    e => {},\n  extraControls: [],\n  hideButtons:   [],\n  volume:        1,\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n  hideButtons: PropTypes.arrayOf(\n    PropTypes.oneOf(\n      ['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s', 'Play/Pause']\n  )).isRequired,\n  extraControls: PropTypes.arrayOf( PropTypes.shape({\n    help: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    icon: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    keys: PropTypes.arrayOf( PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        shiftKey: PropTypes.bool,\n        altKey: PropTypes.bool,\n        ctrlKey: PropTypes.bool,\n        metaKey: PropTypes.bool,\n      }),\n    ])),\n  })),\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\n\nclass Rac1Directe extends Component {\n  // Initial state\n  state = {\n    volume: 1,\n  };\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n  }\n\n  componentDidMount() {\n    this.initialTitle = document.title;\n    document.title = `${this.initialTitle} - Directe`;\n  }\n\n  componentWillUnmount() {\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { volume } = this.state;\n    const currentPath = 'http://rac1.radiocat.net/;*.nsv';\n    const autoplay = true;\n    const title = 'Rac1 en Directe';\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n          hideButtons={['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s']}\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          volume={ volume }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Rac1Directe;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = (props) => {\n  const text = 'Reload';\n  return (\n    <button\n      { ...props }\n      aria-label={ text }\n      style={{\n        borderRadius: '.5em',\n        padding: '.25em',\n        margin: '0 0 0 1em',\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#333'\n      }}>\n        { text }\n      </span>\n    </button>\n  )\n};\n\nclass Playlist extends React.PureComponent {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: '#333',\n        backgroundColor: 'white',\n        padding: '2em',\n        borderRadius: '1em',\n        margin: '1em',\n        textAlign: 'left',\n        position: 'relative',\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if ( e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/) ) {\n      focus = false;\n    }\n\n    if ( focus ) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends React.PureComponent {\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: 'none',\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left'\n        }}>\n          { children.map( (child, index) =>\n            <li\n              key={ child.key }\n              style={{\n                position: 'relative',\n                marginLeft: '2.5em',\n                textIndent: '-1.5em',\n                padding: '1pt 0',\n              }}\n            >\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={ faPlay }\n                  style={{\n                    position: 'absolute',\n                    left: '-2.75em',\n                    padding: '1pt 0',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends React.PureComponent {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","class Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  // Abort controller\n  controller = new AbortController();\n\n  constructor(props) {\n    const noop = () => {};\n    this.onListUpdate = props.onListUpdate || noop;\n    this.setDate(props.date);\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  // Raises exception on response error\n  handleFetchErrors(response) {\n    if ( !response.ok ) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  // Catches the fetch error, original or 'self-raised'\n  catchFetchErrors(err) {\n    if ( err.name === 'AbortError' ) {\n      console.log(err.message);\n    }\n    else {\n      console.error(err);\n    }\n  }\n\n  // Cached/compiled regexps for parsing HTML\n  dataAttrsFind  = / class=\"(audioteca-item|pagination-link)\" /;\n  dataAttrsClean = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\n  setDate(date) {\n    if ( this.date !== date ) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if ( pageNumber === 0 ) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n\n      // Download podcast data if needed\n      .then( this.getPodcasts.bind(this, pageNumber) )\n\n      // Trigger event for list updated\n      .then( this.handleListUpdate.bind(this, pageNumber) )\n\n      // Catch Exceptions\n      .catch( this.catchFetchErrors )\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map( podcast => {\n\n        // If it's a podcast and is not in the cache\n        if ( podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData) ) {\n\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n            .catch( this.catchFetchErrors )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [ ...this._previous_uuids.filter(w => w.uuid !== '...') ];\n    let completed = true;\n\n    // Helper functions\n    const dateToString = d => `${d.getFullYear()}/${d.getMonth()+1}/${d.getDate()}`;\n    const compareDates = (d1, d2) => dateToString(d1) === dateToString(d2);\n    const filterByDates = podcast => {\n      return !(\"date\" in podcast) || compareDates( podcast.date, this.date )\n    };\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if ( pageUuids === undefined ) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n\n        // Add this page's podcasts to the list\n        pageUuids\n\n          // Filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n\n          // Filter out podcasts from other dates\n          .filter( filterByDates )\n\n          // Add remaining podcasts to the list\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map( podcast => this._podcastsData[podcast.uuid] || podcast )\n          // Filter out podcasts from other dates\n          .filter( filterByDates );\n\n    // Save complete list on finish\n    if ( completed ) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every( podcast => 'path' in podcast );\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach( (podcast,index) => {\n      if ( podcast.uuid === podcastNew.uuid ) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then( dataRaw => {\n\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if ( pageNumber === 0 ) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        // Save in reversed order and along with the page number\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map( uuid => { return {uuid, page: pageNumber} } );\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    // Set next day's date and string\n    let next = new Date(this.date.getTime());\n    next.setDate(next.getDate() + 1);\n    let dateNext = '';\n\n    // Don't use next day date if it's 2018's last day\n    if ( !(next.getFullYear() === 2019 && next.getMonth() === 0 && next.getDate() === 1) ) {\n      dateNext =\n        pad2( next.getDate() ) + '/' +\n        pad2( 1 + next.getMonth() ) + '/' +\n        next.getFullYear();\n    }\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + \"text=&programId=&sectionId=HOUR&\"\n      + `from=${date}&to=${dateNext}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n        signal: this.controller.signal,\n      })\n      .then( this.handleFetchErrors )\n      .then( response => response.text() )\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter( line => this.dataAttrsFind.test(line) )\n      .map( v => v.replace(this.dataAttrsClean, '$1=$2') )\n      .map( line => line.split('=') )\n      .filter( v => searchData.includes(v[0]) );\n\n    return {\n      uuidsPage: data\n        .filter( v => v[0] === 'data-audio-id' )\n        .map( v => v[1] ),\n      pages: data\n        .filter( v => v[0] === 'data-audioteca-search-page' )\n        .map( v => Number(v[1]) ),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if ( uuid in this._podcastsData ) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(\n      `https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`,\n      { signal: this.controller.signal }\n    )\n      .then( this.handleFetchErrors )\n      .then( data => data.json() )\n      .then( podcast => {\n\n        // Fix server bug on year's last day, in which gives dates in the future\n        if ( podcast.dateTime.startsWith(\n          `${this.date.getFullYear() + 1}-${this.date.getMonth() + 1}`\n        )) {\n          podcast.dateTime = podcast.dateTime\n            .replace(`${this.date.getFullYear() + 1}`, `${this.date.getFullYear()}`);\n          console.log(\"Podcast date in future. Fixing to: \" + podcast.dateTime);\n        }\n\n        // Add some data to the podcast\n        podcast.uuid      = uuid;\n        podcast.date      = new Date(podcast.dateTime);\n        podcast.hour      = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute    = Number(podcast.audio.time.split(':')[1]);\n        podcast.title     = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\n\nclass Rac1ByDate extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour||0,\n        date.minute||0,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      completed: false,\n      waitingUpdate: false,\n    };\n\n    this.extraControls = [\n      {\n        help: 'Reload playlist',\n        action: this.handleClickReload.bind(this),\n        keys: [ 'r', 'R' ],\n      },\n    ];\n\n    // Debugging on development\n    if ( process.env.NODE_ENV === 'development' ) {\n\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = (props) => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      }\n\n      // Add a button to remove the last podcast in the list\n      this.extraControls.push({\n        icon: 'RL',\n        text: 'Remove last',\n        help: 'Remove last podcast from playlist',\n        action: this.handlePodcastsLastRemove.bind(this),\n      });\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n\n    // Abort backend fetches\n    this.rac1.abort();\n\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { podcasts, volume, completed, date, maxDate } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          allowFocus={ (el) => el.className.match( /date-?picker/ ) }\n          onPlayNext={ this.playNext.bind(this) }\n          onPlayPrev={ this.playPrev.bind(this) }\n          onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n          ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          extraControls={ this.extraControls }\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          onEnded={ this.playNext.bind(this) }\n          volume={ volume }\n        />\n        <Playlist\n          date={ date }\n          minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n          maxDate={ maxDate }\n          completedDownload={ completed }\n          onClickReload={ this.handleClickReload.bind(this) }\n          onDateBlur={ () => this.keyHandlerFocus() }\n          onDateChange={ this.handleDateChange.bind(this) }\n        >\n          <PodcastsList\n            current={ current }\n          >\n          { podcasts.map((podcast, index) =>\n            <Podcast\n              key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n              { ...podcast }\n              onClick={ this.handlePodcastClick.bind(this, index) }\n            />\n          )}\n          </PodcastsList>\n        </Playlist>\n      </React.Fragment>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if( action !== 'POP' ) {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if ( date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if ( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if ( this.history.location.pathname !== newPath ) {\n      if ( !replace ) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if ( completed && currentUUID === '' ) {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if ( waitingUpdate === true && waitingUpdateNext === false ) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if ( date !== this.state.date ) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if ( date !== null ) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n\n    // If there is not already an incomplete update\n    if ( this.state.completed ) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter( podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if ( found.length > 0 ) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach( (podcast, index) => {\n      if ( podcast.uuid === uuid ) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if ( podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes() ) {\n      date.setHours( Number(podcast.hour) );\n      date.setMinutes( Number(podcast.minute) );\n    }\n\n    replace = currentUUID === '';\n    document.title = `${this.initialTitle}: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if ( current > 0 ) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if ( current < (this.state.podcasts.length - 1 ) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if ( retry ) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if ( !this.state.waitingUpdate ) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nexport default Rac1ByDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport AppMenu from './AppMenu';\nimport GAListener from './GAListener';\nimport Rac1Directe from './Rac1Directe';\nimport Rac1ByDate from './Rac1ByDate';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.registration = false;\n    this.state = {\n      newServiceWorkerDetected: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  handleNewServiceWorker(event) {\n    this.registration = event.detail.registration;\n    this.setState({\n      ...this.state,\n      newServiceWorkerDetected: true,\n    });\n  }\n\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n    const { newServiceWorkerDetected } = this.state;\n\n    return (\n      <Router>\n        <div className=\"App\" id=\"outer-container\">\n\n          {/* Menu */}\n          <AppMenu\n            newServiceWorkerDetected={ newServiceWorkerDetected }\n            onLoadNewServiceWorkerAccept={ this.handleLoadNewServiceWorkerAccept.bind(this) }\n          />\n\n          {/* App Route */}\n          <header className=\"App-header\" id=\"page-wrap\">\n            <GAListener>\n              <Switch>\n                <Route\n                  path=\"/directe\"\n                  render={ props => <Rac1Directe { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour/:minute\"\n                  render={ props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour\"\n                  render={ props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day\"\n                  render={props => <Rac1ByDate { ...props } /> } />\n\n                {/* Set default date to today */}\n                <Redirect to={{ pathname: todayStr }} />\n              </Switch>\n            </GAListener>\n          </header>\n        </div>\n      </Router>\n    )\n  }\n\n  handleLoadNewServiceWorkerAccept() {\n    this.props.onLoadNewServiceWorkerAccept(this.registration);\n  }\n}\n\nApp.defaultProps = {\n  onLoadNewServiceWorkerAccept: registration => {},\n};\n\nApp.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Callback to call when user accepts loading new service worker\n// - Send message to SW to trigger the update\n// - Once updated, reload this window to load new assets\nconst updateSW = (registration) => {\n  if( registration.waiting ) {\n\n    // When the user asks to refresh the UI, we'll need to reload the window\n    var preventDevToolsReloadLoop;\n    navigator.serviceWorker.addEventListener('controllerchange', function(event) {\n\n      // Ensure refresh is only called once.\n      // This works around a bug in \"force update on reload\".\n      if (preventDevToolsReloadLoop) {\n        return;\n      }\n\n      preventDevToolsReloadLoop = true;\n      console.log('Controller loaded');\n      window.location.reload();\n    });\n\n    // Send a message to the new serviceWorker to activate itself\n    registration.waiting.postMessage('skipWaiting');\n  }\n};\n\nReactDOM.render(\n  <App onLoadNewServiceWorkerAccept={ updateSW } />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({\n\n  // When new ServiceWorker is available, trigger an event on `document`,\n  // passing `registration` as extra data\n  onUpdate: registration => {\n    var event = new CustomEvent('onNewServiceWorker', { detail: { registration } });\n    document.dispatchEvent(event);\n  }\n\n});\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListenerProd extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n     super();\n\n     const GACode = 'UA-129704402-1';\n     this.loadGoogleTag(GACode);\n     ReactGA.initialize(GACode);\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\n// Renders GA+children in production, only children for the rest\nclass GAListener extends React.Component {\n  render() {\n\n    const dnt = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;\n\n    // Disable GA in dev and for people with DoNotTrack HTTP header\n    return process.env.NODE_ENV !== 'production' || dnt === \"1\" || dnt === \"yes\" ?\n      this.props.children : (\n      <GAListenerProd>\n        { this.props.children }\n      </GAListenerProd>\n    )\n  }\n}\n\nexport default GAListener;\n"],"sourceRoot":""}