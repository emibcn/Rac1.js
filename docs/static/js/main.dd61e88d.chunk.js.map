{"version":3,"sources":["GAListener.jsx","Controls.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","App.js","serviceWorker.js","index.js"],"names":["GAListener","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loadGoogleTag","ReactGA","initialize","sendPageView","context","router","history","location","listen","set","page","pathname","pageview","GACode","global","dataLayer","gtag","push","arguments","Date","setTimeout","scriptTag","document","createElement","src","concat","body","appendChild","props","children","Component","contextTypes","PropTypes","object","Controls","classCallCheck","possibleConstructorReturn","getPrototypeOf","keyHandlerFocus","player","getPlayer","state","controls","icon","react_default","a","index_es","faFastForward","flip","text","action","onPlayPrev","faForward","currentTime","style","position","left","faEject","rotation","paused","play","pause","onPlayNext","_this2","test","navigator","userAgent","e","doFocus","relatedTarget","allowFocus","_keyHandler","focus","setState","objectSpread","_this3","onFocus","map","control","index","key","onClick","bind","borderRadius","padding","margin","fontSize","fontWeight","minWidth","Function","color","name","width","height","border","bottom","right","backgroundColor","cursor","ref","element","onKeyUp","handleKey","onBlur","volume","onSetVolume","increment","volumeNew","setVolume","stopPropagation","shiftKey","incrementVolume","muted","handleClickReload","preventDefault","defaultProps","onPodcastsLastRemove","ReloadButton","assign","marginBottom","faRefresh","Playlist","_this$props","completedDownload","date","minDate","maxDate","textAlign","display","justifyContent","alignItems","entry_default","onChange","handleDateChange","handleDateBlur","required","value","clearIcon","calendarIcon","faCalendar","Playlist_ReloadButton","onClickReload","disabled","setHours","setMinutes","onDateChange","className","match","onDateBlur","PodcastsList","current","undefined","length","listStyleType","marginLeft","paddingLeft","child","textIndent","faPlay","Podcast","handleClick","num","path","uuid","hour","minute","title","href","textDecoration","handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","error","console","dataAttrsFind","dataAttrsClean","Rac1","_podcastsData","_pages_uuids","_previous_uuids","onListUpdate","updateList","pageNumber","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","toConsumableArray","filter","w","completed","forEach","pageUuids","podcastPage","allCompleted","every","podcastNew","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","getDate","getMonth","getFullYear","fetch","credentials","catch","searchData","data","split","line","v","replace","includes","Number","_this5","Promise","resolve","json","audio","time","appTabletTitle","titleFull","Rac1Player","initialTitle","currentUUID","getDateFromParams","waitingUpdate","params","year","month","day","unlisten","handleHistoryChange","rac1","_this$state","dateText","findCurrentPodcast","autoplay","currentPath","src_Controls","el","playNext","playPrev","handlePodcastsLastRemove","bundle_default","_player","autoPlay","preload","onEnded","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","_this$state2","waitingUpdateNext","historyPush","setDate","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","audioEl","App","todayStr","HashRouter","Switch","Route","render","App_Rac1Player","Redirect","to","Boolean","window","hostname","ReactDOM","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd61e88d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListener extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n     super();\n\n     const GACode = 'UA-129704402-1';\n     this.loadGoogleTag(GACode);\n     ReactGA.initialize(GACode);\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default GAListener;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faEject,\n  faForward,\n  faFastForward,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Controls extends Component {\n  constructor(props) {\n    super();\n\n    // Initial state\n    this.state = {\n      controls: [],\n    };\n\n    // Controls definitions\n    this.controls = [\n      {\n        icon: <FontAwesomeIcon icon={faFastForward} flip=\"horizontal\" />,\n        text: 'Prev',\n        action: () => this.props.onPlayPrev(),\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n            <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n          </span>\n        ),\n        text: '-10m',\n        action: () => this.player().currentTime -= 600,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon\n              icon={faForward}\n              flip=\"horizontal\"\n              style={{ position: 'relative', left: '.25em' }} />\n            <FontAwesomeIcon\n              icon={faForward}\n              flip=\"horizontal\"\n              style={{ position: 'relative', left: '-.25em' }} />\n          </span>\n        ),\n        text: '-60s',\n        action: () => this.player().currentTime -= 60,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />,\n        text: '-10s',\n        action: () => this.player().currentTime -= 10,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faEject} rotation={90} />,\n        text: 'Play/Pause',\n        action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      },\n      {\n        icon: <FontAwesomeIcon icon={faForward} />,\n        text: '+10s',\n        action: () => this.player().currentTime += 10,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon\n              icon={faForward}\n              style={{ position: 'relative', left: '.25em' }} />\n            <FontAwesomeIcon\n              icon={faForward}\n              style={{ position: 'relative', left: '-.25em' }} />\n          </span>\n        ),\n        text: '+60s',\n        action: () => this.player().currentTime += 60,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon icon={faForward} />\n            <FontAwesomeIcon icon={faForward} />\n          </span>\n        ),\n        text: '+10m',\n        action: () => this.player().currentTime += 600,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faFastForward} />,\n        text: 'Next',\n        action: () => this.props.onPlayNext(),\n      },\n    ];\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n      // Add a button to remove the last podcast in the list\n      this.controls.push({\n          icon: 'RL',\n          text: 'Remove last',\n          action: () => this.props.onPodcastsLastRemove(),\n        });\n    }\n  }\n\n  keyHandlerFocus = () => {};\n\n  componentDidMount() {\n\n    // Disable key handler on mobile devices\n    if (!(/Mobi|Android/i.test(navigator.userAgent))) {\n      this.keyHandlerFocus = (e) => {\n        let doFocus = true;\n\n        // Allow datepicker to get focus\n        if(e && e.relatedTarget &&\n          this.props.allowFocus(e.relatedTarget)) {\n          doFocus = false;\n        }\n\n        if(doFocus) {\n          setTimeout(() => this._keyHandler.focus(), 100);\n        }\n      };\n    }\n\n    this.keyHandlerFocus();\n    this.setState({\n      ...this.state,\n      controls: this.controls,\n    });\n  }\n\n  player = () => this.props.getPlayer();\n\n  render() {\n    const { controls } = this.state;\n\n    return (\n      <div onFocus={ (e) => this.keyHandlerFocus(e) } >\n        { controls.map((control, index) => {\n          return (\n            <button\n              key={ index }\n              onClick={ control.action.bind(this) }\n              style={{\n                borderRadius: \"1em\",\n                padding: \"1em\",\n                margin: \"1em\",\n              }}\n            >\n              <div style={{\n                fontSize: 'calc(1em + 2.5vmin)',\n                fontWeight: 'bold',\n                minWidth: '1.5em',\n              }} >\n                { control.icon instanceof Function ? control.icon() : control.icon }\n              </div>\n              <span style={{ fontSize: 'calc(8px + 1vmin)', color: '#777' }}>\n                { control.text instanceof Function ? control.text() : control.text }\n              </span>\n            </button>\n          )\n        })}\n        <input\n          name=\"player-key-handler\"\n          style={{ // Almost invisible ;)\n            width: '1px',\n            height: '1px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            bottom: 0,\n            right: 0,\n            position: 'fixed',\n            backgroundColor: 'transparent',\n            color: 'transparent',\n            cursor: 'default',\n          }}\n          ref={(element) => { this._keyHandler = element; }}\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n        />\n      </div>\n    );\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.state;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = true;\n    switch(e.key) {\n      case 'Enter':\n        this.props.onPlayNext();\n        break;\n      case ' ':\n      case 'p':\n      case 'P':\n        this.player().paused ? this.player().play() : this.player().pause();\n        break;\n      case 'ArrowLeft':\n        this.player().currentTime -= 10;\n        break;\n      case 'ArrowRight':\n        this.player().currentTime += 10;\n        break;\n      case 'ArrowUp':\n        if(e.shiftKey) {\n          this.incrementVolume(.05);\n        }\n        else {\n          this.player().currentTime -= 60;\n        }\n        break;\n      case 'ArrowDown':\n        if(e.shiftKey) {\n          this.incrementVolume(-.05);\n        }\n        else {\n          this.player().currentTime += 60;\n        }\n        break;\n      case 'PageUp':\n        this.player().currentTime -= 600;\n        break;\n      case 'PageDown':\n        this.player().currentTime += 600;\n        break;\n      case '*':\n        this.incrementVolume(.05);\n        break;\n      case '/':\n        this.incrementVolume(-.05);\n        break;\n      case 'm':\n      case 'M':\n        this.player().muted = !this.player().muted;\n        break;\n      case 'r':\n      case 'R':\n        this.handleClickReload();\n        break;\n      default:\n        stopPropagation = false;\n        break;\n    }\n\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:          (e) => {},\n  onPodcastsLastRemove: (e) => {},\n  onPlayPrev:           (e) => {},\n  onPlayNext:           (e) => {},\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPodcastsLastRemove: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = (props) => {\n  return (\n    <button\n      { ...props }\n      style={{\n        borderRadius: \".5em\",\n        padding: \".25em\",\n        margin: \"0 0 0 1em\",\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#777'\n      }}>\n        Reload\n      </span>\n    </button>\n  )\n};\n\nclass Playlist extends Component {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: \"#777\",\n        backgroundColor: \"white\",\n        padding: \"2em\",\n        borderRadius: \"1em\",\n        margin: \"1em\",\n        textAlign: \"left\",\n        position: \"relative\",\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if(e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/)) {\n      focus = false;\n    }\n\n    if(focus) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends Component {\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: 'none',\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left'\n        }}>\n          { children.map((child, index) =>\n            <li\n              key={ child.key }\n              style={{\n                position: 'relative',\n                marginLeft: '2.5em',\n                textIndent: '-1.5em',\n                padding: '1pt 0',\n              }}\n            >\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={faPlay}\n                  style={{\n                    position: 'absolute',\n                    left: '-2.75em',\n                    padding: '1pt 0',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends Component {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","// Raises exception on response error\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n// Catches the fetch error, original or 'self-raised'\nfunction catchFetchErrors(error) {\n  console.error(error);\n}\n\n// Cached/compiled regexps for parsing HTML\nconst dataAttrsFind   = / class=\"(audioteca-item|pagination-link)\" /;\nconst dataAttrsClean  = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\nclass Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n\n    this.updateList();\n  }\n\n  setDate(date) {\n    if(this.date !== date) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if(pageNumber === 0) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n      // Download podcast data if needed\n      .then(this.getPodcasts.bind(this, pageNumber))\n      // Trigger event for list updated\n      .then(this.handleListUpdate.bind(this, pageNumber));\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map(podcast => {\n        // If it's a podcast and is not in the cache\n        if(podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData)) {\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [...this._previous_uuids.filter(w => w.uuid !== '...')];\n    let completed = true;\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if(pageUuids === undefined) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n        // Add this page's podcasts to the list\n        pageUuids\n          // filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map(podcast => this._podcastsData[podcast.uuid] || podcast );\n\n    // Save complete list on finish\n    if(completed) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every(podcast => 'path' in podcast);\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach((podcast,index) => {\n      if(podcast.uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => { return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${date}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n      .catch(catchFetchErrors)\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter(line => dataAttrsFind.test(line))\n      .map(v => v.replace(dataAttrsClean, '$1=$2'))\n      .map(line => line.split('='))\n      .filter(v => searchData.includes(v[0]));\n\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if(uuid in this._podcastsData) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(`https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`)\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n        // Add some data to the podcast\n        podcast.uuid = uuid;\n        podcast.hour   = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute = Number(podcast.audio.time.split(':')[1]);\n        podcast.title = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n      .catch(catchFetchErrors)\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\nimport GAListener from './GAListener';\n\nimport Rac1 from './rac1';\nimport './App.css';\n\nclass Rac1Player extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour,\n        date.minute,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      completed: false,\n      waitingUpdate: false,\n    };\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = (props) => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      }\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n  }\n\n  render() {\n    const { podcasts, volume, completed, date, maxDate } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>{ title }</h3>\n          <Controls\n            getPlayer={ this.player.bind(this) }\n            volume={ volume }\n            allowFocus={ (el) => el.className.match(/date-?picker/) }\n            onPlayNext={ this.playNext.bind(this) }\n            onPlayPrev={ this.playPrev.bind(this) }\n            onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n            onPodcastsLastRemove={ this.handlePodcastsLastRemove.bind(this) }\n            ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          />\n          <ReactAudioPlayer\n            ref={(element) => { this._player = element; }}\n            style={{ width: '100%' }}\n            src={ currentPath }\n            autoPlay={ autoplay }\n            controls\n            preload={ (autoplay ? \"auto\" : \"metadata\") }\n            onEnded={ this.playNext.bind(this) }\n            volume={ volume }\n          />\n          <Playlist\n            date={ date }\n            minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n            maxDate={ maxDate }\n            completedDownload={ completed }\n            onClickReload={ this.handleClickReload.bind(this) }\n            onDateBlur={ () => this.keyHandlerFocus() }\n            onDateChange={ this.handleDateChange.bind(this) }\n          >\n            <PodcastsList\n              current={ current }\n            >\n            { podcasts.map((podcast, index) =>\n              <Podcast\n                key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n                { ...podcast }\n                onClick={ this.handlePodcastClick.bind(this, index) }\n              />\n            )}\n            </PodcastsList>\n          </Playlist>\n        </header>\n      </div>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if(action !== 'POP') {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if(date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if(this.history.location.pathname !== newPath) {\n      if(!replace) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if(completed && currentUUID === '') {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if(waitingUpdate === true && waitingUpdateNext === false) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if(date !== this.state.date) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if(date !== null) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n    // If there is not already an incomplete update\n    if(this.state.completed) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter(podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if(found.length > 0) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach((podcast, index) => {\n      if(podcast.uuid === uuid) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if(podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes()) {\n      date.setHours(Number(podcast.hour));\n      date.setMinutes(Number(podcast.minute));\n    }\n\n    replace = currentUUID === '';\n    document.title = `${this.initialTitle}: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if(current > 0) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if(current < (this.state.podcasts.length - 1) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if(retry) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if(!this.state.waitingUpdate) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nclass App extends Component {\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n\n    return (\n      <Router>\n        <GAListener>\n          <Switch>\n            <Route\n              path=\"/:year/:month/:day/:hour/:minute\"\n              render={props => <Rac1Player { ...props } /> } />\n\n            {/* Set default date to today */}\n            <Redirect to={{ pathname: todayStr }} />\n          </Switch>\n        </GAListener>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}