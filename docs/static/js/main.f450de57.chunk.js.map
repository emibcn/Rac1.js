{"version":3,"sources":["rac1.js","App.js","serviceWorker.js","index.js"],"names":["handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","error","console","dataAttrsFind","dataAttrsClean","Rac1","props","Object","classCallCheck","this","noop","date","onListUpdate","onPodcastUpdate","_podcastsData","_pages_uuids","getPodcastsUUIDs","then","getPodcasts","bind","pageNumber","podcasts","_this","handleListUpdate","map","podcast","uuid","getPodcastData","handlePodcastUpdate","_this2","newList","pages","forEach","page","pageUuids","undefined","push","podcastPage","filter","length","podcastNew","_this3","index","_this4","arguments","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","toLocaleDateString","fetch","concat","credentials","text","catch","searchData","data","match","v","replace","split","includes","Number","_this5","Promise","resolve","json","audio","hour","time","App","possibleConstructorReturn","getPrototypeOf","call","state","current","Date","volume","controls","icon","action","playPrev","react_default","a","createElement","style","letterSpacing","paddingRight","player","currentTime","paused","play","pause","playNext","test","navigator","userAgent","keyHandlerFocus","_keyHandler","focus","rac1","setState","objectSpread","_this$state","autoplay","className","title","name","width","height","border","margin","padding","position","ref","element","onKeyUp","handleKey","onBlur","control","key","onClick","borderRadius","fontSize","fontWeight","Function","color","bundle_default","_player","src","path","autoPlay","preload","onEnded","backgroundColor","textAlign","listStyleType","marginLeft","paddingLeft","left","href","handleClickPodcast","textDecoration","log","toConsumableArray","playPodcast","audioEl","e","stopPropagation","preventDefault","increment","volumeNew","setVolume","shiftKey","incrementVolume","muted","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f450de57.chunk.js","sourcesContent":["// Raises exception on response error\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n// Catches the fetch error, original or 'self-raised'\nfunction catchFetchErrors(error) {\n  console.error(error);\n}\n\n// Cached/compiled regexps for parsing HTML\nconst dataAttrsFind  = /.*\"(audioteca-item|pagination-link)\" (data-[^=]*)=\"([^\"]*)\"[ \\t>]/g;\nconst dataAttrsClean = /^.*[ \\t](data-[^=]*)=\"([^\"]*)\"[ \\t>].*$/;\n\nclass Rac1 {\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n    this.onPodcastUpdate = props.onPodcastUpdate || noop;\n\n    // Cache for UUID => podcast\n    this._podcastsData = {};\n\n    // Cache for pageNumber => UUIDs\n    this._pages_uuids = [];\n\n    // Download podcasts UUIDs and then, each podcast data\n    this.getPodcastsUUIDs()\n      .then(this.getPodcasts.bind(this, 0));\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    // Trigger event for list updated\n    this.handleListUpdate();\n\n    return podcasts\n      .map(podcast => {\n        if(podcast.uuid !== '...') {\n          this.getPodcastData(podcast.uuid)\n            // Trigger event for each podcast when updated\n            .then(this.handlePodcastUpdate.bind(this, pageNumber))\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [];\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      if(pageUuids === undefined) {\n        // Set temporal UUID for unresolved pages\n        newList.push({uuid: '...'});\n      }\n      else {\n        // Add this page's podcasts to the list\n        pageUuids.forEach( podcastPage => {\n          // Only add podcast not already added to the list\n          const found = newList.filter( podcast => podcast.uuid === podcastPage.uuid );\n          if(found.length === 0) {\n            newList.push( podcastPage );\n          }\n        });\n      }\n    });\n\n    this.onListUpdate(newList);\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach((podcast,index) => {\n      if(podcast.uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n    this.onPodcastUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n          this.pages = pages.reverse();\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          for(let page in this.pages) {\n\n            // Don't call again first page\n            if(this.pages[page] !== 0) {\n              this.getPodcastsUUIDs(this.pages[page])\n                .then(this.getPodcasts.bind(this, this.pages[page]));\n            }\n          }\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => {return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber) {\n    const date = this.date.toLocaleDateString(\"es-ES\");\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://www.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${date}&pageNumber=${pageNumber}&btn-search=`,\n      {\n        //mode: 'no-cors',\n        credentials: 'omit',\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n      .catch(catchFetchErrors)\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .match(dataAttrsFind)\n      .map(v => v.replace(dataAttrsClean, '$1=$2').split('='))\n      .filter(v => searchData.includes(v[0]));\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if(uuid in this._podcastsData) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( (resolve) => resolve(this._podcastsData) );\n    }\n\n    return fetch(`https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`)\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n        // Add some data to the podcast\n        podcast.uuid = uuid;\n        podcast.audio.hour = podcast.audio.time.split(':')[0];\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n        return podcast;\n      })\n      .catch(catchFetchErrors)\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Rac1 from './rac1';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      podcasts: [\n      ],\n      current: 0,\n      date: new Date(), // Today\n      volume: 1,\n      controls: [],\n    };\n\n    this.controls = [\n      {\n        icon: '⏮',\n        text: 'Prev',\n        action: this.playPrev,\n      },\n      {\n        icon: <span style={{ letterSpacing: -10, paddingRight: 11 }}>⯇⯇⯇</span>,\n        text: '-10m',\n        action: () => this.player().currentTime -= 600,\n      },\n      {\n        icon: <span style={{ letterSpacing: -10, paddingRight: 11 }}>⯇⯇</span>,\n        text: '-60s',\n        action: () => this.player().currentTime -= 60,\n      },\n      {\n        icon: '⯇',\n        text: '-10s',\n        action: () => this.player().currentTime -= 10,\n      },\n      {\n        icon: '▮▶',\n        text: 'Play/Pause',\n        action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      },\n      {\n        icon: '⯈',\n        text: '+10s',\n        action: () => this.player().currentTime += 10,\n      },\n      {\n        icon: <span style={{ letterSpacing: -10, paddingRight: 11 }}>⯈⯈</span>,\n        text: '+60s',\n        action: () => this.player().currentTime += 60,\n      },\n      {\n        icon: <span style={{ letterSpacing: -10, paddingRight: 11 }}>⯈⯈⯈</span>,\n        text: '+10m',\n        action: () => this.player().currentTime += 600,\n      },\n      {\n        icon: '⏭',\n        text: 'Next',\n        action: this.playNext,\n      },\n    ];\n\n    // Disable key handler on mobile devices\n    if (/Mobi|Android/i.test(navigator.userAgent)) {\n      this.keyHandlerFocus = () => {};\n    }\n    else {\n      this.keyHandlerFocus = () => this._keyHandler.focus();\n    }\n  }\n\n  componentDidMount() {\n    this.keyHandlerFocus();\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n      onPodcastUpdate: this.handlePodcastUpdate.bind(this),\n    });\n    this.setState({\n      ...this.state,\n      controls: this.controls,\n    });\n  }\n\n  render() {\n    const { podcasts, current, volume } = this.state;\n    const autoplay = current > 0;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          { podcasts !== undefined && podcasts.length > 0 ?\n              (\n                <h3>{ 'audio' in podcasts[current] ?\n                    podcasts[current].audio.title :\n                    podcasts[current].uuid\n                }</h3>\n              ) : null\n          }\n          <input\n            name=\"player-key-handler\"\n            style={{\n              width: '0px',\n              height: '0px',\n              border: 0,\n              margin: 0,\n              padding: 0,\n              position: 'absolute'\n            }}\n            ref={(element) => { this._keyHandler = element; }}\n            onKeyUp={ this.handleKey.bind(this) }\n            onBlur={ this.keyHandlerFocus.bind(this) }\n          />\n          <div>\n            { this.state.controls.map((control, index) => {\n              return (\n                <button\n                  key={ index }\n                  onClick={ control.action.bind(this) }\n                  style={{\n                    borderRadius: \"1em\",\n                    padding: \"1em\",\n                    margin: \"1em\",\n                  }}\n                >\n                  <div style={{ fontSize: 30, fontWeight: 'bold', width: '2em' }}>\n                    { control.icon instanceof Function ? control.icon() : control.icon }\n                  </div>\n                  <span style={{ fontSize: 9, color: '#777' }}>\n                    { control.text instanceof Function ? control.text() : control.text }\n                  </span>\n                </button>\n              )\n            })}\n          </div>\n          <ReactAudioPlayer\n            ref={(element) => { this._player = element; }}\n            style={{ width: '100%' }}\n            src={ podcasts !== undefined && podcasts.length > current && 'path' in podcasts[current] ? podcasts[current].path : '' }\n            autoPlay={ autoplay }\n            controls\n            preload={ (autoplay ? \"auto\" : \"metadata\") }\n            onEnded={ this.playNext.bind(this) }\n            volume={ volume }\n          />\n          <div\n            style={{\n              color: \"#777\",\n              backgroundColor: \"white\",\n              padding: \"2em\",\n              borderRadius: \"1em\",\n              margin: \"1em\",\n              textAlign: \"left\",\n            }}>\n            { podcasts !== undefined && podcasts.length > 0 ?\n              (\n                <ul style={{ listStyleType: \"none\", marginLeft: 0, paddingLeft: 0 }}>\n                  { podcasts.map((podcast, index) =>\n                    <li key={ podcast.uuid } style={{ position: \"relative\", marginLeft: \"1em\" }}>\n                      { index !== current ? null :\n                        <span style={{ position: \"absolute\", left: \"-1em\" }}>⯈</span>\n                      }\n                      { !('path' in podcast) ?\n                          (\n                            <span>{ podcast.uuid }</span>\n                          ) :\n                          (\n                            <a\n                              href={ podcast.path }\n                              onClick={ this.handleClickPodcast.bind(this, index) }\n                              style={{ textDecoration: \"none\" }}\n                            >\n                              { podcast.audio.hour }h: { podcast.audio.title }\n                            </a>\n                          )\n                      }\n                    </li>\n                  )}\n                </ul>\n              ) : null\n            }\n          </div>\n        </header>\n      </div>\n    );\n  }\n\n  handleListUpdate(newList) {\n    console.log({newList});\n    this.setState({\n      ...this.state,\n      podcasts: newList\n    });\n  }\n\n  handlePodcastUpdate(podcastNew) {\n    let newList = this.state.podcasts;\n\n    console.log({podcastNew});\n\n    for(let index in this.state.podcasts) {\n      const podcast = this.state.podcasts[index];\n      if(podcastNew.uuid === podcast.uuid) {\n        newList = [ ...newList ];\n        newList[index] = podcastNew;\n      }\n    }\n    this.setState({\n      ...this.state,\n      podcasts: newList\n    });\n  }\n\n  playPodcast(index) {\n    this.setState({\n      ...this.state,\n      current: index,\n    });\n  }\n\n  playPrev() {\n    if(this.state.current > 0) {\n      this.playPodcast(this.state.current - 1);\n    }\n  }\n\n  playNext() {\n    if(this.state.current < (this.state.podcasts.length - 1)) {\n      this.playPodcast(this.state.current + 1);\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handleClickPodcast(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.setState({\n      ...this.state,\n      volume: volume,\n    });\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.state;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = true;\n    switch(e.key) {\n      case 'Enter':\n        this.playNext();\n        break;\n      case ' ':\n      case 'p':\n      case 'P':\n        this.player().paused ? this.player().play() : this.player().pause();\n        break;\n      case 'ArrowLeft':\n        this.player().currentTime -= 10;\n        break;\n      case 'ArrowRight':\n        this.player().currentTime += 10;\n        break;\n      case 'ArrowUp':\n        if(e.shiftKey) {\n          this.incrementVolume(.05);\n        }\n        else {\n          this.player().currentTime -= 60;\n        }\n        break;\n      case 'ArrowDown':\n        if(e.shiftKey) {\n          this.incrementVolume(-.05);\n        }\n        else {\n          this.player().currentTime += 60;\n        }\n        break;\n      case 'PageUp':\n        this.player().currentTime -= 600;\n        break;\n      case 'PageDown':\n        this.player().currentTime += 600;\n        break;\n      case '*':\n        this.incrementVolume(.05);\n        break;\n      case '/':\n        this.incrementVolume(-.05);\n        break;\n      case 'm':\n      case 'M':\n        this.player().muted = !this.player().muted;\n        break;\n      default:\n        stopPropagation = false;\n        break;\n    }\n\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}