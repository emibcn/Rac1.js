{"version":3,"sources":["App.js","Controls.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","serviceWorker.js","index.js"],"names":["Rac1Player","props","history","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","console","log","process","date","match","params","state","podcasts","uuid","currentUUID","Date","year","month","day","hour","minute","volume","completed","waitingUpdate","rac1","Rac1","onListUpdate","handleListUpdate","bind","_this2","_this$state","dateText","concat","getDate","getMonth","getFullYear","current","findCurrentPodcast","autoplay","currentPath","undefined","length","path","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","appTabletTitle","_Controls__WEBPACK_IMPORTED_MODULE_13__","getPlayer","player","allowFocus","el","onPlayNext","playNext","onPlayPrev","playPrev","onSetVolume","v","setState","_home_node_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","onPodcastsLastRemove","handlePodcastsLastRemove","ref","keyHandlerFocus","react_audio_player__WEBPACK_IMPORTED_MODULE_12___default","element","_player","style","width","src","autoPlay","controls","preload","onEnded","_Playlist__WEBPACK_IMPORTED_MODULE_14__","completedDownload","onClickReload","handleClickReload","onDateBlur","onDateChange","handleDateChange","_PodcastsList__WEBPACK_IMPORTED_MODULE_15__","map","podcast","index","_Podcast__WEBPACK_IMPORTED_MODULE_16__","assign","key","onClick","handlePodcastClick","push","getHours","getMinutes","newList","_this$state2","waitingUpdateNext","selectPodcastByDate","_this3","historyPush","setTimeout","setDate","_home_node_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","slice","updateList","found","filter","audio","playPodcast","findPodcastByUUID","forEach","setHours","Number","setMinutes","retry","arguments","audioEl","e","stopPropagation","preventDefault","Component","App","todayStr","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","render","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","pathname","Controls","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","icon","react__WEBPACK_IMPORTED_MODULE_6___default","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__","faFastForward","flip","text","action","faForward","currentTime","position","left","faEject","rotation","paused","play","pause","_home_node_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","test","navigator","userAgent","doFocus","relatedTarget","_keyHandler","focus","onFocus","control","borderRadius","padding","margin","fontSize","fontWeight","minWidth","Function","color","name","height","border","onKeyUp","handleKey","onBlur","increment","volumeNew","setVolume","shiftKey","incrementVolume","muted","defaultProps","Playlist","_this$props","children","react__WEBPACK_IMPORTED_MODULE_5___default","backgroundColor","textAlign","disabled","top","right","marginBottom","faRefresh","react_date_picker__WEBPACK_IMPORTED_MODULE_6___default","onChange","handleDateBlur","minDate","maxDate","required","value","clearIcon","calendarIcon","faCalendar","PodcastsList","listStyleType","marginLeft","paddingLeft","child","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__","faPlay","Podcast","handleClick","href","textDecoration","handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","error","dataAttrsFind","dataAttrsClean","_podcastsData","_pages_uuids","_previous_uuids","pageNumber","pages","getPodcastsUUIDs","then","getPodcasts","getPodcastData","handlePodcastUpdate","w","page","pageUuids","podcastPage","allCompleted","every","podcastNew","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","num","fetch","credentials","catch","searchData","data","split","line","replace","includes","_this5","Promise","resolve","json","time","Boolean","window","location","hostname","ReactDOM","react_default","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6551e264.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\nimport './App.css';\n\nclass Rac1Player extends Component {\n  constructor(props, history) {\n    super();\n\n    console.log(process);\n    this.history = props.history;\n\n    // Initial state\n    const date = props.match.params;\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour,\n        date.minute,\n      ),\n      volume: 1,\n      completed: false,\n      waitingUpdate: false,\n    };\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = (props) => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      }\n    }\n  }\n\n  componentWillMount() {\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  render() {\n    const { podcasts, volume, completed, date } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>\n          { podcasts !== undefined && podcasts.length > 0 ?\n                ( 'audio' in podcasts[current] ?\n                    `${podcasts[current].appTabletTitle}` :\n                    dateText )\n              : dateText\n          }\n          </h3>\n          <Controls\n            getPlayer={ this.player.bind(this) }\n            volume={ volume }\n            allowFocus={ (el) => el.className.match(/date-?picker/) }\n            onPlayNext={ this.playNext.bind(this) }\n            onPlayPrev={ this.playPrev.bind(this) }\n            onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n            onPodcastsLastRemove={ this.handlePodcastsLastRemove.bind(this) }\n            ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          />\n          <ReactAudioPlayer\n            ref={(element) => { this._player = element; }}\n            style={{ width: '100%' }}\n            src={ currentPath }\n            autoPlay={ autoplay }\n            controls\n            preload={ (autoplay ? \"auto\" : \"metadata\") }\n            onEnded={ this.playNext.bind(this) }\n            volume={ volume }\n          />\n          <Playlist\n            date={ date }\n            completedDownload={ completed }\n            onClickReload={ this.handleClickReload.bind(this) }\n            onDateBlur={ () => this.keyHandlerFocus() }\n            onDateChange={ this.handleDateChange.bind(this) }\n          >\n            <PodcastsList\n              current={ current }\n            >\n            { podcasts.map((podcast, index) =>\n              <Podcast\n                key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n                { ...podcast }\n                onClick={ this.handlePodcastClick.bind(this, index) }\n              />\n            )}\n            </PodcastsList>\n          </Playlist>\n        </header>\n      </div>\n    );\n  }\n\n  historyPush(date) {\n    if(date === undefined) {\n      date = this.state.date;\n    }\n    this.history.push(`/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`);\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n    });\n\n    if(completed && currentUUID === '') {\n      this.selectPodcastByDate();\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if(waitingUpdate === true && waitingUpdateNext === false) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if(date !== this.state.date) {\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n      if(date !== null) {\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  handleClickReload() {\n    // If there is not already an incomplete update\n    if(this.state.completed) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  selectPodcastByDate() {\n    const { date } = this.state;\n    const found = this.state.podcasts.filter(podcast => {\n      return podcast.audio.hour >= date.getHours() &&\n        podcast.audio.minute >= date.getMinutes()\n      });\n    if(found.length > 0) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach((podcast, index) => {\n      if(podcast.uuid === uuid) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date } = this.state;\n    date.setHours(Number(this.state.podcasts[index].audio.hour));\n    date.setMinutes(Number(this.state.podcasts[index].audio.minute));\n    this.setState({\n      ...this.state,\n      currentUUID: this.state.podcasts[index].uuid,\n      date,\n    });\n    this.historyPush();\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if(current > 0) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if(current < (this.state.podcasts.length - 1) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if(retry) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if(!this.state.waitingUpdate) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nclass App extends Component {\n  render() {\n    const date = new Date();\n\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/:year/:month/:day/:hour/:minute\"\n            render={props => <Rac1Player { ...props } /> } />\n          <Redirect to={{ pathname: todayStr }} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faEject,\n  faForward,\n  faFastForward,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Controls extends Component {\n  constructor(props) {\n    super();\n\n    // Initial state\n    this.state = {\n      controls: [],\n    };\n\n    // Controls definitions\n    this.controls = [\n      {\n        icon: <FontAwesomeIcon icon={faFastForward} flip=\"horizontal\" />,\n        text: 'Prev',\n        action: () => this.props.onPlayPrev(),\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n            <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n          </span>\n        ),\n        text: '-10m',\n        action: () => this.player().currentTime -= 600,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon\n              icon={faForward}\n              flip=\"horizontal\"\n              style={{ position: 'relative', left: '.25em' }} />\n            <FontAwesomeIcon\n              icon={faForward}\n              flip=\"horizontal\"\n              style={{ position: 'relative', left: '-.25em' }} />\n          </span>\n        ),\n        text: '-60s',\n        action: () => this.player().currentTime -= 60,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />,\n        text: '-10s',\n        action: () => this.player().currentTime -= 10,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faEject} rotation={90} />,\n        text: 'Play/Pause',\n        action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      },\n      {\n        icon: <FontAwesomeIcon icon={faForward} />,\n        text: '+10s',\n        action: () => this.player().currentTime += 10,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon\n              icon={faForward}\n              style={{ position: 'relative', left: '.25em' }} />\n            <FontAwesomeIcon\n              icon={faForward}\n              style={{ position: 'relative', left: '-.25em' }} />\n          </span>\n        ),\n        text: '+60s',\n        action: () => this.player().currentTime += 60,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon icon={faForward} />\n            <FontAwesomeIcon icon={faForward} />\n          </span>\n        ),\n        text: '+10m',\n        action: () => this.player().currentTime += 600,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faFastForward} />,\n        text: 'Next',\n        action: () => this.props.onPlayNext(),\n      },\n    ];\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n      // Add a button to remove the last podcast in the list\n      this.controls.push({\n          icon: 'RL',\n          text: 'Remove last',\n          action: () => this.props.onPodcastsLastRemove(),\n        });\n    }\n  }\n\n  keyHandlerFocus = () => {};\n\n  componentDidMount() {\n    this.keyHandlerFocus();\n    this.setState({\n      ...this.state,\n      controls: this.controls,\n    });\n\n    // Disable key handler on mobile devices\n    if (!(/Mobi|Android/i.test(navigator.userAgent))) {\n      this.keyHandlerFocus = (e) => {\n        let doFocus = true;\n\n        // Allow datepicker to get focus\n        if(e && e.relatedTarget &&\n          this.props.allowFocus(e.relatedTarget)) {\n          doFocus = false;\n        }\n\n        if(doFocus) {\n          setTimeout(() => this._keyHandler.focus(), 100);\n        }\n      };\n    }\n  }\n\n  player = () => this.props.getPlayer();\n\n  render() {\n    const { controls } = this.state;\n\n    return (\n      <div onFocus={ (e) => this.keyHandlerFocus(e) } >\n        { controls.map((control, index) => {\n          return (\n            <button\n              key={ index }\n              onClick={ control.action.bind(this) }\n              style={{\n                borderRadius: \"1em\",\n                padding: \"1em\",\n                margin: \"1em\",\n              }}\n            >\n              <div style={{\n                fontSize: 'calc(1em + 2.5vmin)',\n                fontWeight: 'bold',\n                minWidth: '1.5em',\n              }} >\n                { control.icon instanceof Function ? control.icon() : control.icon }\n              </div>\n              <span style={{ fontSize: 'calc(8px + 1vmin)', color: '#777' }}>\n                { control.text instanceof Function ? control.text() : control.text }\n              </span>\n            </button>\n          )\n        })}\n        <input\n          name=\"player-key-handler\"\n          style={{\n            width: '0px',\n            height: '0px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            position: 'absolute'\n          }}\n          ref={(element) => { this._keyHandler = element; }}\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n        />\n      </div>\n    );\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.state;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = true;\n    switch(e.key) {\n      case 'Enter':\n        this.props.onPlayNext();\n        break;\n      case ' ':\n      case 'p':\n      case 'P':\n        this.player().paused ? this.player().play() : this.player().pause();\n        break;\n      case 'ArrowLeft':\n        this.player().currentTime -= 10;\n        break;\n      case 'ArrowRight':\n        this.player().currentTime += 10;\n        break;\n      case 'ArrowUp':\n        if(e.shiftKey) {\n          this.incrementVolume(.05);\n        }\n        else {\n          this.player().currentTime -= 60;\n        }\n        break;\n      case 'ArrowDown':\n        if(e.shiftKey) {\n          this.incrementVolume(-.05);\n        }\n        else {\n          this.player().currentTime += 60;\n        }\n        break;\n      case 'PageUp':\n        this.player().currentTime -= 600;\n        break;\n      case 'PageDown':\n        this.player().currentTime += 600;\n        break;\n      case '*':\n        this.incrementVolume(.05);\n        break;\n      case '/':\n        this.incrementVolume(-.05);\n        break;\n      case 'm':\n      case 'M':\n        this.player().muted = !this.player().muted;\n        break;\n      case 'r':\n      case 'R':\n        this.handleClickReload();\n        break;\n      default:\n        stopPropagation = false;\n        break;\n    }\n\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:          (e) => {},\n  onPodcastsLastRemove: (e) => {},\n  onPlayPrev:           (e) => {},\n  onPlayNext:           (e) => {},\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPodcastsLastRemove: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Playlist extends Component {\n  render() {\n    const { completedDownload, date, children } = this.props;\n\n    return (\n      <div\n        style={{\n          color: \"#777\",\n          backgroundColor: \"white\",\n          padding: \"2em\",\n          borderRadius: \"1em\",\n          margin: \"1em\",\n          textAlign: \"left\",\n          position: \"relative\",\n        }}>\n        <button\n          onClick={ this.props.onClickReload.bind(this) }\n          disabled={ !completedDownload }\n          style={{\n            borderRadius: \".5em\",\n            padding: \".25em\",\n            margin: \"1.5em\",\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n          }}\n        >\n          <div style={{\n            fontSize: 'calc(.5em + 2vmin)',\n            fontWeight: 'bold',\n            marginBottom: '-.25em'\n          }}>\n            <FontAwesomeIcon icon={faRefresh} />\n          </div>\n          <span style={{\n            fontSize: 'calc(5px + 1vmin)',\n            color: '#777'\n          }}>\n            Reload\n          </span>\n        </button>\n        <div style={{ textAlign: 'center', fontSize: 'large' }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n            maxDate={ new Date() }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(2);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if(e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/)) {\n      focus = false;\n    }\n\n    if(focus) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends Component {\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: \"none\",\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left'\n        }}>\n          { children.map((child, index) =>\n            <li\n              key={ child.key }\n              style={{ position: \"relative\", marginLeft: \"1em\" }}>\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={faPlay}\n                  style={{\n                    position: 'absolute',\n                    left: '-1.25em',\n                    top: 'calc(.2vmin + .2em)',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends Component {\n  render() {\n    const { path, uuid, audio, appTabletTitle} = this.props;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { audio.hour }h: { appTabletTitle }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  appTabletTitle: PropTypes.string,\n  audio: PropTypes.shape(),\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","// Raises exception on response error\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n// Catches the fetch error, original or 'self-raised'\nfunction catchFetchErrors(error) {\n  console.error(error);\n}\n\n// Cached/compiled regexps for parsing HTML\nconst dataAttrsFind   = / class=\"(audioteca-item|pagination-link)\" /;\nconst dataAttrsClean  = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\nclass Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n\n    this.updateList();\n  }\n\n  setDate(date) {\n    if(this.date !== date) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if(pageNumber === 0) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n      // Download podcast data if needed\n      .then(this.getPodcasts.bind(this, pageNumber))\n      // Trigger event for list updated\n      .then(this.handleListUpdate.bind(this, pageNumber));\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map(podcast => {\n        // If it's a podcast and is not in the cache\n        if(podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData)) {\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [...this._previous_uuids.filter(w => w.uuid !== '...')];\n    let completed = true;\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if(pageUuids === undefined) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n        // Add this page's podcasts to the list\n        pageUuids\n          // filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map(podcast => this._podcastsData[podcast.uuid] || podcast );\n\n    // Save complete list on finish\n    if(completed) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every(podcast => 'path' in podcast);\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach((podcast,index) => {\n      if(podcast.uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => { return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      //+ \"https://www.rac1.cat/a-la-carta/cerca?\"\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${date}&pageNumber=${pageNumber}`,\n      {\n        //mode: 'no-cors',\n        credentials: 'omit',\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n      .catch(catchFetchErrors)\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter(line => dataAttrsFind.test(line))\n      .map(v => v.replace(dataAttrsClean, '$1=$2'))\n      .map(line => line.split('='))\n      .filter(v => searchData.includes(v[0]));\n\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if(uuid in this._podcastsData) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(`https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`)\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n        // Add some data to the podcast\n        podcast.uuid = uuid;\n        podcast.audio.hour   = podcast.audio.time.split(':')[0];\n        podcast.audio.minute = podcast.audio.time.split(':')[1];\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n      .catch(catchFetchErrors)\n  }\n\n}\n\nexport default Rac1;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}