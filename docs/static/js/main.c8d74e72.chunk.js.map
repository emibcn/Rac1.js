{"version":3,"sources":["Controls.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","App.js","serviceWorker.js","index.js"],"names":["Controls","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","keyHandlerFocus","player","getPlayer","state","controls","icon","react_default","a","createElement","index_es","faFastForward","flip","text","action","onPlayPrev","faForward","currentTime","style","position","left","faEject","rotation","paused","play","pause","onPlayNext","_this2","setState","objectSpread","test","navigator","userAgent","e","doFocus","relatedTarget","allowFocus","setTimeout","_keyHandler","focus","_this3","onFocus","map","control","index","key","onClick","bind","borderRadius","padding","margin","fontSize","fontWeight","minWidth","Function","color","name","width","height","border","ref","element","onKeyUp","handleKey","onBlur","volume","onSetVolume","increment","volumeNew","setVolume","stopPropagation","shiftKey","incrementVolume","muted","handleClickReload","preventDefault","Component","defaultProps","onPodcastsLastRemove","Playlist","_this$props","completedDownload","date","children","backgroundColor","textAlign","onClickReload","disabled","top","right","marginBottom","faRefresh","entry_default","onChange","handleDateChange","handleDateBlur","minDate","Date","maxDate","required","value","clearIcon","calendarIcon","faCalendar","setHours","setMinutes","onDateChange","className","match","onDateBlur","PodcastsList","current","undefined","length","listStyleType","marginLeft","paddingLeft","child","faPlay","Podcast","handleClick","path","uuid","audio","appTabletTitle","href","textDecoration","hour","handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","error","console","dataAttrsFind","dataAttrsClean","Rac1","_podcastsData","_pages_uuids","_previous_uuids","onListUpdate","updateList","pageNumber","arguments","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","toConsumableArray","filter","w","completed","forEach","page","pageUuids","push","podcastPage","allCompleted","every","podcastNew","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","num","getDate","getMonth","getFullYear","fetch","concat","credentials","catch","searchData","data","split","line","v","replace","includes","Number","_this5","Promise","resolve","json","time","minute","Rac1Player","history","params","currentUUID","year","month","day","waitingUpdate","rac1","_this$state","dateText","findCurrentPodcast","autoplay","currentPath","src_Controls","el","playNext","playPrev","handlePodcastsLastRemove","bundle_default","_player","src","autoPlay","preload","onEnded","src_Playlist","src_PodcastsList","src_Podcast","assign","handlePodcastClick","getHours","getMinutes","_this$state2","waitingUpdateNext","selectPodcastByDate","historyPush","setDate","slice","found","playPodcast","findPodcastByUUID","retry","audioEl","App","todayStr","HashRouter","Switch","Route","render","App_Rac1Player","Redirect","to","pathname","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"gVAUMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QAiGFI,gBAAkB,aAlGCP,EA6HnBQ,OAAS,kBAAMR,EAAKD,MAAMU,aAzHxBT,EAAKU,MAAQ,CACXC,SAAU,IAIZX,EAAKW,SAAW,CACd,CACEC,KAAMC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMK,IAAeC,KAAK,eACjDC,KAAM,OACNC,OAAQ,kBAAMpB,EAAKD,MAAMsB,eAE3B,CACET,KACEC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMU,IAAWJ,KAAK,eACvCL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMU,IAAWJ,KAAK,gBAG3CC,KAAM,OACNC,OAAQ,kBAAMpB,EAAKQ,SAASe,aAAe,MAE7C,CACEX,KACEC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,KAAMU,IACNJ,KAAK,aACLM,MAAO,CAAEC,SAAU,WAAYC,KAAM,WACvCb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,KAAMU,IACNJ,KAAK,aACLM,MAAO,CAAEC,SAAU,WAAYC,KAAM,aAG3CP,KAAM,OACNC,OAAQ,kBAAMpB,EAAKQ,SAASe,aAAe,KAE7C,CACEX,KAAMC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMU,IAAWJ,KAAK,eAC7CC,KAAM,OACNC,OAAQ,kBAAMpB,EAAKQ,SAASe,aAAe,KAE7C,CACEX,KAAMC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMe,IAASC,SAAU,KAChDT,KAAM,aACNC,OAAQ,kBAAMpB,EAAKQ,SAASqB,OAAS7B,EAAKQ,SAASsB,OAAS9B,EAAKQ,SAASuB,UAE5E,CACEnB,KAAMC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMU,MAC7BH,KAAM,OACNC,OAAQ,kBAAMpB,EAAKQ,SAASe,aAAe,KAE7C,CACEX,KACEC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,KAAMU,IACNE,MAAO,CAAEC,SAAU,WAAYC,KAAM,WACvCb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,KAAMU,IACNE,MAAO,CAAEC,SAAU,WAAYC,KAAM,aAG3CP,KAAM,OACNC,OAAQ,kBAAMpB,EAAKQ,SAASe,aAAe,KAE7C,CACEX,KACEC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMU,MACvBT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMU,OAG3BH,KAAM,OACNC,OAAQ,kBAAMpB,EAAKQ,SAASe,aAAe,MAE7C,CACEX,KAAMC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMK,MAC7BE,KAAM,OACNC,OAAQ,kBAAMpB,EAAKD,MAAMiC,gBAnFZhC,mFAoGC,IAAAiC,EAAA9B,KAClBA,KAAKI,kBACLJ,KAAK+B,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GACKE,KAAKO,MADV,CAEEC,SAAUR,KAAKQ,YAIX,gBAAgByB,KAAKC,UAAUC,aACnCnC,KAAKI,gBAAkB,SAACgC,GACtB,IAAIC,GAAU,EAGXD,GAAKA,EAAEE,eACRR,EAAKlC,MAAM2C,WAAWH,EAAEE,iBACxBD,GAAU,GAGTA,GACDG,WAAW,kBAAMV,EAAKW,YAAYC,SAAS,wCAQ1C,IAAAC,EAAA3C,KACCQ,EAAaR,KAAKO,MAAlBC,SAER,OACEE,EAAAC,EAAAC,cAAA,OAAKgC,QAAU,SAACR,GAAD,OAAOO,EAAKvC,gBAAgBgC,KACvC5B,EAASqC,IAAI,SAACC,EAASC,GACvB,OACErC,EAAAC,EAAAC,cAAA,UACEoC,IAAMD,EACNE,QAAUH,EAAQ7B,OAAOiC,KAAKP,GAC9BtB,MAAO,CACL8B,aAAc,MACdC,QAAS,MACTC,OAAQ,QAGV3C,EAAAC,EAAAC,cAAA,OAAKS,MAAO,CACViC,SAAU,sBACVC,WAAY,OACZC,SAAU,UAERV,EAAQrC,gBAAgBgD,SAAWX,EAAQrC,OAASqC,EAAQrC,MAEhEC,EAAAC,EAAAC,cAAA,QAAMS,MAAO,CAAEiC,SAAU,oBAAqBI,MAAO,SACjDZ,EAAQ9B,gBAAgByC,SAAWX,EAAQ9B,OAAS8B,EAAQ9B,SAKtEN,EAAAC,EAAAC,cAAA,SACE+C,KAAK,qBACLtC,MAAO,CACLuC,MAAO,MACPC,OAAQ,MACRC,OAAQ,EACRT,OAAQ,EACRD,QAAS,EACT9B,SAAU,YAEZyC,IAAK,SAACC,GAAcrB,EAAKF,YAAcuB,GACvCC,QAAUjE,KAAKkE,UAAUhB,KAAKlD,MAC9BmE,OAASnE,KAAKI,gBAAgB8C,KAAKlD,2CAMjCoE,GACRpE,KAAKK,SAAS+D,OAASA,EACvBpE,KAAKJ,MAAMyE,YAAYD,2CAGTE,GAAW,IACjBF,EAAWpE,KAAKO,MAAhB6D,OACJG,EAAYH,EAGbE,EAAY,GAAKF,EAAS,IAC3BG,EAAYH,GAAW,EAAIE,EAAaF,EAASE,EAAY,GAI5DA,EAAY,GAAKF,EAAS,IAC3BG,EAAYH,IAAYE,EAAaF,EAASE,EAAY,GAGzDC,IAAcH,GACfpE,KAAKwE,UAAUD,qCAITnC,GACR,IAAIqC,GAAkB,EACtB,OAAOrC,EAAEY,KACP,IAAK,QACHhD,KAAKJ,MAAMiC,aACX,MACF,IAAK,IACL,IAAK,IACL,IAAK,IACH7B,KAAKK,SAASqB,OAAS1B,KAAKK,SAASsB,OAAS3B,KAAKK,SAASuB,QAC5D,MACF,IAAK,YACH5B,KAAKK,SAASe,aAAe,GAC7B,MACF,IAAK,aACHpB,KAAKK,SAASe,aAAe,GAC7B,MACF,IAAK,UACAgB,EAAEsC,SACH1E,KAAK2E,gBAAgB,KAGrB3E,KAAKK,SAASe,aAAe,GAE/B,MACF,IAAK,YACAgB,EAAEsC,SACH1E,KAAK2E,iBAAiB,KAGtB3E,KAAKK,SAASe,aAAe,GAE/B,MACF,IAAK,SACHpB,KAAKK,SAASe,aAAe,IAC7B,MACF,IAAK,WACHpB,KAAKK,SAASe,aAAe,IAC7B,MACF,IAAK,IACHpB,KAAK2E,gBAAgB,KACrB,MACF,IAAK,IACH3E,KAAK2E,iBAAiB,KACtB,MACF,IAAK,IACL,IAAK,IACH3E,KAAKK,SAASuE,OAAS5E,KAAKK,SAASuE,MACrC,MACF,IAAK,IACL,IAAK,IACH5E,KAAK6E,oBACL,MACF,QACEJ,GAAkB,EAInBA,IACDrC,EAAEqC,kBACFrC,EAAE0C,yBAnQeC,aAwQvBpF,EAASqF,aAAe,CACtBX,YAAsB,SAACjC,KACvB6C,qBAAsB,SAAC7C,KACvBlB,WAAsB,SAACkB,KACvBP,WAAsB,SAACO,MAaVzC,yBCxRTuF,mLACK,IAAAC,EACuCnF,KAAKJ,MAA3CwF,EADDD,EACCC,kBAAmBC,EADpBF,EACoBE,KAAMC,EAD1BH,EAC0BG,SAEjC,OACE5E,EAAAC,EAAAC,cAAA,OACES,MAAO,CACLqC,MAAO,OACP6B,gBAAiB,QACjBnC,QAAS,MACTD,aAAc,MACdE,OAAQ,MACRmC,UAAW,OACXlE,SAAU,aAEZZ,EAAAC,EAAAC,cAAA,UACEqC,QAAUjD,KAAKJ,MAAM6F,cAAcvC,KAAKlD,MACxC0F,UAAYN,EACZ/D,MAAO,CACL8B,aAAc,OACdC,QAAS,QACTC,OAAQ,QACR/B,SAAU,WACVqE,IAAK,EACLC,MAAO,IAGTlF,EAAAC,EAAAC,cAAA,OAAKS,MAAO,CACViC,SAAU,qBACVC,WAAY,OACZsC,aAAc,WAEdnF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMqF,OAEzBpF,EAAAC,EAAAC,cAAA,QAAMS,MAAO,CACXiC,SAAU,oBACVI,MAAO,SAFT,WAOFhD,EAAAC,EAAAC,cAAA,OAAKS,MAAO,CAAEmE,UAAW,SAAUlC,SAAU,UAC3C5C,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,CACEqF,SAAWhG,KAAKiG,iBAAiB/C,KAAKlD,MACtCmE,OAASnE,KAAKkG,eAAehD,KAAKlD,MAClCmG,QAAU,IAAIC,KAAK,KAAM,EAAG,GAC5BC,QAAU,IAAID,KACdE,UAAW,EACXC,MAAQlB,EACRmB,UAAY,KACZC,aAAe/F,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBJ,KAAMiG,QAEtCpB,6CAMOD,GACfA,EAAKsB,SAAS,GACdtB,EAAKuB,WAAW,GAChB5G,KAAKJ,MAAMiH,aAAaxB,0CAGXjD,GACb,IAAIM,GAAQ,EACTN,GAAKA,EAAEE,eACRF,EAAEE,cAAcwE,UAAUC,MAAM,6BAChCrE,GAAQ,GAGPA,GACD1C,KAAKJ,MAAMoH,WAAW5E,UAxEL2C,aA8EvBG,EAASF,aAAe,CACtBS,cAAe,SAACrD,KAChB4E,WAAY,SAAC5E,KACbyE,aAAc,SAACzE,MAWF8C,QCjGT+B,mLACK,IAAA9B,EACuBnF,KAAKJ,MAA3B0F,EADDH,EACCG,SAAU4B,EADX/B,EACW+B,QAElB,YAAoBC,IAAb7B,GAA8C,IAApBA,EAAS8B,OACxC,KAEE1G,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CACTgG,cAAe,OACfC,WAAY,EACZC,YAAa,EACb/B,UAAW,SAETF,EAASzC,IAAI,SAAC2E,EAAOzE,GAAR,OACbrC,EAAAC,EAAAC,cAAA,MACEoC,IAAMwE,EAAMxE,IACZ3B,MAAO,CAAEC,SAAU,WAAYgG,WAAY,QACzCvE,IAAUmE,EACVxG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,KAAMgH,IACNpG,MAAO,CACLC,SAAU,WACVC,KAAM,UACNoE,IAAK,yBAEP,KAEF6B,aA3BWzC,aAmC3BkC,EAAajC,aAAe,GASbiC,QC/CTS,6MAwBJC,YAAc,SAACvF,GAAD,OAAOvC,EAAKD,MAAMqD,QAAQb,4EAvB/B,IAAA+C,EACsCnF,KAAKJ,MAA1CgI,EADDzC,EACCyC,KAAMC,EADP1C,EACO0C,KAAMC,EADb3C,EACa2C,MAAOC,EADpB5C,EACoB4C,eAE3B,OACErH,EAAAC,EAAAC,cAAA,YACKgH,EAKGlH,EAAAC,EAAAC,cAAA,KACEoH,KAAOJ,EACP3E,QAAUjD,KAAK2H,YAAYzE,KAAKlD,MAChCqB,MAAO,CAAE4G,eAAgB,SAEvBH,EAAMI,KALV,MAKqBH,GARrBrH,EAAAC,EAAAC,cAAA,YAAQiH,WARA9C,aA2BtB2C,EAAQ1C,aAAe,CACrB/B,QAAS,SAACb,MAYGsF,QC1Cf,SAASS,EAAkBC,GACzB,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,EAIT,SAASI,EAAiBC,GACxBC,QAAQD,MAAMA,GAIhB,IAAME,EAAkB,6CAClBC,EAAkB,8BAkOTC,aArNb,SAAAA,EAAYjJ,GAAQE,OAAAC,EAAA,EAAAD,CAAAE,KAAA6I,GAAA7I,KARpB8I,cAAgB,GAQG9I,KALnB+I,aAAe,GAKI/I,KAFnBgJ,gBAAkB,GAIhBhJ,KAAKqF,KAAOzF,EAAMyF,KAClBrF,KAAKiJ,aAAerJ,EAAMqJ,cAFb,aAIbjJ,KAAKkJ,iEAGC7D,GACHrF,KAAKqF,OAASA,IACfrF,KAAKgJ,gBAAkB,IAEzBhJ,KAAKqF,KAAOA,EACZrF,KAAKkJ,kDAIkB,IAAdC,EAAcC,UAAAhC,OAAA,QAAAD,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAQpB,OAPkB,IAAfD,IACDnJ,KAAK+I,aAAe,GACpB/I,KAAKqJ,MAAQ,CAAC,GACdrJ,KAAKsJ,oBAIAtJ,KAAKuJ,iBAAiBJ,GAE1BK,KAAKxJ,KAAKyJ,YAAYvG,KAAKlD,KAAMmJ,IAEjCK,KAAKxJ,KAAKsJ,iBAAiBpG,KAAKlD,KAAMmJ,wCAG/BA,EAAYO,GAAU,IAAA7J,EAAAG,KAChC,OAAO0J,EACJ7G,IAAI,SAAA8G,GAQH,MANoB,QAAjBA,EAAQ9B,MAAoB8B,EAAQ9B,QAAQhI,EAAKiJ,eAGlDjJ,EAAK+J,eAAeD,EAAQ9B,MACzB2B,KAAM3J,EAAKgK,oBAAoB3G,KAAKrD,EAAMsJ,IAExCQ,+CAOM,IAAA7H,EAAA9B,KACb8J,EAAOhK,OAAAiK,EAAA,EAAAjK,CAAOE,KAAKgJ,gBAAgBgB,OAAO,SAAAC,GAAC,MAAe,QAAXA,EAAEpC,QACjDqC,GAAY,EAGhBlK,KAAKqJ,MAAMc,QAAS,SAAAC,GAGlB,IAAIC,EAAYvI,EAAKiH,aAAcqB,QAGlBjD,IAAdkD,GACDP,EAAQQ,KAAK,CAACzC,KAAM,QACpBqC,GAAY,GAIZG,EAEGL,OAAQ,SAAAO,GAGP,OAAwB,IAFVT,EAAQE,OACpB,SAAAL,GAAO,OAAIA,EAAQ9B,OAAS0C,EAAY1C,OAC7BT,SAEd+C,QAAS,SAAAR,GAAO,OAAIG,EAAQQ,KAAMX,OAKzCG,EAAUA,EAAQjH,IAAI,SAAA8G,GAAO,OAAI7H,EAAKgH,cAAca,EAAQ9B,OAAS8B,IAGlEO,IACDlK,KAAKgJ,gBAAkBc,GAIzB,IAAMU,EAAeN,GAAaJ,EAAQW,MAAM,SAAAd,GAAO,MAAI,SAAUA,IAKrE,OAFA3J,KAAKiJ,aAAaa,EAASU,GAEpBV,8CAKWX,EAAYuB,GAAY,IAAA/H,EAAA3C,KAC1C0K,EAAWN,KAAOjB,EAClBnJ,KAAK+I,aAAaI,GAAYgB,QAAQ,SAACR,EAAQ5G,GAC1C4G,EAAQ9B,OAAS6C,EAAW7C,OAC7BlF,EAAKoG,aAAaI,GAAYpG,GAAS2H,KAK3C1K,KAAKsJ,iBAAiBoB,8CAKO,IAAAC,EAAA3K,KAAdmJ,EAAcC,UAAAhC,OAAA,QAAAD,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAC1B,OAAOpJ,KAAK4K,QAAQzB,GACjBK,KAAK,SAAAqB,GAAW,IAAAC,EAGcH,EAAKI,UAAUF,GAApCG,EAHOF,EAGPE,UAAW3B,EAHJyB,EAGIzB,MAmBnB,OAhBkB,IAAfF,IAKDwB,EAAKtB,MAAQA,EAAMjC,OAAS,EAAIiC,EAAM4B,UAAY,CAAC,GAInDN,EAAKtB,MAAMc,QAAS,SAAAC,GAAI,OAAc,IAATA,GAAeO,EAAKzB,WAAYkB,MAG/DO,EAAK5B,aAAaI,GAAc6B,EAC7BC,UACApI,IAAI,SAAAgF,GAAU,MAAO,CAACA,OAAMuC,KAAMjB,KAE9BwB,EAAK5B,aAAaI,uCAMT,IAAdA,EAAcC,UAAAhC,OAAA,QAAAD,IAAAiC,UAAA,GAAAA,UAAA,GAAH,EAEX8B,EAAO,SAAAC,GAAG,OAAMA,EAAM,GAAK,IAAM,IAAOA,GACxC9F,EACJ6F,EAAMlL,KAAKqF,KAAK+F,WAAc,IAC9BF,EAAM,EAAIlL,KAAKqF,KAAKgG,YAAe,IACnCrL,KAAKqF,KAAKiG,cAEZ,OAAOC,MACL,+HAAAC,OAG0CnG,EAH1C,QAAAmG,OAGqDnG,EAHrD,gBAAAmG,OAGwErC,GACxE,CAEEsC,YAAa,SAEdjC,KAAKrB,GACLqB,KAAK,SAAApB,GAAQ,OAAIA,EAASpH,SAC1B0K,MAAMlD,qCAKDqC,GACR,IAAMc,EAAa,CAAC,gBAAgB,8BAC9BC,EAAOf,EACVgB,MAAM,MACN7B,OAAO,SAAA8B,GAAI,OAAInD,EAAc1G,KAAK6J,KAClCjJ,IAAI,SAAAkJ,GAAC,OAAIA,EAAEC,QAAQpD,EAAgB,WACnC/F,IAAI,SAAAiJ,GAAI,OAAIA,EAAKD,MAAM,OACvB7B,OAAO,SAAA+B,GAAC,OAAIJ,EAAWM,SAASF,EAAE,MAErC,MAAO,CACLf,UAAWY,EACR5B,OAAO,SAAA+B,GAAC,MAAa,kBAATA,EAAE,KACdlJ,IAAI,SAAAkJ,GAAC,OAAIA,EAAE,KACd1C,MAAOuC,EACJ5B,OAAO,SAAA+B,GAAC,MAAa,+BAATA,EAAE,KACdlJ,IAAI,SAAAkJ,GAAC,OAAIG,OAAOH,EAAE,8CAMVlE,GAAM,IAAAsE,EAAAnM,KAGnB,OAAG6H,KAAQ7H,KAAK8I,cAGP,IAAIsD,QAAS,SAAAC,GAAO,OAAIA,EAAQF,EAAKrD,cAAcjB,MAGrD0D,MAAK,iDAAAC,OAAkD3D,IAC3D2B,KAAKrB,GACLqB,KAAK,SAAAoC,GAAI,OAAIA,EAAKU,SAClB9C,KAAK,SAAAG,GASJ,OAPAA,EAAQ9B,KAAOA,EACf8B,EAAQ7B,MAAMI,KAASyB,EAAQ7B,MAAMyE,KAAKV,MAAM,KAAK,GACrDlC,EAAQ7B,MAAM0E,OAAS7C,EAAQ7B,MAAMyE,KAAKV,MAAM,KAAK,GAGrDM,EAAKrD,cAAcjB,GAAQ8B,EAEpBA,IAER+B,MAAMlD,YC1NPiE,qBACJ,SAAAA,EAAY7M,EAAO8M,GAAS,IAAA7M,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyM,IAC1B5M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2M,GAAAtM,KAAAH,QAEK0M,QAAU9M,EAAM8M,QAGrB,IAAMrH,EAAOzF,EAAMmH,MAAM4F,OANC,OAO1B9M,EAAKU,MAAQ,CACXmJ,SAAU,CAAC,CAAC7B,KAAM,QAClB+E,YAAa,GACbvH,KAAM,IAAIe,KACRf,EAAKwH,KACLxH,EAAKyH,MAAM,EACXzH,EAAK0H,IACL1H,EAAK6C,KACL7C,EAAKmH,QAEPpI,OAAQ,EACR8F,WAAW,EACX8C,eAAe,GAnBSnN,oFAqC1BG,KAAKiN,KAAO,IAAIpE,EAAK,CACnBxD,KAAMrF,KAAKO,MAAM8E,KACjB4D,aAAcjJ,KAAKsJ,iBAAiBpG,KAAKlD,yCAIpC,IAAA8B,EAAA9B,KAAAkN,EACuClN,KAAKO,MAA3CmJ,EADDwD,EACCxD,SAAUtF,EADX8I,EACW9I,OAAQ8F,EADnBgD,EACmBhD,UAAW7E,EAD9B6H,EAC8B7H,KAC/B8H,EAAW9H,aAAgBe,KAAhB,GAAAoF,OACZnG,EAAK+F,UADO,KAAAI,OACM,EAAInG,EAAKgG,WADf,KAAAG,OAC6BnG,EAAKiG,eAC/C,MAGEpE,EAAUlH,KAAKoN,qBACfC,EAAWnG,EAAU,EACrBoG,OACSnG,IAAbuC,GACKA,EAAStC,OAASF,GAClB,SAAUwC,EAASxC,GACpBwC,EAASxC,GAASU,KAAO,GAE/B,OACElH,EAAAC,EAAAC,cAAA,OAAKkG,UAAU,OACbpG,EAAAC,EAAAC,cAAA,UAAQkG,UAAU,cAChBpG,EAAAC,EAAAC,cAAA,eACeuG,IAAbuC,GAA0BA,EAAStC,OAAS,GACtC,UAAWsC,EAASxC,GAApB,GAAAsE,OACK9B,EAASxC,GAASa,gBAEzBoF,GAGNzM,EAAAC,EAAAC,cAAC2M,EAAD,CACEjN,UAAYN,KAAKK,OAAO6C,KAAKlD,MAC7BoE,OAASA,EACT7B,WAAa,SAACiL,GAAD,OAAQA,EAAG1G,UAAUC,MAAM,iBACxClF,WAAa7B,KAAKyN,SAASvK,KAAKlD,MAChCkB,WAAalB,KAAK0N,SAASxK,KAAKlD,MAChCqE,YAAc,SAAC0H,GAAD,OAAOjK,EAAKC,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GAAmBgC,EAAKvB,MAAxB,CAA+B6D,OAAQ2H,MAC5D9G,qBAAuBjF,KAAK2N,yBAAyBzK,KAAKlD,MAC1D+D,IAAM,SAACyJ,GAAYA,IAAM1L,EAAK1B,gBAAkBoN,EAAGpN,oBAErDM,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACEoD,IAAK,SAACC,GAAclC,EAAK+L,QAAU7J,GACnC3C,MAAO,CAAEuC,MAAO,QAChBkK,IAAMR,EACNS,SAAWV,EACX7M,UAAQ,EACRwN,QAAWX,EAAW,OAAS,WAC/BY,QAAUjO,KAAKyN,SAASvK,KAAKlD,MAC7BoE,OAASA,IAEX1D,EAAAC,EAAAC,cAACsN,EAAD,CACE7I,KAAOA,EACPD,kBAAoB8E,EACpBzE,cAAgBzF,KAAK6E,kBAAkB3B,KAAKlD,MAC5CgH,WAAa,kBAAMlF,EAAK1B,mBACxByG,aAAe7G,KAAKiG,iBAAiB/C,KAAKlD,OAE1CU,EAAAC,EAAAC,cAACuN,EAAD,CACEjH,QAAUA,GAEVwC,EAAS7G,IAAI,SAAC8G,EAAS5G,GAAV,OACbrC,EAAAC,EAAAC,cAACwN,EAADtO,OAAAuO,OAAA,CACErL,IAAuB,QAAjB2G,EAAQ9B,KAAiB8B,EAAQ9B,KAAjC,OAAA2D,OAA+CzI,IAChD4G,EAFP,CAGE1G,QAAUnB,EAAKwM,mBAAmBpL,KAAKpB,EAAMiB,gDAU/CsC,QACE8B,IAAT9B,IACDA,EAAOrF,KAAKO,MAAM8E,MAEpBrF,KAAK0M,QAAQpC,KAAb,IAAAkB,OAAsBnG,EAAKiG,cAA3B,KAAAE,OAA4C,EAAInG,EAAKgG,WAArD,KAAAG,OAAmEnG,EAAK+F,UAAxE,KAAAI,OAAqFnG,EAAKkJ,WAA1F,KAAA/C,OAAwGnG,EAAKmJ,wDAG9F1E,EAASI,GAAW,IAAAuE,EAEIzO,KAAKO,MAApCyM,EAF2ByB,EAE3BzB,cAAeJ,EAFY6B,EAEZ7B,YACjB8B,IAAoB1B,IAAiB9C,IAAoB8C,EAE/DhN,KAAK+B,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GACKE,KAAKO,MADV,CAEEmJ,SAAUI,EACVI,YACA8C,cAAe0B,KAGdxE,GAA6B,KAAhB0C,GACd5M,KAAK2O,uBAIc,IAAlB3B,IAAgD,IAAtB0B,GAC3B1O,KAAKyN,UAAS,4CAIDpI,GAAM,IAAA1C,EAAA3C,KAClBqF,IAASrF,KAAKO,MAAM8E,OACrBrF,KAAK+B,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GACKE,KAAKO,MADV,CAEEqM,YAAa,GACbvH,UAEU,OAATA,IACDrF,KAAK4O,YAAYvJ,GAGjB7C,WAAW,kBAAMG,EAAKsK,KAAK4B,QAAQxJ,IAAO,yDAM9CrF,KAAK+B,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GACKE,KAAKO,MADV,CAEEmJ,SAAU5J,OAAAiK,EAAA,EAAAjK,CAAIE,KAAKO,MAAMmJ,UAAUoF,MAAM,GAAG,kDAM9C,GAAG9O,KAAKO,MAAM2J,UAOZ,OANAlK,KAAK+B,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GACKE,KAAKO,MADV,CAEE2J,WAAW,KAINlK,KAAKiN,KAAK/D,2DAIC,IACZ7D,EAASrF,KAAKO,MAAd8E,KACF0J,EAAQ/O,KAAKO,MAAMmJ,SAASM,OAAO,SAAAL,GACvC,OAAOA,EAAQ7B,MAAMI,MAAQ7C,EAAKkJ,YAChC5E,EAAQ7B,MAAM0E,QAAUnH,EAAKmJ,eAE9BO,EAAM3H,OAAS,GAChBpH,KAAKgP,YACHhP,KAAKiP,kBAAkBF,EAAM,GAAGlH,iDAIpBA,GAChB,IAAIkH,EAAQ,EAOZ,OANA/O,KAAKO,MAAMmJ,SAASS,QAAQ,SAACR,EAAS5G,GACjC4G,EAAQ9B,OAASA,IAClBkH,EAAQhM,KAILgM,+CAIP,OAAO/O,KAAKiP,kBAAmBjP,KAAKO,MAAMqM,iDAGhC7J,GAAO,IACTsC,EAASrF,KAAKO,MAAd8E,KACRA,EAAKsB,SAASuF,OAAOlM,KAAKO,MAAMmJ,SAAS3G,GAAO+E,MAAMI,OACtD7C,EAAKuB,WAAWsF,OAAOlM,KAAKO,MAAMmJ,SAAS3G,GAAO+E,MAAM0E,SACxDxM,KAAK+B,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GACKE,KAAKO,MADV,CAEEqM,YAAa5M,KAAKO,MAAMmJ,SAAS3G,GAAO8E,KACxCxC,UAEFrF,KAAK4O,iDAIL,IAAM1H,EAAUlH,KAAKoN,qBAClBlG,EAAU,GACXlH,KAAKgP,YAAY9H,EAAU,sCAIV,IAAZgI,IAAY9F,UAAAhC,OAAA,QAAAD,IAAAiC,UAAA,KAAAA,UAAA,GACblC,EAAUlH,KAAKoN,qBAGlBlG,EAAWlH,KAAKO,MAAMmJ,SAAStC,OAAS,GACxC,SAAUpH,KAAKO,MAAMmJ,SAASxC,GAC/BlH,KAAKgP,YAAY9H,EAAU,GAIxBgI,IAGGlP,KAAKO,MAAMyM,gBACbhN,KAAK6E,oBACL7E,KAAK+B,SAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GACKE,KAAKO,MADV,CAEEyM,eAAe,wCAQvB,OAAOhN,KAAK6N,QAAQsB,mDAGHpM,EAAOX,GACxBA,EAAEqC,kBACFrC,EAAE0C,iBACF9E,KAAKgP,YAAYjM,UAhQIgC,cAuRVqK,mLAjBX,IAAM/J,EAAO,IAAIe,KAEXiJ,EAAQ,IAAA7D,OAAOnG,EAAKiG,cAAZ,KAAAE,OAA6B,EAAInG,EAAKgG,WAAtC,KAAAG,OAAoDnG,EAAK+F,UAAzD,QAEd,OACE1K,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,KACE5O,EAAAC,EAAAC,cAAC2O,EAAA,EAAD,KACE7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CACE5H,KAAK,mCACL6H,OAAQ,SAAA7P,GAAK,OAAIc,EAAAC,EAAAC,cAAC8O,EAAgB9P,MACpCc,EAAAC,EAAAC,cAAC+O,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAUR,cAZlBtK,aC1QE+K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlJ,MACvB,2DCZNmJ,IAAST,OAAO/O,EAAAC,EAAAC,cAACuP,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBnO,WACrBA,UAAUoO,cAAcC,MAAM/G,KAAK,SAAAgH,GACjCA,EAAaC","file":"static/js/main.c8d74e72.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faEject,\n  faForward,\n  faFastForward,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Controls extends Component {\n  constructor(props) {\n    super();\n\n    // Initial state\n    this.state = {\n      controls: [],\n    };\n\n    // Controls definitions\n    this.controls = [\n      {\n        icon: <FontAwesomeIcon icon={faFastForward} flip=\"horizontal\" />,\n        text: 'Prev',\n        action: () => this.props.onPlayPrev(),\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n            <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n          </span>\n        ),\n        text: '-10m',\n        action: () => this.player().currentTime -= 600,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon\n              icon={faForward}\n              flip=\"horizontal\"\n              style={{ position: 'relative', left: '.25em' }} />\n            <FontAwesomeIcon\n              icon={faForward}\n              flip=\"horizontal\"\n              style={{ position: 'relative', left: '-.25em' }} />\n          </span>\n        ),\n        text: '-60s',\n        action: () => this.player().currentTime -= 60,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />,\n        text: '-10s',\n        action: () => this.player().currentTime -= 10,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faEject} rotation={90} />,\n        text: 'Play/Pause',\n        action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      },\n      {\n        icon: <FontAwesomeIcon icon={faForward} />,\n        text: '+10s',\n        action: () => this.player().currentTime += 10,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon\n              icon={faForward}\n              style={{ position: 'relative', left: '.25em' }} />\n            <FontAwesomeIcon\n              icon={faForward}\n              style={{ position: 'relative', left: '-.25em' }} />\n          </span>\n        ),\n        text: '+60s',\n        action: () => this.player().currentTime += 60,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon icon={faForward} />\n            <FontAwesomeIcon icon={faForward} />\n          </span>\n        ),\n        text: '+10m',\n        action: () => this.player().currentTime += 600,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faFastForward} />,\n        text: 'Next',\n        action: () => this.props.onPlayNext(),\n      },\n    ];\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n      // Add a button to remove the last podcast in the list\n      this.controls.push({\n          icon: 'RL',\n          text: 'Remove last',\n          action: () => this.props.onPodcastsLastRemove(),\n        });\n    }\n  }\n\n  keyHandlerFocus = () => {};\n\n  componentDidMount() {\n    this.keyHandlerFocus();\n    this.setState({\n      ...this.state,\n      controls: this.controls,\n    });\n\n    // Disable key handler on mobile devices\n    if (!(/Mobi|Android/i.test(navigator.userAgent))) {\n      this.keyHandlerFocus = (e) => {\n        let doFocus = true;\n\n        // Allow datepicker to get focus\n        if(e && e.relatedTarget &&\n          this.props.allowFocus(e.relatedTarget)) {\n          doFocus = false;\n        }\n\n        if(doFocus) {\n          setTimeout(() => this._keyHandler.focus(), 100);\n        }\n      };\n    }\n  }\n\n  player = () => this.props.getPlayer();\n\n  render() {\n    const { controls } = this.state;\n\n    return (\n      <div onFocus={ (e) => this.keyHandlerFocus(e) } >\n        { controls.map((control, index) => {\n          return (\n            <button\n              key={ index }\n              onClick={ control.action.bind(this) }\n              style={{\n                borderRadius: \"1em\",\n                padding: \"1em\",\n                margin: \"1em\",\n              }}\n            >\n              <div style={{\n                fontSize: 'calc(1em + 2.5vmin)',\n                fontWeight: 'bold',\n                minWidth: '1.5em',\n              }} >\n                { control.icon instanceof Function ? control.icon() : control.icon }\n              </div>\n              <span style={{ fontSize: 'calc(8px + 1vmin)', color: '#777' }}>\n                { control.text instanceof Function ? control.text() : control.text }\n              </span>\n            </button>\n          )\n        })}\n        <input\n          name=\"player-key-handler\"\n          style={{\n            width: '0px',\n            height: '0px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            position: 'absolute'\n          }}\n          ref={(element) => { this._keyHandler = element; }}\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n        />\n      </div>\n    );\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.state;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = true;\n    switch(e.key) {\n      case 'Enter':\n        this.props.onPlayNext();\n        break;\n      case ' ':\n      case 'p':\n      case 'P':\n        this.player().paused ? this.player().play() : this.player().pause();\n        break;\n      case 'ArrowLeft':\n        this.player().currentTime -= 10;\n        break;\n      case 'ArrowRight':\n        this.player().currentTime += 10;\n        break;\n      case 'ArrowUp':\n        if(e.shiftKey) {\n          this.incrementVolume(.05);\n        }\n        else {\n          this.player().currentTime -= 60;\n        }\n        break;\n      case 'ArrowDown':\n        if(e.shiftKey) {\n          this.incrementVolume(-.05);\n        }\n        else {\n          this.player().currentTime += 60;\n        }\n        break;\n      case 'PageUp':\n        this.player().currentTime -= 600;\n        break;\n      case 'PageDown':\n        this.player().currentTime += 600;\n        break;\n      case '*':\n        this.incrementVolume(.05);\n        break;\n      case '/':\n        this.incrementVolume(-.05);\n        break;\n      case 'm':\n      case 'M':\n        this.player().muted = !this.player().muted;\n        break;\n      case 'r':\n      case 'R':\n        this.handleClickReload();\n        break;\n      default:\n        stopPropagation = false;\n        break;\n    }\n\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:          (e) => {},\n  onPodcastsLastRemove: (e) => {},\n  onPlayPrev:           (e) => {},\n  onPlayNext:           (e) => {},\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPodcastsLastRemove: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Playlist extends Component {\n  render() {\n    const { completedDownload, date, children } = this.props;\n\n    return (\n      <div\n        style={{\n          color: \"#777\",\n          backgroundColor: \"white\",\n          padding: \"2em\",\n          borderRadius: \"1em\",\n          margin: \"1em\",\n          textAlign: \"left\",\n          position: \"relative\",\n        }}>\n        <button\n          onClick={ this.props.onClickReload.bind(this) }\n          disabled={ !completedDownload }\n          style={{\n            borderRadius: \".5em\",\n            padding: \".25em\",\n            margin: \"1.5em\",\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n          }}\n        >\n          <div style={{\n            fontSize: 'calc(.5em + 2vmin)',\n            fontWeight: 'bold',\n            marginBottom: '-.25em'\n          }}>\n            <FontAwesomeIcon icon={faRefresh} />\n          </div>\n          <span style={{\n            fontSize: 'calc(5px + 1vmin)',\n            color: '#777'\n          }}>\n            Reload\n          </span>\n        </button>\n        <div style={{ textAlign: 'center', fontSize: 'large' }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n            maxDate={ new Date() }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(2);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if(e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/)) {\n      focus = false;\n    }\n\n    if(focus) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends Component {\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: \"none\",\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left'\n        }}>\n          { children.map((child, index) =>\n            <li\n              key={ child.key }\n              style={{ position: \"relative\", marginLeft: \"1em\" }}>\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={faPlay}\n                  style={{\n                    position: 'absolute',\n                    left: '-1.25em',\n                    top: 'calc(.2vmin + .2em)',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends Component {\n  render() {\n    const { path, uuid, audio, appTabletTitle} = this.props;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { audio.hour }h: { appTabletTitle }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  appTabletTitle: PropTypes.string,\n  audio: PropTypes.shape(),\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","// Raises exception on response error\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n// Catches the fetch error, original or 'self-raised'\nfunction catchFetchErrors(error) {\n  console.error(error);\n}\n\n// Cached/compiled regexps for parsing HTML\nconst dataAttrsFind   = / class=\"(audioteca-item|pagination-link)\" /;\nconst dataAttrsClean  = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\nclass Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n\n    this.updateList();\n  }\n\n  setDate(date) {\n    if(this.date !== date) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if(pageNumber === 0) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n      // Download podcast data if needed\n      .then(this.getPodcasts.bind(this, pageNumber))\n      // Trigger event for list updated\n      .then(this.handleListUpdate.bind(this, pageNumber));\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map(podcast => {\n        // If it's a podcast and is not in the cache\n        if(podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData)) {\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [...this._previous_uuids.filter(w => w.uuid !== '...')];\n    let completed = true;\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if(pageUuids === undefined) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n        // Add this page's podcasts to the list\n        pageUuids\n          // filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map(podcast => this._podcastsData[podcast.uuid] || podcast );\n\n    // Save complete list on finish\n    if(completed) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every(podcast => 'path' in podcast);\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach((podcast,index) => {\n      if(podcast.uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => { return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      //+ \"https://www.rac1.cat/a-la-carta/cerca?\"\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${date}&pageNumber=${pageNumber}`,\n      {\n        //mode: 'no-cors',\n        credentials: 'omit',\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n      .catch(catchFetchErrors)\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter(line => dataAttrsFind.test(line))\n      .map(v => v.replace(dataAttrsClean, '$1=$2'))\n      .map(line => line.split('='))\n      .filter(v => searchData.includes(v[0]));\n\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if(uuid in this._podcastsData) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(`https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`)\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n        // Add some data to the podcast\n        podcast.uuid = uuid;\n        podcast.audio.hour   = podcast.audio.time.split(':')[0];\n        podcast.audio.minute = podcast.audio.time.split(':')[1];\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n      .catch(catchFetchErrors)\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\nimport './App.css';\n\nclass Rac1Player extends Component {\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n\n    // Initial state\n    const date = props.match.params;\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour,\n        date.minute,\n      ),\n      volume: 1,\n      completed: false,\n      waitingUpdate: false,\n    };\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = (props) => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      }\n    }\n  }\n\n  componentWillMount() {\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  render() {\n    const { podcasts, volume, completed, date } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>\n          { podcasts !== undefined && podcasts.length > 0 ?\n                ( 'audio' in podcasts[current] ?\n                    `${podcasts[current].appTabletTitle}` :\n                    dateText )\n              : dateText\n          }\n          </h3>\n          <Controls\n            getPlayer={ this.player.bind(this) }\n            volume={ volume }\n            allowFocus={ (el) => el.className.match(/date-?picker/) }\n            onPlayNext={ this.playNext.bind(this) }\n            onPlayPrev={ this.playPrev.bind(this) }\n            onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n            onPodcastsLastRemove={ this.handlePodcastsLastRemove.bind(this) }\n            ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          />\n          <ReactAudioPlayer\n            ref={(element) => { this._player = element; }}\n            style={{ width: '100%' }}\n            src={ currentPath }\n            autoPlay={ autoplay }\n            controls\n            preload={ (autoplay ? \"auto\" : \"metadata\") }\n            onEnded={ this.playNext.bind(this) }\n            volume={ volume }\n          />\n          <Playlist\n            date={ date }\n            completedDownload={ completed }\n            onClickReload={ this.handleClickReload.bind(this) }\n            onDateBlur={ () => this.keyHandlerFocus() }\n            onDateChange={ this.handleDateChange.bind(this) }\n          >\n            <PodcastsList\n              current={ current }\n            >\n            { podcasts.map((podcast, index) =>\n              <Podcast\n                key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n                { ...podcast }\n                onClick={ this.handlePodcastClick.bind(this, index) }\n              />\n            )}\n            </PodcastsList>\n          </Playlist>\n        </header>\n      </div>\n    );\n  }\n\n  historyPush(date) {\n    if(date === undefined) {\n      date = this.state.date;\n    }\n    this.history.push(`/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`);\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n    });\n\n    if(completed && currentUUID === '') {\n      this.selectPodcastByDate();\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if(waitingUpdate === true && waitingUpdateNext === false) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if(date !== this.state.date) {\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n      if(date !== null) {\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  handleClickReload() {\n    // If there is not already an incomplete update\n    if(this.state.completed) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  selectPodcastByDate() {\n    const { date } = this.state;\n    const found = this.state.podcasts.filter(podcast => {\n      return podcast.audio.hour >= date.getHours() &&\n        podcast.audio.minute >= date.getMinutes()\n      });\n    if(found.length > 0) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach((podcast, index) => {\n      if(podcast.uuid === uuid) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date } = this.state;\n    date.setHours(Number(this.state.podcasts[index].audio.hour));\n    date.setMinutes(Number(this.state.podcasts[index].audio.minute));\n    this.setState({\n      ...this.state,\n      currentUUID: this.state.podcasts[index].uuid,\n      date,\n    });\n    this.historyPush();\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if(current > 0) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if(current < (this.state.podcasts.length - 1) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if(retry) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if(!this.state.waitingUpdate) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nclass App extends Component {\n  render() {\n    const date = new Date();\n\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/:year/:month/:day/:hour/:minute\"\n            render={props => <Rac1Player { ...props } /> } />\n          <Redirect to={{ pathname: todayStr }} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}