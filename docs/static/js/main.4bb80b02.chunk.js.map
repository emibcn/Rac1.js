{"version":3,"sources":["GAListener.jsx","Controls.jsx","Rac1Directe.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","Rac1ByDate.jsx","App.js","serviceWorker.js","index.js"],"names":["GAListener","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loadGoogleTag","ReactGA","initialize","sendPageView","context","router","history","location","listen","set","page","pathname","pageview","GACode","global","dataLayer","gtag","push","arguments","Date","setTimeout","scriptTag","document","createElement","src","concat","body","appendChild","props","children","Component","contextTypes","PropTypes","object","Controls","classCallCheck","possibleConstructorReturn","getPrototypeOf","controls","icon","react_default","a","index_es","faFastForward","flip","text","help","action","onPlayPrev","faForward","player","currentTime","keys","style","position","left","faEject","rotation","paused","play","pause","onPlayNext","incrementVolume","key","shiftKey","muted","keyHandlerFocus","_keyHandlerFocus","e","force","doFocus","relatedTarget","allowFocus","timer","_keyHandler","focus","getPlayer","extraControls","length","test","navigator","userAgent","clearTimeout","_this2","filter","control","hideButtons","includes","map","index","onClick","bind","onMouseUp","aria-label","title","className","borderRadius","padding","margin","fontSize","fontWeight","minWidth","Function","color","name","width","height","border","bottom","right","backgroundColor","cursor","ref","element","onKeyUp","handleKey","onBlur","volume","onSetVolume","increment","volumeNew","setVolume","stopPropagation","forEach","key_orig","every","mod","console","log","preventDefault","React","PureComponent","defaultProps","Rac1Directe","state","_player","audioEl","initialTitle","Fragment","src_Controls","v","setState","objectSpread","bundle_default","autoPlay","controlsList","preload","ReloadButton","assign","marginBottom","faRefresh","Playlist","_this$props","completedDownload","date","minDate","maxDate","textAlign","display","justifyContent","alignItems","entry_default","onChange","handleDateChange","handleDateBlur","required","value","clearIcon","calendarIcon","faCalendar","Playlist_ReloadButton","onClickReload","disabled","setHours","setMinutes","onDateChange","match","onDateBlur","PodcastsList","current","undefined","listStyleType","marginLeft","paddingLeft","child","textIndent","faPlay","Podcast","handleClick","num","path","uuid","hour","minute","href","textDecoration","handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","err","message","error","dataAttrsFind","dataAttrsClean","Rac1","_podcastsData","_pages_uuids","_previous_uuids","controller","AbortController","onListUpdate","updateList","abort","pageNumber","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","catch","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","toConsumableArray","w","completed","pageUuids","podcastPage","allCompleted","podcastNew","_this3","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","getDate","getMonth","getFullYear","fetch","credentials","signal","searchData","data","split","line","replace","Number","_this5","Promise","resolve","json","audio","time","appTabletTitle","titleFull","Rac1ByDate","currentUUID","getDateFromParams","waitingUpdate","handleClickReload","assertThisInitialized","params","year","month","day","unlisten","handleHistoryChange","rac1","_this$state","dateText","findCurrentPodcast","autoplay","currentPath","el","playNext","playPrev","onEnded","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","_this$state2","waitingUpdateNext","historyPush","setDate","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","App","todayStr","HashRouter","paddingInlineStart","Link","to","borderBottomLeftRadius","faByDate","marginRight","borderBottomRightRadius","faDirecte","Switch","Route","render","src_Rac1Directe","src_Rac1ByDate","Redirect","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","ReactDOM","src_App_0","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oKAIMA,cAKJ,SAAAA,IAAa,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAA,OACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAGKI,cADU,kBAEfC,IAAQC,WAFO,kBAHLT,mFASXG,KAAKO,aAAaP,KAAKQ,QAAQC,OAAOC,QAAQC,UAC9CX,KAAKQ,QAAQC,OAAOC,QAAQE,OAAOZ,KAAKO,mDAG7BI,GACXN,IAAQQ,IAAI,CAAEC,KAAMH,EAASI,WAC7BV,IAAQW,SAASL,EAASI,gDAGdE,GAEZC,EAAOC,UAAYD,EAAOC,WAAa,GACvCD,EAAOE,KAAO,WAAYF,EAAOC,UAAUE,KAAKC,YAEhDJ,EAAOE,KAAK,KAAM,IAAIG,MACtBL,EAAOE,KAAK,SAAUH,GAGtBO,WAAW,WACT,IAAIC,EAAYC,SAASC,cAAc,UACvCF,EAAUG,IAAV,+CAAAC,OAA+DZ,GAC/DS,SAASI,KAAKC,YAAYN,IACzB,oCAIH,OAAOzB,KAAKgC,MAAMC,gBAxCGC,aAAnBtC,EACGuC,aAAe,CACpB1B,OAAQ2B,YAAUC,QA0CPzC,uTCtCT0C,cAuHJ,SAAAA,EAAYN,GAAO,IAAAnC,EAAA,OAAAC,OAAAyC,EAAA,EAAAzC,CAAAE,KAAAsC,IACjBzC,EAAAC,OAAA0C,EAAA,EAAA1C,CAAAE,KAAAF,OAAA2C,EAAA,EAAA3C,CAAAwC,GAAAnC,KAAAH,QArHF0C,SAAW,CACT,CACEC,KAAMC,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMI,IAAeC,KAAK,eACjDC,KAAM,OACNC,KAAM,wBACNC,OAAQ,kBAAMtD,EAAKmC,MAAMoB,eAE3B,CACET,KACEC,EAAAC,EAAAlB,cAAA,YACEiB,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMU,IAAWL,KAAK,eACvCJ,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMU,IAAWL,KAAK,gBAG3CC,KAAM,OACNC,KAAM,0BACNC,OAAQ,kBAAMtD,EAAKyD,SAASC,aAAe,KAC3CC,KAAM,CAAE,WAEV,CACEb,KACEC,EAAAC,EAAAlB,cAAA,YACEiB,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CACEH,KAAMU,IACNL,KAAK,aACLS,MAAO,CAAEC,SAAU,WAAYC,KAAM,WACvCf,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CACEH,KAAMU,IACNL,KAAK,aACLS,MAAO,CAAEC,SAAU,WAAYC,KAAM,aAG3CV,KAAM,OACNC,KAAM,wBACNC,OAAQ,kBAAMtD,EAAKyD,SAASC,aAAe,IAC3CC,KAAM,CAAE,YAEV,CACEb,KAAMC,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMU,IAAWL,KAAK,eAC7CC,KAAM,OACNC,KAAM,0BACNC,OAAQ,kBAAMtD,EAAKyD,SAASC,aAAe,IAC3CC,KAAM,CAAE,cAEV,CACEb,KAAMC,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMiB,IAASC,SAAU,KAChDZ,KAAM,aACNC,KAAM,oBACNC,OAAQ,kBAAMtD,EAAKyD,SAASQ,OAASjE,EAAKyD,SAASS,OAASlE,EAAKyD,SAASU,SAC1ER,KAAM,CAAE,IAAK,IAAK,MAEpB,CACEb,KAAMC,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMU,MAC7BJ,KAAM,OACNC,KAAM,wBACNC,OAAQ,kBAAMtD,EAAKyD,SAASC,aAAe,IAC3CC,KAAM,CAAE,eAEV,CACEb,KACEC,EAAAC,EAAAlB,cAAA,YACEiB,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CACEH,KAAMU,IACNI,MAAO,CAAEC,SAAU,WAAYC,KAAM,WACvCf,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CACEH,KAAMU,IACNI,MAAO,CAAEC,SAAU,WAAYC,KAAM,aAG3CV,KAAM,OACNC,KAAM,sBACNC,OAAQ,kBAAMtD,EAAKyD,SAASC,aAAe,IAC3CC,KAAM,CAAE,cAEV,CACEb,KACEC,EAAAC,EAAAlB,cAAA,YACEiB,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMU,MACvBT,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMU,OAG3BJ,KAAM,OACNC,KAAM,wBACNC,OAAQ,kBAAMtD,EAAKyD,SAASC,aAAe,KAC3CC,KAAM,CAAE,aAEV,CACEb,KAAMC,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMI,MAC7BE,KAAM,OACNC,KAAM,oBACNC,OAAQ,kBAAMtD,EAAKmC,MAAMiC,cACzBT,KAAM,CAAE,UAEV,CACEN,KAAM,sBACNC,OAAQ,kBAAMtD,EAAKqE,iBAAiB,MACpCV,KAAM,CACJ,IACA,CAACW,IAAK,YAAaC,UAAU,KAGjC,CACElB,KAAM,sBACNC,OAAQ,kBAAMtD,EAAKqE,gBAAgB,MACnCV,KAAM,CACJ,IACA,CAACW,IAAK,UAAWC,UAAU,KAG/B,CACElB,KAAM,qBACNC,OAAQ,kBAAMtD,EAAKyD,SAASe,OAASxE,EAAKyD,SAASe,OACnDb,KAAM,CAAE,IAAK,OAIE3D,EASnByE,gBAAkB,aATCzE,EAUnB0E,iBAAmB,SAACC,EAAGC,GACrB,IAAIC,GAAU,EAGTF,GAAKA,EAAEG,eACN9E,EAAKmC,MAAM4C,WAAWJ,EAAEG,iBAC5BD,GAAU,IAGTA,GAAWD,KACZ5E,EAAKgF,MAAQrD,WAAW,kBAAM3B,EAAKiF,YAAYC,SAAS,OApBzClF,EAiGnByD,OAAS,kBAAMzD,EAAKmC,MAAMgD,aA7FnBhD,EAAMiD,cAAcC,SACvBrF,EAAK6C,SAAW7C,EAAK6C,SAASb,OAAOG,EAAMiD,gBAL5BpF,mFA0BV,gBAAgBsF,KAAKC,UAAUC,aACnCrF,KAAKsE,gBAAkBtE,KAAKuE,iBAC5BvE,KAAKsE,kEAKRgB,aAAatF,KAAK6E,wCAGX,IAAAU,EAAAvF,KACP,OACE4C,EAAAC,EAAAlB,cAAA,WACI3B,KAAK0C,SACF8C,OAAQ,SAAAC,GAAO,MAAI,SAAUA,GAAW,SAAUA,IAClDD,OAAQ,SAAAC,GAAO,OAAKF,EAAKvD,MAAM0D,YAAYC,SAASF,EAAQxC,QAC5D2C,IAAI,SAACH,EAASI,GACjB,OACEjD,EAAAC,EAAAlB,cAAA,UACEwC,IAAM0B,EACNC,QAAUL,EAAQtC,OAAO4C,KAAKR,GAC9BS,UAAY,SAACxB,GAAD,OAAOe,EAAKjB,gBAAgBE,GAAG,IAC3CyB,aAAaR,EAAQvC,KACrBgD,MAAQT,EAAQvC,KAChBiD,UAAU,uBACV1C,MAAO,CACL2C,aAAc,MACdC,QAAS,MACTC,OAAQ,QAGV1D,EAAAC,EAAAlB,cAAA,OAAK8B,MAAO,CACV8C,SAAU,sBACVC,WAAY,OACZC,SAAU,UAERhB,EAAQ9C,gBAAgB+D,SAAWjB,EAAQ9C,OAAS8C,EAAQ9C,MAEhEC,EAAAC,EAAAlB,cAAA,QAAM8B,MAAO,CACX8C,SAAU,oBACVI,MAAO,SAELlB,EAAQxC,gBAAgByD,SAAWjB,EAAQxC,OAASwC,EAAQxC,SAKtEL,EAAAC,EAAAlB,cAAA,SACEiF,KAAK,qBACLnD,MAAO,CACLoD,MAAO,MACPC,OAAQ,MACRC,OAAQ,EACRT,OAAQ,EACRD,QAAS,EACTW,OAAQ,EACRC,MAAO,EACPvD,SAAU,QACVwD,gBAAiB,cACjBP,MAAO,cACPQ,OAAQ,WAEVC,IAAM,SAACC,GAAc9B,EAAKT,YAAcuC,GACxCC,QAAUtH,KAAKuH,UAAUxB,KAAK/F,MAC9BwH,OAASxH,KAAKsE,gBAAgByB,KAAK/F,MACnCiG,aAAW,yDAQTwB,GACRzH,KAAKsD,SAASmE,OAASA,EACvBzH,KAAKgC,MAAM0F,YAAYD,2CAGTE,GAAW,IACjBF,EAAWzH,KAAKgC,MAAhByF,OACJG,EAAYH,EAGbE,EAAY,GAAKF,EAAS,IAC3BG,EAAYH,GAAW,EAAIE,EAAaF,EAASE,EAAY,GAI5DA,EAAY,GAAKF,EAAS,IAC3BG,EAAYH,IAAYE,EAAaF,EAASE,EAAY,GAIzDC,IAAcH,GACfzH,KAAK6H,UAAUD,qCAITpD,GACR,IAAIsD,GAAkB,EAGtB9H,KAAK0C,SAASqF,QAAS,SAACtC,IACrBA,EAAQjC,MAAM,IAAIuE,QAAS,SAACC,GAC3B,IAAI7D,EAA0B,kBAAb6D,EAAwB,CAAC7D,IAAK6D,GAAYA,EACxDxD,EAAEL,MAAQA,EAAIA,KACf,CAAC,WAAY,SAAU,UAAW,WAC/B8D,MAAO,SAACC,GAAD,QAAW1D,EAAE0D,OAAW/D,EAAI+D,OACtCC,QAAQC,IAAI3C,EAAQvC,MACpB4E,GAAkB,EAClBrC,EAAQtC,cAKX2E,IACDtD,EAAEsD,kBACFtD,EAAE6D,yBAtQeC,IAAMC,eA2Q7BjG,EAASkG,aAAe,CACtBd,YAAe,SAAClD,KAChBpB,WAAe,SAACoB,KAChBP,WAAe,SAACO,KAChBI,WAAe,SAACJ,KAChBS,cAAe,GACfS,YAAe,GACf+B,OAAe,GAmCFnF,QCjQAmG,cA9Cb,SAAAA,EAAYzG,EAAOtB,GAAS,IAAAb,EAAA,OAAAC,OAAAyC,EAAA,EAAAzC,CAAAE,KAAAyI,IAC1B5I,EAAAC,OAAA0C,EAAA,EAAA1C,CAAAE,KAAAF,OAAA2C,EAAA,EAAA3C,CAAA2I,GAAAtI,KAAAH,QATF0I,MAAQ,CACNjB,OAAQ,GAUR5H,EAAKa,QAAUsB,EAAMtB,QAHKb,wEAH1B,OAAOG,KAAK2I,QAAQC,qEAUpB5I,KAAK6I,aAAenH,SAASwE,MAC7BxE,SAASwE,MAAT,GAAArE,OAAoB7B,KAAK6I,aAAzB,6DAKAnH,SAASwE,MAAQlG,KAAK6I,8CAGf,IAAAtD,EAAAvF,KACCyH,EAAWzH,KAAK0I,MAAhBjB,OAKR,OACE7E,EAAAC,EAAAlB,cAACiB,EAAAC,EAAMiG,SAAP,KACElG,EAAAC,EAAAlB,cAAA,UAJU,mBAKViB,EAAAC,EAAAlB,cAACoH,EAAD,CACE/D,UAAYhF,KAAKsD,OAAOyC,KAAK/F,MAC7ByH,OAASA,EACTC,YAAc,SAACsB,GAAD,OAAOzD,EAAK0D,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GAAmByF,EAAKmD,MAAxB,CAA+BjB,OAAQuB,MAC5DtD,YAAa,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAExE9C,EAAAC,EAAAlB,cAACwH,EAAAtG,EAAD,CACEuE,IAAK,SAACC,GAAc9B,EAAKoD,QAAUtB,GACnC5D,MAAO,CAAEoD,MAAO,QAChBjF,IAhBc,kCAiBdwH,UAhBW,EAiBX1G,UAAQ,EACR2G,aAAa,aACbC,QAAsB,OACtB7B,OAASA,YAjDOvF,8CCKpBqH,EAAe,SAACvH,GAEpB,OACEY,EAAAC,EAAAlB,cAAA,SAAA7B,OAAA0J,OAAA,GACOxH,EADP,CAEEiE,aAJS,SAKTxC,MAAO,CACL2C,aAAc,OACdC,QAAS,QACTC,OAAQ,eAGV1D,EAAAC,EAAAlB,cAAA,OAAK8B,MAAO,CACV8C,SAAU,qBACVC,WAAY,OACZiD,aAAc,WAEd7G,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAM+G,OAEzB9G,EAAAC,EAAAlB,cAAA,QAAM8B,MAAO,CACX8C,SAAU,oBACVI,MAAO,SApBA,YA4BTgD,mLACK,IAAAC,EACyD5J,KAAKgC,MAA7D6H,EADDD,EACCC,kBAAmBC,EADpBF,EACoBE,KAAM7H,EAD1B2H,EAC0B3H,SAAU8H,EADpCH,EACoCG,QAASC,EAD7CJ,EAC6CI,QAEpD,OACEpH,EAAAC,EAAAlB,cAAA,OAAK8B,MAAO,CACVkD,MAAO,OACPO,gBAAiB,QACjBb,QAAS,MACTD,aAAc,MACdE,OAAQ,MACR2D,UAAW,OACXvG,SAAU,WACV6C,SAAU,UAEV3D,EAAAC,EAAAlB,cAAA,OAAK8B,MAAO,CACVyG,QAAS,OACTC,eAAgB,eAChBC,WAAY,WAEZxH,EAAAC,EAAAlB,cAAC0I,EAAAxH,EAAD,CACEyH,SAAWtK,KAAKuK,iBAAiBxE,KAAK/F,MACtCwH,OAASxH,KAAKwK,eAAezE,KAAK/F,MAClC+J,QAAUA,EACVC,QAAUA,EACVS,UAAW,EACXC,MAAQZ,EACRa,UAAY,KACZC,aAAehI,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAMkI,QAExCjI,EAAAC,EAAAlB,cAACmJ,EAAD,CACEhF,QAAU9F,KAAKgC,MAAM+I,cAAchF,KAAK/F,MACxCgL,UAAYnB,KAGhBjH,EAAAC,EAAAlB,cAAA,OAAK8B,MAAO,CACVwG,UAAW,WAEThI,6CAMO6H,GACfA,EAAKmB,SAAS,GACdnB,EAAKoB,WAAW,GAChBlL,KAAKgC,MAAMmJ,aAAarB,0CAGXtF,GACb,IAAIO,GAAQ,EACTP,GAAKA,EAAEG,eACRH,EAAEG,cAAcwB,UAAUiF,MAAM,6BAChCrG,GAAQ,GAGPA,GACD/E,KAAKgC,MAAMqJ,WAAW7G,UA1DL8D,IAAMC,eAgE7BoB,EAASnB,aAAe,CACtBuC,cAAe,SAACvG,KAChB6G,WAAY,SAAC7G,KACb2G,aAAc,SAAC3G,KACfqF,mBAAmB,EACnBC,KAAM,IAAIvI,KACVyI,QAAS,IAAIzI,MAaAoI,QCrHT2B,mLACK,IAAA1B,EACuB5J,KAAKgC,MAA3BC,EADD2H,EACC3H,SAAUsJ,EADX3B,EACW2B,QAElB,YAAoBC,IAAbvJ,GAA8C,IAApBA,EAASiD,OACxC,KAEEtC,EAAAC,EAAAlB,cAAA,MAAI8B,MAAO,CACTgI,cAAe,OACfC,WAAY,EACZC,YAAa,EACb1B,UAAW,SAEThI,EAAS2D,IAAK,SAACgG,EAAO/F,GAAR,OACdjD,EAAAC,EAAAlB,cAAA,MACEwC,IAAMyH,EAAMzH,IACZV,MAAO,CACLC,SAAU,WACVgI,WAAY,QACZG,WAAY,SACZxF,QAAS,UAGTR,IAAU0F,EACV3I,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CACEH,KAAOmJ,IACPrI,MAAO,CACLC,SAAU,WACVC,KAAM,UACN0C,QAAS,WAEX,KAEFuF,aAjCWtD,IAAMC,eAyCjC+C,EAAa9C,aAAe,GASb8C,QCrDTS,6MAyBJC,YAAc,SAACxH,GAAD,OAAO3E,EAAKmC,MAAM8D,QAAQtB,4EAxB/B,IAEMyH,EAFNrC,EACoC5J,KAAKgC,MAAxCkK,EADDtC,EACCsC,KAAMC,EADPvC,EACOuC,KAAMC,EADbxC,EACawC,KAAMC,EADnBzC,EACmByC,OAAQnG,EAD3B0D,EAC2B1D,MAGlC,OACEtD,EAAAC,EAAAlB,cAAA,YACKuK,EAKGtJ,EAAAC,EAAAlB,cAAA,KACE2K,KAAOJ,EACPpG,QAAU9F,KAAKgM,YAAYjG,KAAK/F,MAChCyD,MAAO,CAAE8I,eAAgB,SAEvBH,EALJ,IAKaC,IAdVJ,EAcwBI,GAdT,GAAK,IAAM,IAAOJ,EAcC,GALrC,KAK6C/F,GAR7CtD,EAAAC,EAAAlB,cAAA,YAAQwK,WATA7D,IAAMC,eA4B5BwD,EAAQvD,aAAe,CACrB1C,QAAS,SAACtB,MAaGuH,QC5Cf,SAASS,EAAkBC,GACzB,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,EAIT,SAASI,EAAiBC,GACP,eAAbA,EAAIlG,KACNuB,QAAQC,IAAI0E,EAAIC,SAGhB5E,QAAQ6E,MAAMF,GAKlB,IAAMG,EAAkB,6CAClBC,EAAkB,8BAgPTC,aAhOb,SAAAA,EAAYnL,GAAQlC,OAAAyC,EAAA,EAAAzC,CAAAE,KAAAmN,GAAAnN,KAXpBoN,cAAgB,GAWGpN,KARnBqN,aAAe,GAQIrN,KALnBsN,gBAAkB,GAKCtN,KAFnBuN,WAAa,IAAIC,gBAIfxN,KAAK8J,KAAO9H,EAAM8H,KAClB9J,KAAKyN,aAAezL,EAAMyL,cAFb,aAIbzN,KAAK0N,iEAIL1N,KAAKuN,WAAWI,wCAGV7D,GACH9J,KAAK8J,OAASA,IACf9J,KAAKsN,gBAAkB,IAEzBtN,KAAK8J,KAAOA,EACZ9J,KAAK0N,kDAIkB,IAAdE,EAActM,UAAA4D,OAAA,QAAAsG,IAAAlK,UAAA,GAAAA,UAAA,GAAH,EAQpB,OAPkB,IAAfsM,IACD5N,KAAKqN,aAAe,GACpBrN,KAAK6N,MAAQ,CAAC,GACd7N,KAAK8N,oBAIA9N,KAAK+N,iBAAiBH,GAE1BI,KAAKhO,KAAKiO,YAAYlI,KAAK/F,KAAM4N,IAEjCI,KAAKhO,KAAK8N,iBAAiB/H,KAAK/F,KAAM4N,IACtCM,MAAMrB,uCAGCe,EAAYO,GAAU,IAAAtO,EAAAG,KAChC,OAAOmO,EACJvI,IAAI,SAAAwI,GASH,MAPoB,QAAjBA,EAAQjC,MAAoBiC,EAAQjC,QAAQtM,EAAKuN,eAGlDvN,EAAKwO,eAAeD,EAAQjC,MACzB6B,KAAMnO,EAAKyO,oBAAoBvI,KAAKlG,EAAM+N,IAC1CM,MAAMrB,GAEJuB,+CAOM,IAAA7I,EAAAvF,KACbuO,EAAOzO,OAAA0O,EAAA,EAAA1O,CAAOE,KAAKsN,gBAAgB9H,OAAO,SAAAiJ,GAAC,MAAe,QAAXA,EAAEtC,QACjDuC,GAAY,EAGhB1O,KAAK6N,MAAM9F,QAAS,SAAAjH,GAGlB,IAAI6N,EAAYpJ,EAAK8H,aAAcvM,QAGlB0K,IAAdmD,GACDJ,EAAQlN,KAAK,CAAC8K,KAAM,QACpBuC,GAAY,GAIZC,EAEGnJ,OAAQ,SAAAoJ,GAGP,OAAwB,IAFVL,EAAQ/I,OACpB,SAAA4I,GAAO,OAAIA,EAAQjC,OAASyC,EAAYzC,OAC7BjH,SAEd6C,QAAS,SAAAqG,GAAO,OAAIG,EAAQlN,KAAM+M,OAKzCG,EAAUA,EAAQ3I,IAAI,SAAAwI,GAAO,OAAI7I,EAAK6H,cAAcgB,EAAQjC,OAASiC,IAGlEM,IACD1O,KAAKsN,gBAAkBiB,GAIzB,IAAMM,EAAeH,GAAaH,EAAQtG,MAAM,SAAAmG,GAAO,MAAI,SAAUA,IAKrE,OAFApO,KAAKyN,aAAac,EAASM,GAEpBN,8CAKWX,EAAYkB,GAAY,IAAAC,EAAA/O,KAC1C8O,EAAWhO,KAAO8M,EAClB5N,KAAKqN,aAAaO,GAAY7F,QAAQ,SAACqG,EAAQvI,GAC1CuI,EAAQjC,OAAS2C,EAAW3C,OAC7B4C,EAAK1B,aAAaO,GAAY/H,GAASiJ,KAK3C9O,KAAK8N,iBAAiBgB,8CAKO,IAAAE,EAAAhP,KAAd4N,EAActM,UAAA4D,OAAA,QAAAsG,IAAAlK,UAAA,GAAAA,UAAA,GAAH,EAC1B,OAAOtB,KAAKiP,QAAQrB,GACjBI,KAAK,SAAAkB,GAAW,IAAAC,EAGcH,EAAKI,UAAUF,GAApCG,EAHOF,EAGPE,UAAWxB,EAHJsB,EAGItB,MAmBnB,OAhBkB,IAAfD,IAKDoB,EAAKnB,MAAQA,EAAM3I,OAAS,EAAI2I,EAAMyB,UAAY,CAAC,GAInDN,EAAKnB,MAAM9F,QAAS,SAAAjH,GAAI,OAAc,IAATA,GAAekO,EAAKtB,WAAY5M,MAG/DkO,EAAK3B,aAAaO,GAAcyB,EAC7BC,UACA1J,IAAI,SAAAuG,GAAU,MAAO,CAACA,OAAMrL,KAAM8M,KAE9BoB,EAAK3B,aAAaO,uCAMT,IAAdA,EAActM,UAAA4D,OAAA,QAAAsG,IAAAlK,UAAA,GAAAA,UAAA,GAAH,EAEXiO,EAAO,SAAAtD,GAAG,OAAMA,EAAM,GAAK,IAAM,IAAOA,GACxCnC,EACJyF,EAAMvP,KAAK8J,KAAK0F,WAAc,IAC9BD,EAAM,EAAIvP,KAAK8J,KAAK2F,YAAe,IACnCzP,KAAK8J,KAAK4F,cAEZ,OAAOC,MACL,+HAAA9N,OAE0CiI,EAF1C,QAAAjI,OAEqDiI,EAFrD,gBAAAjI,OAEwE+L,GACxE,CACEgC,YAAa,cACbC,OAAQ7P,KAAKuN,WAAWsC,SAEzB7B,KAAKxB,GACLwB,KAAK,SAAAvB,GAAQ,OAAIA,EAASxJ,2CAKrBiM,GACR,IAAMY,EAAa,CAAC,gBAAgB,8BAC9BC,EAAOb,EACVc,MAAM,MACNxK,OAAO,SAAAyK,GAAI,OAAIhD,EAAc9H,KAAK8K,KAClCrK,IAAI,SAAAoD,GAAC,OAAIA,EAAEkH,QAAQhD,EAAgB,WACnCtH,IAAI,SAAAqK,GAAI,OAAIA,EAAKD,MAAM,OACvBxK,OAAO,SAAAwD,GAAC,OAAI8G,EAAWnK,SAASqD,EAAE,MAErC,MAAO,CACLqG,UAAWU,EACRvK,OAAO,SAAAwD,GAAC,MAAa,kBAATA,EAAE,KACdpD,IAAI,SAAAoD,GAAC,OAAIA,EAAE,KACd6E,MAAOkC,EACJvK,OAAO,SAAAwD,GAAC,MAAa,+BAATA,EAAE,KACdpD,IAAI,SAAAoD,GAAC,OAAImH,OAAOnH,EAAE,8CAMVmD,GAAM,IAAAiE,EAAApQ,KAGnB,OAAGmM,KAAQnM,KAAKoN,cAGP,IAAIiD,QAAS,SAAAC,GAAO,OAAIA,EAAQF,EAAKhD,cAAcjB,MAGrDwD,MAAK,iDAAA9N,OACuCsK,GACjD,CAAE0D,OAAQ7P,KAAKuN,WAAWsC,SAEzB7B,KAAKxB,GACLwB,KAAK,SAAA+B,GAAI,OAAIA,EAAKQ,SAClBvC,KAAK,SAAAI,GAcJ,OAZAA,EAAQjC,KAAOA,EACfiC,EAAQhC,KAAS+D,OAAO/B,EAAQoC,MAAMC,KAAKT,MAAM,KAAK,IACtD5B,EAAQ/B,OAAS8D,OAAO/B,EAAQoC,MAAMC,KAAKT,MAAM,KAAK,IACtD5B,EAAQlI,MAAQkI,EAAQsC,eAAeR,QAAQ,YAAa,IAC5D9B,EAAQuC,UAAYvC,EAAQsC,eAG5BtC,EAAQlC,KAAOkC,EAAQlC,KAAKgE,QAAQ,UAAW,UAAUA,QAAQ,WAAY,UAG7EE,EAAKhD,cAAcjB,GAAQiC,EAEpBA,aCwHAwC,cA9Vb,SAAAA,EAAY5O,EAAOtB,GAAS,IAAAb,EAAA,OAAAC,OAAAyC,EAAA,EAAAzC,CAAAE,KAAA4Q,IAC1B/Q,EAAAC,OAAA0C,EAAA,EAAA1C,CAAAE,KAAAF,OAAA2C,EAAA,EAAA3C,CAAA8Q,GAAAzQ,KAAAH,QAEKU,QAAUsB,EAAMtB,QACrBb,EAAKgJ,aAAenH,SAASwE,MAG7BrG,EAAK6I,MAAQ,CACXyF,SAAU,CAAC,CAAChC,KAAM,QAClB0E,YAAa,GACb/G,KAAMjK,EAAKiR,kBAAkB9O,GAC7BgI,QAAS,IAAIzI,KACbkG,OAAQ,EACRiH,WAAW,EACXqC,eAAe,GAGjBlR,EAAKoF,cAAgB,CACnB,CACE/B,KAAM,kBACNC,OAAQtD,EAAKmR,kBAAkBjL,KAAvBjG,OAAAmR,EAAA,EAAAnR,QAAAmR,EAAA,EAAAnR,CAAAD,KACR2D,KAAM,CAAE,IAAK,OArBS3D,iFAXVmC,GAChB,IAAM8H,EAAO9H,EAAMoJ,MAAM8F,OACzB,OAAO,IAAI3P,KACPuI,EAAKqH,KACLrH,EAAKsH,MAAM,EACXtH,EAAKuH,IACLvH,EAAKsC,MAAM,EACXtC,EAAKuC,QAAQ,iEAuDjBrM,KAAKsR,SAAWtR,KAAKU,QAAQE,OAAOZ,KAAKuR,oBAAoBxL,KAAK/F,OAGlEA,KAAKwR,KAAO,IAAIrE,EAAK,CACnBrD,KAAM9J,KAAK0I,MAAMoB,KACjB2D,aAAczN,KAAK8N,iBAAiB/H,KAAK/F,uDAM3CA,KAAKsR,WAGLtR,KAAKwR,KAAK7D,QAGVjM,SAASwE,MAAQlG,KAAK6I,8CAGf,IAAAtD,EAAAvF,KAAAyR,EACgDzR,KAAK0I,MAApDyF,EADDsD,EACCtD,SAAU1G,EADXgK,EACWhK,OAAQiH,EADnB+C,EACmB/C,UAAW5E,EAD9B2H,EAC8B3H,KAAME,EADpCyH,EACoCzH,QACrC0H,EAAW5H,aAAgBvI,KAAhB,GAAAM,OACZiI,EAAK0F,UADO,KAAA3N,OACM,EAAIiI,EAAK2F,WADf,KAAA5N,OAC6BiI,EAAK4F,eAC/C,MAGEnE,EAAUvL,KAAK2R,qBACfC,EAAWrG,EAAU,EACrBsG,OACSrG,IAAb2C,GACKA,EAASjJ,OAASqG,GAClB,SAAU4C,EAAS5C,GACpB4C,EAAS5C,GAASW,KAAO,GACzBhG,OAAqBsF,IAAb2C,GAA0BA,EAASjJ,OAAS,GACtD,UAAWiJ,EAAS5C,GAApB,GAAA1J,OACKsM,EAAS5C,GAASoF,WAEvBe,EAEJ,OACE9O,EAAAC,EAAAlB,cAACiB,EAAAC,EAAMiG,SAAP,KACElG,EAAAC,EAAAlB,cAAA,UAAMuE,GACNtD,EAAAC,EAAAlB,cAACoH,EAAD,CACE/D,UAAYhF,KAAKsD,OAAOyC,KAAK/F,MAC7ByH,OAASA,EACT7C,WAAa,SAACkN,GAAD,OAAQA,EAAG3L,UAAUiF,MAAO,iBACzCnH,WAAajE,KAAK+R,SAAShM,KAAK/F,MAChCoD,WAAapD,KAAKgS,SAASjM,KAAK/F,MAChC0H,YAAc,SAACsB,GAAD,OAAOzD,EAAK0D,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GAAmByF,EAAKmD,MAAxB,CAA+BjB,OAAQuB,MAC5D5B,IAAM,SAAC0K,GAAYA,IAAMvM,EAAKjB,gBAAkBwN,EAAGxN,kBACnDW,cAAgBjF,KAAKiF,gBAEvBrC,EAAAC,EAAAlB,cAACwH,EAAAtG,EAAD,CACEuE,IAAK,SAACC,GAAc9B,EAAKoD,QAAUtB,GACnC5D,MAAO,CAAEoD,MAAO,QAChBjF,IAAMiQ,EACNzI,SAAWwI,EACXlP,UAAQ,EACR2G,aAAa,aACbC,QAAWsI,EAAW,OAAS,WAC/BK,QAAUjS,KAAK+R,SAAShM,KAAK/F,MAC7ByH,OAASA,IAEX7E,EAAAC,EAAAlB,cAACuQ,EAAD,CACEpI,KAAOA,EACPC,QAAU,IAAIxI,KAAK,KAAM,EAAG,GAC5ByI,QAAUA,EACVH,kBAAoB6E,EACpB3D,cAAgB/K,KAAKgR,kBAAkBjL,KAAK/F,MAC5CqL,WAAa,kBAAM9F,EAAKjB,mBACxB6G,aAAenL,KAAKuK,iBAAiBxE,KAAK/F,OAE1C4C,EAAAC,EAAAlB,cAACwQ,EAAD,CACE5G,QAAUA,GAEV4C,EAASvI,IAAI,SAACwI,EAASvI,GAAV,OACbjD,EAAAC,EAAAlB,cAACyQ,EAADtS,OAAA0J,OAAA,CACErF,IAAuB,QAAjBiK,EAAQjC,KAAiBiC,EAAQjC,KAAjC,OAAAtK,OAA+CgE,IAChDuI,EAFP,CAGEtI,QAAUP,EAAK8M,mBAAmBtM,KAAKR,EAAMM,uDASrClF,EAAUwC,GAC5B,IAAMmP,EAAUtS,KAAK8Q,kBAAkB9Q,KAAKgC,OACpC8H,EAAS9J,KAAK0I,MAAdoB,KAGM,QAAX3G,IASA2G,EAAK4F,gBAAkB4C,EAAQ5C,eAChC5F,EAAK2F,aAAe6C,EAAQ7C,YAC5B3F,EAAK0F,YAAc8C,EAAQ9C,UAC3BxP,KAAKuK,iBAAiB+H,GAIfxI,EAAKyI,aAAeD,EAAQC,YACnCzI,EAAK0I,eAAiBF,EAAQE,eAE9BxS,KAAKiJ,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GACKE,KAAK0I,MADV,CAEEmI,YAAa,GACbyB,aAEFtS,KAAKyS,oBAAoBH,GAAS,yCAI1BxI,GAAqB,IAAfoG,EAAe5O,UAAA4D,OAAA,QAAAsG,IAAAlK,UAAA,IAAAA,UAAA,GACzBoR,EAAO,IAAA7Q,OAAOiI,EAAK4F,cAAZ,KAAA7N,OAA6B,EAAIiI,EAAK2F,WAAtC,KAAA5N,OAAoDiI,EAAK0F,UAAzD,KAAA3N,OAAsEiI,EAAKyI,WAA3E,KAAA1Q,OAAyFiI,EAAK0I,cAGxGxS,KAAKU,QAAQC,SAASI,WAAa2R,IAChCxC,EAIFlQ,KAAKU,QAAQwP,QAAQwC,GAHrB1S,KAAKU,QAAQW,KAAKqR,6CAQPnE,EAASG,GAAW,IAAAiE,EAEU3S,KAAK0I,MAA1CqI,EAF2B4B,EAE3B5B,cAAeF,EAFY8B,EAEZ9B,YAAa/G,EAFD6I,EAEC7I,KAC9B8I,IAAoB7B,IAAiBrC,IAAoBqC,EAE/D/Q,KAAKiJ,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GACKE,KAAK0I,MADV,CAEEyF,SAAUI,EACVG,YACAqC,cAAe6B,EACf5I,QAAS,IAAIzI,QAIZmN,GAA6B,KAAhBmC,GACd7Q,KAAKyS,oBAAoB3I,IAIN,IAAlBiH,IAAgD,IAAtB6B,GAC3B5S,KAAK+R,UAAS,4CAIDjI,GAAM,IAAAiF,EAAA/O,KAClB8J,IAAS9J,KAAK0I,MAAMoB,OAGrB9J,KAAKiJ,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GACKE,KAAK0I,MADV,CAEEmI,YAAa,GACb/G,UAIU,OAATA,IAED9J,KAAK6S,YAAY/I,GAGjBtI,WAAW,kBAAMuN,EAAKyC,KAAKsB,QAAQhJ,IAAO,yDAO9C9J,KAAKiJ,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GACKE,KAAK0I,MADV,CAEEyF,SAAUrO,OAAA0O,EAAA,EAAA1O,CAAIE,KAAK0I,MAAMyF,UAAU4E,MAAM,GAAG,kDAQ9C,GAAG/S,KAAK0I,MAAMgG,UAOZ,OANA1O,KAAKiJ,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GACKE,KAAK0I,MADV,CAEEgG,WAAW,KAIN1O,KAAKwR,KAAK9D,yDAKD5D,GAElB,IAAMkJ,EAAQhT,KAAK0I,MAAMyF,SAAS3I,OAAO,SAAA4I,GACvC,OAAOA,EAAQhC,MAAQtC,EAAKyI,aACzBnE,EAAQhC,KAAOtC,EAAKyI,YACrBnE,EAAQ/B,QAAUvC,EAAK0I,gBAIxBQ,EAAM9N,OAAS,GAChBlF,KAAKiT,YACHjT,KAAKkT,kBAAkBF,EAAM,GAAG7G,iDAIpBA,GAChB,IAAI6G,EAAQ,EAOZ,OANAhT,KAAK0I,MAAMyF,SAASpG,QAAQ,SAACqG,EAASvI,GACjCuI,EAAQjC,OAASA,IAClB6G,EAAQnN,KAILmN,+CAIP,OAAOhT,KAAKkT,kBAAmBlT,KAAK0I,MAAMmI,iDAGhChL,GAAO,IAKbqK,EALaiD,EACanT,KAAK0I,MAA3BoB,EADSqJ,EACTrJ,KAAM+G,EADGsC,EACHtC,YACRzC,EAAUpO,KAAK0I,MAAMyF,SAAStI,GAIjCuI,EAAQhC,OAAStC,EAAKyI,YACvBnE,EAAQ/B,SAAWvC,EAAK0I,eACxB1I,EAAKmB,SAASkF,OAAO/B,EAAQhC,OAC7BtC,EAAKoB,WAAWiF,OAAO/B,EAAQ/B,UAGjC6D,EAA0B,KAAhBW,EACVnP,SAASwE,MAAT,GAAArE,OAAoB7B,KAAK6I,aAAzB,MAAAhH,OAA0CuM,EAAQuC,WAClD3Q,KAAKiJ,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GACKE,KAAK0I,MADV,CAEEmI,YAAazC,EAAQjC,KACrBrC,UAEF9J,KAAK6S,YAAY/I,EAAMoG,sCAIvB,IAAM3E,EAAUvL,KAAK2R,qBAClBpG,EAAU,GACXvL,KAAKiT,YAAY1H,EAAU,sCAIV,IAAZ6H,IAAY9R,UAAA4D,OAAA,QAAAsG,IAAAlK,UAAA,KAAAA,UAAA,GACbiK,EAAUvL,KAAK2R,qBAGlBpG,EAAWvL,KAAK0I,MAAMyF,SAASjJ,OAAS,GACxC,SAAUlF,KAAK0I,MAAMyF,SAAS5C,GAC/BvL,KAAKiT,YAAY1H,EAAU,GAIxB6H,IAGGpT,KAAK0I,MAAMqI,gBACb/Q,KAAKgR,oBACLhR,KAAKiJ,SAALnJ,OAAAoJ,EAAA,EAAApJ,CAAA,GACKE,KAAK0I,MADV,CAEEqI,eAAe,wCAQvB,OAAO/Q,KAAK2I,QAAQC,mDAGH/C,EAAOrB,GACxBA,EAAEsD,kBACFtD,EAAE6D,iBACFrI,KAAKiT,YAAYpN,UAvWI3D,aCuFVmR,0LA1EX,IAAMvJ,EAAO,IAAIvI,KACX+R,EAAQ,IAAAzR,OAAOiI,EAAK4F,cAAZ,KAAA7N,OAA6B,EAAIiI,EAAK2F,WAAtC,KAAA5N,OAAoDiI,EAAK0F,UAAzD,QAEd,OACE5M,EAAAC,EAAAlB,cAAC4R,EAAA,EAAD,KACE3Q,EAAAC,EAAAlB,cAAA,OAAKwE,UAAU,OAGbvD,EAAAC,EAAAlB,cAAA,MAAI8B,MAAO,CACPyG,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBsB,cAAe,OACfvE,gBAAiB,UACjBsM,mBAAoB,EACpBlN,OAAQ,IAEV1D,EAAAC,EAAAlB,cAAA,UACEiB,EAAAC,EAAAlB,cAAC8R,EAAA,EAAD,CACEC,GAAG,IACHjQ,MAAO,CACL4C,QAAS,MACTa,gBAAiB,OACjBH,OAAQ,iBACRmD,QAAS,QACTyJ,uBAAwB,SAE1B/Q,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAOiR,IAAWnQ,MAAO,CAAEoQ,YAAa,UAT3D,YAaFjR,EAAAC,EAAAlB,cAAA,UACEiB,EAAAC,EAAAlB,cAAC8R,EAAA,EAAD,CACEC,GAAG,WACHjQ,MAAO,CACL4C,QAAS,MACTa,gBAAiB,OACjBH,OAAQ,iBACRmD,QAAS,QACT4J,wBAAyB,SAE3BlR,EAAAC,EAAAlB,cAACmB,EAAA,EAAD,CAAiBH,KAAOoR,IAAYtQ,MAAO,CAAEoQ,YAAa,UAT5D,gBAgBJjR,EAAAC,EAAAlB,cAAA,UAAQwE,UAAU,cAChBvD,EAAAC,EAAAlB,cAAC/B,EAAA,EAAD,KACEgD,EAAAC,EAAAlB,cAACqS,EAAA,EAAD,KACEpR,EAAAC,EAAAlB,cAACsS,EAAA,EAAD,CACE/H,KAAK,WACLgI,OAAQ,SAAAlS,GAAK,OAAIY,EAAAC,EAAAlB,cAACwS,EAAiBnS,MAErCY,EAAAC,EAAAlB,cAACsS,EAAA,EAAD,CACE/H,KAAK,qBACLgI,OAAQ,SAAAlS,GAAK,OAAIY,EAAAC,EAAAlB,cAACyS,EAAgBpS,MAEpCY,EAAAC,EAAAlB,cAACsS,EAAA,EAAD,CACE/H,KAAK,mCACLgI,OAAQ,SAAAlS,GAAK,OAAIY,EAAAC,EAAAlB,cAACyS,EAAgBpS,MAGpCY,EAAAC,EAAAlB,cAAC0S,EAAA,EAAD,CAAUX,GAAI,CAAE3S,SAAUuS,iBAlExBpR,cCVZoS,EAAcC,QACW,cAA7BC,OAAO7T,SAAS8T,UAEe,UAA7BD,OAAO7T,SAAS8T,UAEhBD,OAAO7T,SAAS8T,SAASrJ,MACvB,2DAsCN,SAASsJ,EAAgBC,EAAOC,GAC9BxP,UAAUyP,cACPC,SAASH,GACT3G,KAAK,SAAA+G,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvM,QACftD,UAAUyP,cAActH,YAI1BpF,QAAQC,IACN,gHAKEwM,GAAUA,EAAOQ,UACnBR,EAAOQ,SAASL,KAMlB5M,QAAQC,IAAI,sCAGRwM,GAAUA,EAAOS,WACnBT,EAAOS,UAAUN,UAO5B7G,MAAM,SAAAlB,GACL7E,QAAQ6E,MAAM,4CAA6CA,KC1FjEsI,IAASpB,OAAOtR,EAAAC,EAAAlB,cAAC4T,EAAD,MAAS7T,SAAS8T,eAAe,SDgB1C,SAAkBZ,GACvB,GAA6C,kBAAmBxP,UAAW,CAGzE,GADkB,IAAIqQ,IAAIC,WAAwBlB,OAAO7T,SAAS2L,MACpDqJ,SAAWnB,OAAO7T,SAASgV,OAIvC,OAGFnB,OAAOoB,iBAAiB,OAAQ,WAC9B,IAAMjB,EAAK,GAAA9S,OAAM6T,WAAN,sBAEPpB,GAgEV,SAAiCK,EAAOC,GAEtCjF,MAAMgF,GACH3G,KAAK,SAAAvB,GAEJ,IAAMoJ,EAAcpJ,EAASqJ,QAAQC,IAAI,gBAEnB,MAApBtJ,EAASuJ,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C7Q,UAAUyP,cAAcqB,MAAMlI,KAAK,SAAA+G,GACjCA,EAAaoB,aAAanI,KAAK,WAC7BwG,OAAO7T,SAASyV,aAKpB1B,EAAgBC,EAAOC,KAG1B1G,MAAM,WACL/F,QAAQC,IACN,mEArFAiO,CAAwB1B,EAAOC,GAI/BxP,UAAUyP,cAAcqB,MAAMlI,KAAK,WACjC7F,QAAQC,IACN,+GAMJsM,EAAgBC,EAAOC,MCvC/BC","file":"static/js/main.4bb80b02.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListener extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n     super();\n\n     const GACode = 'UA-129704402-1';\n     this.loadGoogleTag(GACode);\n     ReactGA.initialize(GACode);\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default GAListener;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faEject,\n  faForward,\n  faFastForward,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Controls extends React.PureComponent {\n\n  // Controls definitions\n  controls = [\n    {\n      icon: <FontAwesomeIcon icon={faFastForward} flip=\"horizontal\" />,\n      text: 'Prev',\n      help: 'Play previous podcast',\n      action: () => this.props.onPlayPrev(),\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n          <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n        </span>\n      ),\n      text: '-10m',\n      help: 'Go backwards 10 minutes',\n      action: () => this.player().currentTime -= 600,\n      keys: [ 'PageUp' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '-60s',\n      help: 'Go backwards 1 minute',\n      action: () => this.player().currentTime -= 60,\n      keys: [ 'ArrowUp' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />,\n      text: '-10s',\n      help: 'Go backwards 10 seconds',\n      action: () => this.player().currentTime -= 10,\n      keys: [ 'ArrowLeft' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faEject} rotation={90} />,\n      text: 'Play/Pause',\n      help: 'Toggle Play/Pause',\n      action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      keys: [ ' ', 'p', 'P' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faForward} />,\n      text: '+10s',\n      help: 'Go forward 10 seconds',\n      action: () => this.player().currentTime += 10,\n      keys: [ 'ArrowRight' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '+60s',\n      help: 'Go forward 1 minute',\n      action: () => this.player().currentTime += 60,\n      keys: [ 'ArrowDown' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={faForward} />\n          <FontAwesomeIcon icon={faForward} />\n        </span>\n      ),\n      text: '+10m',\n      help: 'Go forward 10 minutes',\n      action: () => this.player().currentTime += 600,\n      keys: [ 'PageDown' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faFastForward} />,\n      text: 'Next',\n      help: 'Play next podcast',\n      action: () => this.props.onPlayNext(),\n      keys: [ 'Enter' ],\n    },\n    {\n      help: 'Decrement volume 5%',\n      action: () => this.incrementVolume(-.05),\n      keys: [\n        '/',\n        {key: 'ArrowDown', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Increment volume 5%',\n      action: () => this.incrementVolume(.05),\n      keys: [\n        '*',\n        {key: 'ArrowUp', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Toggle mute status',\n      action: () => this.player().muted = !this.player().muted,\n      keys: [ 'm', 'M' ],\n    },\n  ];\n\n  constructor(props) {\n    super();\n\n    // Add extra controls\n    if ( props.extraControls.length ) {\n      this.controls = this.controls.concat(props.extraControls);\n    }\n  }\n\n  keyHandlerFocus = () => {};\n  _keyHandlerFocus = (e, force) => {\n    let doFocus = true;\n\n    // Allow datepicker to get focus\n    if ( e && e.relatedTarget &&\n          this.props.allowFocus(e.relatedTarget) ) {\n      doFocus = false;\n    }\n\n    if(doFocus || force) {\n      this.timer = setTimeout(() => this._keyHandler.focus(), 100);\n    }\n  };\n\n  componentDidMount() {\n    // Disable key handler on mobile devices (enable on the rest)\n    if ( !(/Mobi|Android/i.test(navigator.userAgent)) ) {\n       this.keyHandlerFocus = this._keyHandlerFocus;\n       this.keyHandlerFocus();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    return (\n      <div>\n        { this.controls\n            .filter( control => 'icon' in control && 'text' in control)\n            .filter( control => !this.props.hideButtons.includes(control.text) )\n            .map((control, index) => {\n          return (\n            <button\n              key={ index }\n              onClick={ control.action.bind(this) }\n              onMouseUp={ (e) => this.keyHandlerFocus(e, true) }\n              aria-label={ control.help }\n              title={ control.help }\n              className='rac1-controls-button'\n              style={{\n                borderRadius: '1em',\n                padding: '1em',\n                margin: '1em',\n              }}\n            >\n              <div style={{\n                fontSize: 'calc(1em + 2.5vmin)',\n                fontWeight: 'bold',\n                minWidth: '1.5em',\n              }} >\n                { control.icon instanceof Function ? control.icon() : control.icon }\n              </div>\n              <span style={{\n                fontSize: 'calc(8px + 1vmin)',\n                color: '#333'\n              }}>\n                { control.text instanceof Function ? control.text() : control.text }\n              </span>\n            </button>\n          )\n        })}\n        <input\n          name='player-key-handler'\n          style={{ // Almost invisible ;)\n            width: '1px',\n            height: '1px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            bottom: 0,\n            right: 0,\n            position: 'fixed',\n            backgroundColor: 'transparent',\n            color: 'transparent',\n            cursor: 'default',\n          }}\n          ref={ (element) => { this._keyHandler = element } }\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n          aria-label=\"Key input handler\"\n        />\n      </div>\n    );\n  }\n\n  player = () => this.props.getPlayer();\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.props;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    // Prevent updating volume if limit reached\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = false;\n\n    // Handle controls keys\n    this.controls.forEach( (control) => {\n      (control.keys||[]).forEach( (key_orig) => {\n        let key = typeof key_orig === 'string' ? {key: key_orig} : key_orig;\n        if(e.key === key.key &&\n          ['shiftKey', 'altKey', 'ctrlKey', 'metaKey']\n            .every( (mod) => !!e[mod] === !!key[mod] )) {\n          console.log(control.help);\n          stopPropagation = true;\n          control.action();\n        }\n      });\n    });\n\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:   (e) => {},\n  onPlayPrev:    (e) => {},\n  onPlayNext:    (e) => {},\n  allowFocus:    (e) => {},\n  extraControls: [],\n  hideButtons:   [],\n  volume:        1,\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n  hideButtons: PropTypes.arrayOf(\n    PropTypes.oneOf(\n      ['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s', 'Play/Pause']\n  )).isRequired,\n  extraControls: PropTypes.arrayOf( PropTypes.shape({\n    help: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    icon: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    keys: PropTypes.arrayOf( PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        shiftKey: PropTypes.bool,\n        altKey: PropTypes.bool,\n        ctrlKey: PropTypes.bool,\n        metaKey: PropTypes.bool,\n      }),\n    ])),\n  })),\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\n\nclass Rac1Directe extends Component {\n  // Initial state\n  state = {\n    volume: 1,\n  };\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n  }\n\n  componentDidMount() {\n    this.initialTitle = document.title;\n    document.title = `${this.initialTitle} - Directe`;\n  }\n\n  componentWillUnmount() {\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { volume } = this.state;\n    const currentPath = 'http://rac1.radiocat.net/;*.nsv';\n    const autoplay = true;\n    const title = 'Rac1 en Directe';\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n          hideButtons={['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s']}\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          volume={ volume }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Rac1Directe;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = (props) => {\n  const text = 'Reload';\n  return (\n    <button\n      { ...props }\n      aria-label={ text }\n      style={{\n        borderRadius: '.5em',\n        padding: '.25em',\n        margin: '0 0 0 1em',\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#333'\n      }}>\n        { text }\n      </span>\n    </button>\n  )\n};\n\nclass Playlist extends React.PureComponent {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: '#333',\n        backgroundColor: 'white',\n        padding: '2em',\n        borderRadius: '1em',\n        margin: '1em',\n        textAlign: 'left',\n        position: 'relative',\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if(e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/)) {\n      focus = false;\n    }\n\n    if(focus) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends React.PureComponent {\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: 'none',\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left'\n        }}>\n          { children.map( (child, index) =>\n            <li\n              key={ child.key }\n              style={{\n                position: 'relative',\n                marginLeft: '2.5em',\n                textIndent: '-1.5em',\n                padding: '1pt 0',\n              }}\n            >\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={ faPlay }\n                  style={{\n                    position: 'absolute',\n                    left: '-2.75em',\n                    padding: '1pt 0',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends React.PureComponent {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","// Raises exception on response error\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n// Catches the fetch error, original or 'self-raised'\nfunction catchFetchErrors(err) {\n  if (err.name === 'AbortError') {\n    console.log(err.message);\n  }\n  else {\n    console.error(err);\n  }\n}\n\n// Cached/compiled regexps for parsing HTML\nconst dataAttrsFind   = / class=\"(audioteca-item|pagination-link)\" /;\nconst dataAttrsClean  = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\nclass Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  // Abort controller\n  controller = new AbortController();\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n\n    this.updateList();\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  setDate(date) {\n    if(this.date !== date) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if(pageNumber === 0) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n      // Download podcast data if needed\n      .then(this.getPodcasts.bind(this, pageNumber))\n      // Trigger event for list updated\n      .then(this.handleListUpdate.bind(this, pageNumber))\n      .catch(catchFetchErrors)\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map(podcast => {\n        // If it's a podcast and is not in the cache\n        if(podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData)) {\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n            .catch(catchFetchErrors)\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [...this._previous_uuids.filter(w => w.uuid !== '...')];\n    let completed = true;\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if(pageUuids === undefined) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n        // Add this page's podcasts to the list\n        pageUuids\n          // filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map(podcast => this._podcastsData[podcast.uuid] || podcast );\n\n    // Save complete list on finish\n    if(completed) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every(podcast => 'path' in podcast);\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach((podcast,index) => {\n      if(podcast.uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => { return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${date}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n        signal: this.controller.signal,\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter(line => dataAttrsFind.test(line))\n      .map(v => v.replace(dataAttrsClean, '$1=$2'))\n      .map(line => line.split('='))\n      .filter(v => searchData.includes(v[0]));\n\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if(uuid in this._podcastsData) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(\n      `https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`,\n      { signal: this.controller.signal }\n    )\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n        // Add some data to the podcast\n        podcast.uuid = uuid;\n        podcast.hour   = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute = Number(podcast.audio.time.split(':')[1]);\n        podcast.title = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\n\nclass Rac1ByDate extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour||0,\n        date.minute||0,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      completed: false,\n      waitingUpdate: false,\n    };\n\n    this.extraControls = [\n      {\n        help: 'Reload playlist',\n        action: this.handleClickReload.bind(this),\n        keys: [ 'r', 'R' ],\n      },\n    ];\n\n    // Debugging on development\n    if(process.env.NODE_ENV === 'development') {\n\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = (props) => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      }\n\n      // Add a button to remove the last podcast in the list\n      this.extraControls.push({\n        icon: 'RL',\n        text: 'Remove last',\n        help: 'Remove last podcast from playlist',\n        action: this.handlePodcastsLastRemove.bind(this),\n      });\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n\n    // Abort backend fetches\n    this.rac1.abort();\n\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { podcasts, volume, completed, date, maxDate } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          allowFocus={ (el) => el.className.match( /date-?picker/ ) }\n          onPlayNext={ this.playNext.bind(this) }\n          onPlayPrev={ this.playPrev.bind(this) }\n          onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n          ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          extraControls={ this.extraControls }\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          onEnded={ this.playNext.bind(this) }\n          volume={ volume }\n        />\n        <Playlist\n          date={ date }\n          minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n          maxDate={ maxDate }\n          completedDownload={ completed }\n          onClickReload={ this.handleClickReload.bind(this) }\n          onDateBlur={ () => this.keyHandlerFocus() }\n          onDateChange={ this.handleDateChange.bind(this) }\n        >\n          <PodcastsList\n            current={ current }\n          >\n          { podcasts.map((podcast, index) =>\n            <Podcast\n              key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n              { ...podcast }\n              onClick={ this.handlePodcastClick.bind(this, index) }\n            />\n          )}\n          </PodcastsList>\n        </Playlist>\n      </React.Fragment>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if(action !== 'POP') {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if(date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if(this.history.location.pathname !== newPath) {\n      if(!replace) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if(completed && currentUUID === '') {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if(waitingUpdate === true && waitingUpdateNext === false) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if(date !== this.state.date) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if(date !== null) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n\n    // If there is not already an incomplete update\n    if(this.state.completed) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter(podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if(found.length > 0) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach((podcast, index) => {\n      if(podcast.uuid === uuid) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if(podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes()) {\n      date.setHours(Number(podcast.hour));\n      date.setMinutes(Number(podcast.minute));\n    }\n\n    replace = currentUUID === '';\n    document.title = `${this.initialTitle}: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if(current > 0) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if(current < (this.state.podcasts.length - 1) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if(retry) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if(!this.state.waitingUpdate) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nexport default Rac1ByDate;\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  Link,\n} from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faBroadcastTower as faDirecte,\n  faCalendarAlt as faByDate,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport GAListener from './GAListener';\n\nimport Rac1Directe from './Rac1Directe';\nimport Rac1ByDate from './Rac1ByDate';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n\n    return (\n      <Router>\n        <div className=\"App\">\n\n          {/* Menu */}\n          <ul style={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              listStyleType: 'none',\n              backgroundColor: '#282c34',\n              paddingInlineStart: 0,\n              margin: 0,\n          }}>\n            <li>\n              <Link\n                to=\"/\"\n                style={{\n                  padding: '1em',\n                  backgroundColor: '#ddd',\n                  border: '1px solid #777',\n                  display: 'block',\n                  borderBottomLeftRadius: '.5em',\n                }}>\n                <FontAwesomeIcon icon={ faByDate } style={{ marginRight: '.5em' }} />\n                By date\n              </Link>\n            </li>\n            <li>\n              <Link\n                to=\"/directe\"\n                style={{\n                  padding: '1em',\n                  backgroundColor: '#ddd',\n                  border: '1px solid #777',\n                  display: 'block',\n                  borderBottomRightRadius: '.5em',\n                }}>\n                <FontAwesomeIcon icon={ faDirecte } style={{ marginRight: '.5em' }} />\n                En directe\n              </Link>\n            </li>\n          </ul>\n\n          {/* App Route */}\n          <header className=\"App-header\">\n            <GAListener>\n              <Switch>\n                <Route\n                  path=\"/directe\"\n                  render={props => <Rac1Directe { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day\"\n                  render={props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour/:minute\"\n                  render={props => <Rac1ByDate { ...props } /> } />\n\n                {/* Set default date to today */}\n                <Redirect to={{ pathname: todayStr }} />\n              </Switch>\n            </GAListener>\n          </header>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}