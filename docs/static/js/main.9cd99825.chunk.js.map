{"version":3,"sources":["AppMenu.jsx","Button.jsx","Controls.jsx","Rac1Directe.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","Rac1ByDate.jsx","App.js","serviceWorker.js","index.js","GAListener.jsx"],"names":["AppMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","_this$props","props","newServiceWorkerDetected","children","react_default","a","createElement","style","padding","background","backgroundSize","backgroundRepeat","backgroundPosition","Link","className","onClick","handleClick","bind","to","index_es","icon","faByDate","marginRight","faDirecte","href","color","title","handleClickUpdate","faUpgrade","_this2","extraClass","react_responsive_default","minWidth","matches","BurgerMenu","pageWrapId","outerContainerId","onStateChange","handleMenuStateChange","disableCloseOnEsc","renderLinks","setState","e","preventDefault","onLoadNewServiceWorkerAccept","React","Component","defaultProps","Button","text","help","action","restProps","objectWithoutProperties","assign","aria-label","borderRadius","margin","fontSize","fontWeight","Function","PureComponent","ButtonsGroup","_this$props2","buttons","keyHandlerFocus","Fragment","map","control","index","Button_Button","key","onMouseUp","force","Controls","controls","faFastForward","flip","onPlayPrev","group","faForward","player","currentTime","keys","position","left","isPlaying","faPause","faPlay","paused","play","pause","onPlayNext","incrementVolume","shiftKey","muted","_keyHandlerFocus","doFocus","relatedTarget","allowFocus","timer","setTimeout","_keyHandler","focus","getPlayer","extraControls","length","concat","test","navigator","userAgent","clearTimeout","hideButtons","filter","includes","showAdvanced","reduce","res","filterButtonsGroup","Button_ButtonsGroup","handleShowAdvancedChange","faEyeSlash","faEye","name","width","height","border","bottom","right","backgroundColor","cursor","ref","element","onKeyUp","handleKey","onBlur","volume","onSetVolume","increment","volumeNew","setVolume","stopPropagation","forEach","key_orig","every","mod","console","log","event","onShowAdvancedChange","Rac1Directe","history","_player","audioEl","initialTitle","document","_this$state","src_Controls","v","objectSpread","bundle_default","src","autoPlay","controlsList","preload","onPlay","handlePlayStatusChange","onPause","ReloadButton","marginBottom","faRefresh","Playlist","completedDownload","date","minDate","maxDate","textAlign","display","justifyContent","alignItems","entry_default","onChange","handleDateChange","handleDateBlur","required","value","clearIcon","calendarIcon","faCalendar","Playlist_ReloadButton","onClickReload","disabled","setHours","setMinutes","onDateChange","match","onDateBlur","Date","PodcastsList","current","undefined","listStyleType","marginLeft","paddingLeft","columnCount","Math","floor","child","textIndent","Podcast","num","path","uuid","hour","minute","textDecoration","Rac1","_podcastsData","_pages_uuids","_previous_uuids","controller","AbortController","dataAttrsFind","dataAttrsClean","onListUpdate","setDate","abort","response","ok","Error","statusText","err","message","error","updateList","pageNumber","arguments","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","catch","catchFetchErrors","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","toConsumableArray","w","completed","dateToString","d","getFullYear","getMonth","getDate","filterByDates","d1","d2","page","pageUuids","push","podcastPage","allCompleted","podcastNew","_this3","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","next","getTime","dateNext","fetch","credentials","signal","handleFetchErrors","_this5","searchData","data","split","line","replace","Number","_this6","Promise","resolve","json","dateTime","startsWith","audio","time","appTabletTitle","titleFull","Rac1ByDate","currentUUID","getDateFromParams","waitingUpdate","showAdvancedControls","handleClickReload","assertThisInitialized","params","year","month","day","unlisten","listen","handleHistoryChange","rac1","dateText","findCurrentPodcast","autoplay","currentPath","el","playNext","playPrev","show","onEnded","playlist","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","flexDirection","location","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","pathname","_this$state2","waitingUpdateNext","historyPush","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","App","registration","addEventListener","handleNewServiceWorker","removeEventListener","detail","todayStr","HashRouter","id","src_AppMenu_0","handleLoadNewServiceWorkerAccept","GAListener","Switch","Route","render","src_Rac1Directe","src_Rac1ByDate","Redirect","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","ReactDOM","src_App_0","preventDevToolsReloadLoop","waiting","reload","postMessage","getElementById","URL","process","origin","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","CustomEvent","dispatchEvent","GAListenerProd","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","loadGoogleTag","ReactGA","initialize","sendPageView","context","router","set","pageview","GACode","global","dataLayer","gtag","scriptTag","body","appendChild","contextTypes","PropTypes","object","dnt","doNotTrack","msDoNotTrack","react__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"static/js/main.9cd99825.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faBroadcastTower as faDirecte,\n  faCalendarAlt as faByDate,\n  faArrowAltCircleUp as faUpgrade,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport MediaQuery from 'react-responsive';\nimport {\n  slide as SmallMenu,\n  scaleRotate as BigMenu,\n} from 'react-burger-menu'\n\nimport './AppMenu.css';\n\nclass AppMenu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  renderLinks() {\n    const { newServiceWorkerDetected, children } = this.props;\n\n    return (\n      <div\n        style={{\n          padding: '3em 1em 1em',\n          background: 'url(logo-rac1.png)',\n          backgroundSize: 50,\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center .5em',\n        }}>\n        <Link className='bm-item' onClick={ this.handleClick.bind(this) } to=\"/\">\n          <FontAwesomeIcon icon={ faByDate } style={{ marginRight: '.5em' }} />\n          <span>By date</span>\n        </Link>\n        <Link className='bm-item' onClick={ this.handleClick.bind(this) } to=\"/directe\" >\n          <FontAwesomeIcon icon={ faDirecte } style={{ marginRight: '.5em' }} />\n          <span>En directe</span>\n        </Link>\n        { newServiceWorkerDetected ? (\n            <a\n              href='/'\n              className='bm-item'\n              style={{ color: 'green' }}\n              title=\"New version available!\"\n              onClick={ this.handleClickUpdate.bind(this) }\n              >\n              <FontAwesomeIcon icon={ faUpgrade } style={{ marginRight: '.5em' }} />\n              <span>Update!</span>\n            </a>\n          ) : null\n        }\n        { children }\n      </div>\n    )\n  }\n\n  render() {\n    const { newServiceWorkerDetected } = this.props;\n    const { isOpen } = this.state;\n    const extraClass = newServiceWorkerDetected ? ' news' : '';\n\n    return (\n      <MediaQuery minWidth={700}>\n        { matches => {\n          if ( matches ) {\n            return (\n              <div className={ 'menu-big' + extraClass }>\n                <BigMenu\n                  pageWrapId='page-wrap'\n                  outerContainerId='outer-container'\n                  isOpen={ isOpen }\n                  onStateChange={ state => this.handleMenuStateChange(state.isOpen) }\n                  disableCloseOnEsc\n                >\n                  { this.renderLinks() }\n                </BigMenu>\n              </div>\n            );\n          } else {\n            return (\n              <div className={ 'menu-small' + extraClass }>\n                <SmallMenu\n                  pageWrapId='page-wrap'\n                  outerContainerId='outer-container'\n                  disableCloseOnEsc\n                >\n                  { this.renderLinks() }\n                </SmallMenu>\n              </div>\n            );\n          }\n        }}\n      </MediaQuery>\n    )\n  }\n\n  handleMenuStateChange(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  handleClick(e) {\n    this.handleMenuStateChange(false);\n  }\n\n  handleClickUpdate(e) {\n    e.preventDefault();\n    this.handleMenuStateChange(false);\n    this.props.onLoadNewServiceWorkerAccept();\n  }\n}\n\nAppMenu.defaultProps = {\n  onLoadNewServiceWorkerAccept: () => {},\n  newServiceWorkerDetected: false,\n};\n\nAppMenu.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n  newServiceWorkerDetected: PropTypes.bool.isRequired,\n};\n\nexport default AppMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends React.PureComponent {\n  render() {\n    const { text, help, icon, action, ...restProps } = this.props;\n    return (\n      <button\n        onClick={ action }\n        aria-label={ help }\n        title={ help }\n        className='rac1-controls-button'\n        style={{\n          borderRadius: '1em',\n          padding: '.7em',\n          margin: '1em',\n        }}\n        { ...restProps }\n      >\n        <div style={{\n          fontSize: 'calc(1em + 2.5vmin)',\n          fontWeight: 'bold',\n          minWidth: '1.5em',\n        }} >\n          { icon instanceof Function ? icon() : icon }\n        </div>\n        <span style={{\n          fontSize: 'calc(8px + 1vmin)',\n          color: '#333'\n        }}>\n          { text instanceof Function ? text() : text }\n        </span>\n      </button>\n    )\n  }\n};\n\nButton.defaultProps = {\n};\n\nButton.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node,\n  ]).isRequired,\n  icon: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node,\n  ]).isRequired,\n  action: PropTypes.func.isRequired,\n  help: PropTypes.string.isRequired,\n};\n\nclass ButtonsGroup extends React.PureComponent {\n  render() {\n    const { buttons, keyHandlerFocus } = this.props;\n    return (\n      <React.Fragment>\n        { buttons.map( (control, index) => {\n              return (\n                <Button\n                  key={ index }\n                  onMouseUp={ e => keyHandlerFocus(e, true) }\n                  action={ control.action.bind(this) }\n                  help={ control.help }\n                  text={ control.text }\n                  icon={ control.icon }\n                />\n              )\n            })\n        }\n      </React.Fragment>\n    )\n  }\n}\n\nButtonsGroup.defaultProps = {\n  keyHandlerFocus: (e, force) => {},\n};\n\nButtonsGroup.propTypes = {\n  keyHandlerFocus: PropTypes.func.isRequired,\n};\n\nexport { Button, ButtonsGroup };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faPlay,\n  faPause,\n  faForward,\n  faFastForward,\n  faEye,\n  faEyeSlash,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { Button, ButtonsGroup } from './Button';\n\nclass Controls extends React.Component {\n\n  // Controls definitions\n  controls = [\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } flip=\"horizontal\" />,\n      text: 'Prev',\n      help: 'Play previous podcast',\n      action: () => this.props.onPlayPrev(),\n      group: 'basic',\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n        </span>\n      ),\n      text: '-10m',\n      help: 'Go backwards 10 minutes',\n      action: () => this.player().currentTime -= 600,\n      keys: [ 'PageUp' ],\n      group: 'advanced',\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '-60s',\n      help: 'Go backwards 1 minute',\n      action: () => this.player().currentTime -= 60,\n      keys: [ 'ArrowUp' ],\n      group: 'advanced',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />,\n      text: '-10s',\n      help: 'Go backwards 10 seconds',\n      action: () => this.player().currentTime -= 10,\n      keys: [ 'ArrowLeft' ],\n      group: 'advanced',\n    },\n    {\n      icon: () => this.props.isPlaying ?\n         <FontAwesomeIcon icon={ faPause } /> :\n         <FontAwesomeIcon icon={ faPlay } /> ,\n      text: () => this.props.isPlaying ? 'Pause' : 'Play',\n      help: 'Toggle Play/Pause',\n      action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      keys: [ ' ', 'p', 'P' ],\n      group: 'basic',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } />,\n      text: '+10s',\n      help: 'Go forward 10 seconds',\n      action: () => this.player().currentTime += 10,\n      keys: [ 'ArrowRight' ],\n      group: 'advanced',\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '+60s',\n      help: 'Go forward 1 minute',\n      action: () => this.player().currentTime += 60,\n      keys: [ 'ArrowDown' ],\n      group: 'advanced',\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={ faForward } />\n          <FontAwesomeIcon icon={ faForward } />\n        </span>\n      ),\n      text: '+10m',\n      help: 'Go forward 10 minutes',\n      action: () => this.player().currentTime += 600,\n      keys: [ 'PageDown' ],\n      group: 'advanced',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } />,\n      text: 'Next',\n      help: 'Play next podcast',\n      action: () => this.props.onPlayNext(),\n      keys: [ 'Enter' ],\n      group: 'basic',\n    },\n    {\n      help: 'Decrement volume 5%',\n      action: () => this.incrementVolume(-.05),\n      keys: [\n        '/',\n        {key: 'ArrowDown', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Increment volume 5%',\n      action: () => this.incrementVolume(.05),\n      keys: [\n        '*',\n        {key: 'ArrowUp', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Toggle mute status',\n      action: () => this.player().muted = !this.player().muted,\n      keys: [ 'm', 'M' ],\n    },\n  ];\n\n  constructor(props) {\n    super();\n\n    // Add extra controls\n    if ( props.extraControls.length ) {\n      this.controls = this.controls.concat( props.extraControls );\n    }\n  }\n\n  keyHandlerFocus = () => {};\n  _keyHandlerFocus = (e, force) => {\n    let doFocus = true;\n\n    // Allow datepicker to get focus\n    if ( e && e.relatedTarget &&\n          this.props.allowFocus( e.relatedTarget ) ) {\n      doFocus = false;\n    }\n\n    if ( doFocus || force ) {\n      this.timer = setTimeout(() => this._keyHandler.focus(), 100);\n    }\n  };\n\n  componentDidMount() {\n    // Disable key handler on mobile devices (enable on the rest)\n    if ( !(/Mobi|Android/i.test(navigator.userAgent)) ) {\n       this.keyHandlerFocus = this._keyHandlerFocus;\n       this.keyHandlerFocus();\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  filterButtonsGroup(group) {\n    const { hideButtons } = this.props;\n\n    return this.controls\n      .filter( control => 'icon' in control && 'text' in control )\n      .filter( control => !hideButtons.includes(control.text) )\n      .filter( control => control.group === group )\n  }\n\n  render() {\n    const { showAdvanced } = this.props;\n    const buttons = ['basic','advanced'].reduce( (res, group) => {\n      res[group] = this.filterButtonsGroup(group);\n      return res;\n    }, {});\n\n    return (\n      <div>\n        { showAdvanced && buttons['advanced'].length ? (\n          <div>\n            <ButtonsGroup\n              buttons={ buttons['advanced']}\n              keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n            />\n          </div>\n        ) : null }\n        { buttons['basic'].length ? (\n          <div>\n            <ButtonsGroup\n              buttons={ buttons['basic']}\n              keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n            />\n            { buttons['advanced'].length ? (\n              <Button\n                onMouseUp={ e => this.keyHandlerFocus(e, true) }\n                action={ this.handleShowAdvancedChange.bind(this, !showAdvanced) }\n                help={ `Show ${ showAdvanced ? 'less' : 'more' } controls` }\n                text={ showAdvanced ? 'Less' : 'More' }\n                icon={ <FontAwesomeIcon icon={ showAdvanced ? faEyeSlash : faEye } /> }\n              />\n            ) : null}\n          </div>\n        ) : null }\n        <input\n          name='player-key-handler'\n          style={{ // Almost invisible ;)\n            width: '1px',\n            height: '1px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            bottom: 0,\n            right: 0,\n            position: 'fixed',\n            backgroundColor: 'transparent',\n            color: 'transparent',\n            cursor: 'default',\n          }}\n          ref={ element => { this._keyHandler = element } }\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n          aria-label=\"Key input handler\"\n        />\n      </div>\n    );\n  }\n\n  player = () => this.props.getPlayer();\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.props;\n    let volumeNew = volume;\n\n    // Increment\n    if ( increment > 0 && volume < 1 ) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if ( increment < 0 && volume > 0 ) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    // Prevent updating volume if limit reached\n    if ( volumeNew !== volume ) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = false;\n\n    // Handle controls keys\n    this.controls.forEach( control => {\n      (control.keys||[]).forEach( key_orig => {\n\n        // Understand plain string or custom key object\n        let key = typeof key_orig === 'string' ? {key: key_orig} : key_orig;\n\n        // If it's exact key match\n        if(e.key === key.key &&\n          ['shiftKey', 'altKey', 'ctrlKey', 'metaKey']\n            .every( (mod) => !!e[mod] === !!key[mod] )) {\n          console.log(control.help);\n          stopPropagation = true;\n          control.action();\n        }\n      });\n    });\n\n    if ( stopPropagation ) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  handleShowAdvancedChange(showAdvanced, event) {\n    event.preventDefault();\n    this.props.onShowAdvancedChange(showAdvanced);\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:   e => {},\n  onPlayPrev:    e => {},\n  onPlayNext:    e => {},\n  allowFocus:    e => {},\n  onShowAdvancedChange: e => {},\n  extraControls: [],\n  hideButtons:   [],\n  volume:        1,\n  isPlaying:     false,\n  showAdvanced:  false,\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  showAdvanced: PropTypes.bool.isRequired,\n  onShowAdvancedChange: PropTypes.func.isRequired,\n  hideButtons: PropTypes.arrayOf(\n    PropTypes.oneOf(\n      ['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s', 'Play/Pause']\n  )).isRequired,\n  extraControls: PropTypes.arrayOf( PropTypes.shape({\n    help: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    icon: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    keys: PropTypes.arrayOf( PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        shiftKey: PropTypes.bool,\n        altKey: PropTypes.bool,\n        ctrlKey: PropTypes.bool,\n        metaKey: PropTypes.bool,\n      }),\n    ])),\n  })),\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\n\nclass Rac1Directe extends Component {\n  // Initial state\n  state = {\n    volume: 1,\n  };\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n\n    // Initial state\n    this.state = {\n      volume: 1,\n      isPlaying: false,\n    };\n  }\n\n  componentDidMount() {\n    this.initialTitle = document.title;\n    document.title = `${this.initialTitle} - Directe`;\n  }\n\n  componentWillUnmount() {\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { volume, isPlaying } = this.state;\n    const currentPath = 'http://rac1.radiocat.net/;*.nsv';\n    const autoplay = true;\n    const title = 'Rac1 en Directe';\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          isPlaying={ isPlaying }\n          onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n          hideButtons={['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s']}\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          title={ title }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          volume={ volume }\n          onPlay={ this.handlePlayStatusChange.bind(this, true) }\n          onPause={ this.handlePlayStatusChange.bind(this, false) }\n        />\n      </React.Fragment>\n    );\n  }\n\n  handlePlayStatusChange(isPlaying) {\n    this.setState({\n      ...this.state,\n      isPlaying,\n    });\n  }\n}\n\nexport default Rac1Directe;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = (props) => {\n  const text = 'Reload';\n  return (\n    <button\n      { ...props }\n      aria-label={ text }\n      style={{\n        borderRadius: '.5em',\n        padding: '.25em',\n        margin: '0 0 0 1em',\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#333'\n      }}>\n        { text }\n      </span>\n    </button>\n  )\n};\n\nclass Playlist extends React.PureComponent {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: '#333',\n        backgroundColor: 'white',\n        padding: '2em',\n        borderRadius: '1em',\n        margin: '1em',\n        textAlign: 'left',\n        position: 'relative',\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if ( e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/) ) {\n      focus = false;\n    }\n\n    if ( focus ) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends React.PureComponent {\n\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: 'none',\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left',\n          columnCount: Math.floor(children.length / 10) || 1,\n        }}>\n          { children.map( (child, index) =>\n            <li\n              key={ child.key }\n              style={{\n                position: 'relative',\n                marginLeft: '2.5em',\n                textIndent: '-1.5em',\n                padding: '1pt 0',\n              }}\n            >\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={ faPlay }\n                  style={{\n                    position: 'absolute',\n                    left: '-2.75em',\n                    padding: '1pt 0',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends React.PureComponent {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","class Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  // Abort controller\n  controller = new AbortController();\n\n  constructor(props) {\n    const noop = () => {};\n    this.onListUpdate = props.onListUpdate || noop;\n    this.setDate(props.date);\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  // Raises exception on response error\n  handleFetchErrors(response) {\n    if ( !response.ok ) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  // Catches the fetch error, original or 'self-raised'\n  catchFetchErrors(err) {\n    if ( err.name === 'AbortError' ) {\n      console.log(err.message);\n    }\n    else {\n      console.error(err);\n    }\n  }\n\n  // Cached/compiled regexps for parsing HTML\n  dataAttrsFind  = / class=\"(audioteca-item|pagination-link)\" /;\n  dataAttrsClean = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\n  setDate(date) {\n    if ( this.date !== date ) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if ( pageNumber === 0 ) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n\n      // Download podcast data if needed\n      .then( this.getPodcasts.bind(this, pageNumber) )\n\n      // Trigger event for list updated\n      .then( this.handleListUpdate.bind(this, pageNumber) )\n\n      // Catch Exceptions\n      .catch( this.catchFetchErrors )\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map( podcast => {\n\n        // If it's a podcast and is not in the cache\n        if ( podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData) ) {\n\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n            .catch( this.catchFetchErrors )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [ ...this._previous_uuids.filter(w => w.uuid !== '...') ];\n    let completed = true;\n\n    // Helper functions\n    const dateToString = d => `${d.getFullYear()}/${d.getMonth()+1}/${d.getDate()}`;\n    const compareDates = (d1, d2) => dateToString(d1) === dateToString(d2);\n    const filterByDates = podcast => {\n      return !(\"date\" in podcast) || compareDates( podcast.date, this.date )\n    };\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if ( pageUuids === undefined ) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n\n        // Add this page's podcasts to the list\n        pageUuids\n\n          // Filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n\n          // Filter out podcasts from other dates\n          .filter( filterByDates )\n\n          // Add remaining podcasts to the list\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map( podcast => this._podcastsData[podcast.uuid] || podcast )\n          // Filter out podcasts from other dates\n          .filter( filterByDates );\n\n    // Save complete list on finish\n    if ( completed ) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every( podcast => 'path' in podcast );\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach( (podcast,index) => {\n      if ( podcast.uuid === podcastNew.uuid ) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then( dataRaw => {\n\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if ( pageNumber === 0 ) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        // Save in reversed order and along with the page number\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map( uuid => { return {uuid, page: pageNumber} } );\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    // Set next day's date and string\n    let next = new Date(this.date.getTime());\n    next.setDate(next.getDate() + 1);\n    let dateNext = '';\n\n    // Don't use next day date if it's 2018's last day\n    if ( !(next.getFullYear() === 2019 && next.getMonth() === 0 && next.getDate() === 1) ) {\n      dateNext =\n        pad2( next.getDate() ) + '/' +\n        pad2( 1 + next.getMonth() ) + '/' +\n        next.getFullYear();\n    }\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + \"text=&programId=&sectionId=HOUR&\"\n      + `from=${date}&to=${dateNext}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n        signal: this.controller.signal,\n      })\n      .then( this.handleFetchErrors )\n      .then( response => response.text() )\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter( line => this.dataAttrsFind.test(line) )\n      .map( v => v.replace(this.dataAttrsClean, '$1=$2') )\n      .map( line => line.split('=') )\n      .filter( v => searchData.includes(v[0]) );\n\n    return {\n      uuidsPage: data\n        .filter( v => v[0] === 'data-audio-id' )\n        .map( v => v[1] ),\n      pages: data\n        .filter( v => v[0] === 'data-audioteca-search-page' )\n        .map( v => Number(v[1]) ),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if ( uuid in this._podcastsData ) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(\n      `https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`,\n      { signal: this.controller.signal }\n    )\n      .then( this.handleFetchErrors )\n      .then( data => data.json() )\n      .then( podcast => {\n\n        // Fix server bug on year's last day, in which gives dates in the future\n        if ( podcast.dateTime.startsWith(\n          `${this.date.getFullYear() + 1}-${this.date.getMonth() + 1}`\n        )) {\n          podcast.dateTime = podcast.dateTime\n            .replace(`${this.date.getFullYear() + 1}`, `${this.date.getFullYear()}`);\n          console.log(\"Podcast date in future. Fixing to: \" + podcast.dateTime);\n        }\n\n        // Add some data to the podcast\n        podcast.uuid      = uuid;\n        podcast.date      = new Date(podcast.dateTime);\n        podcast.hour      = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute    = Number(podcast.audio.time.split(':')[1]);\n        podcast.title     = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\n\nimport ReactAudioPlayer from 'react-audio-player';\nimport MediaQuery from 'react-responsive';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\n\nclass Rac1ByDate extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour||0,\n        date.minute||0,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      isPlaying: false,\n      completed: false,\n      waitingUpdate: false,\n      showAdvancedControls: false,\n    };\n\n    this.extraControls = [\n      {\n        help: 'Reload playlist',\n        action: this.handleClickReload.bind(this),\n        keys: [ 'r', 'R' ],\n      },\n    ];\n\n    // Debugging on development\n    if ( process.env.NODE_ENV === 'development' ) {\n\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = props => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      };\n\n      // Add a button to remove the last podcast in the list\n      this.extraControls.push({\n        icon: 'RL',\n        text: 'Remove last',\n        help: 'Remove last podcast from playlist',\n        action: this.handlePodcastsLastRemove.bind(this),\n        group: 'advanced',\n      });\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n\n    // Abort backend fetches\n    this.rac1.abort();\n\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const {\n      podcasts,\n      volume,\n      completed,\n      date,\n      maxDate,\n      isPlaying,\n      showAdvancedControls,\n    } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    const controls = <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          allowFocus={ (el) => el.className.match( /date-?picker/ ) }\n          onPlayNext={ this.playNext.bind(this) }\n          onPlayPrev={ this.playPrev.bind(this) }\n          onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n          showAdvanced={ showAdvancedControls }\n          onShowAdvancedChange={ show => this.setState({ ...this.state, showAdvancedControls: show }) }\n          isPlaying={ isPlaying }\n          ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          extraControls={ this.extraControls }\n        />;\n    const player = <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          title={ title }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          onEnded={ this.playNext.bind(this) }\n          volume={ volume }\n          onPlay={ this.handlePlayStatusChange.bind(this, true) }\n          onPause={ this.handlePlayStatusChange.bind(this, false) }\n        />;\n    const playlist = <Playlist\n          date={ date }\n          minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n          maxDate={ maxDate }\n          completedDownload={ completed }\n          onClickReload={ this.handleClickReload.bind(this) }\n          onDateBlur={ () => this.keyHandlerFocus() }\n          onDateChange={ this.handleDateChange.bind(this) }\n        >\n          <PodcastsList\n            current={ current }\n          >\n          { podcasts.map((podcast, index) =>\n            <Podcast\n              key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n              { ...podcast }\n              onClick={ this.handlePodcastClick.bind(this, index) }\n            />\n          )}\n          </PodcastsList>\n        </Playlist>;\n\n    return (\n      <MediaQuery minWidth={700}>\n        { matches => {\n          if ( matches ) {\n            return (\n              <div style={{\n                display: 'flex',\n                alignItems: 'stretch',\n              }}>\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'stretch',\n                  justifyContent: 'space-evenly',\n                }}>\n                  <h3>{ title }</h3>\n                  { controls }\n                  { player }\n                </div>\n                { playlist }\n              </div>\n            );\n          } else {\n            return (\n              <React.Fragment>\n                <h3>{ title }</h3>\n                { controls }\n                { player }\n                { playlist }\n              </React.Fragment>\n            );\n          }\n        }}\n      </MediaQuery>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if( action !== 'POP' ) {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if ( date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if ( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if ( this.history.location.pathname !== newPath ) {\n      if ( !replace ) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handlePlayStatusChange(isPlaying) {\n    this.setState({\n      ...this.state,\n      isPlaying,\n    });\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if ( completed && currentUUID === '' ) {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if ( waitingUpdate === true && waitingUpdateNext === false ) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if ( date !== this.state.date ) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if ( date !== null ) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n\n    // If there is not already an incomplete update\n    if ( this.state.completed ) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter( podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if ( found.length > 0 ) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach( (podcast, index) => {\n      if ( podcast.uuid === uuid ) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if ( podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes() ) {\n      date.setHours( Number(podcast.hour) );\n      date.setMinutes( Number(podcast.minute) );\n    }\n\n    replace = currentUUID === '';\n    document.title = `${this.initialTitle}: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if ( current > 0 ) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if ( current < (this.state.podcasts.length - 1 ) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if ( retry ) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if ( !this.state.waitingUpdate ) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nexport default Rac1ByDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport AppMenu from './AppMenu';\nimport GAListener from './GAListener';\nimport Rac1Directe from './Rac1Directe';\nimport Rac1ByDate from './Rac1ByDate';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.registration = false;\n    this.state = {\n      newServiceWorkerDetected: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  handleNewServiceWorker(event) {\n    this.registration = event.detail.registration;\n    this.setState({\n      ...this.state,\n      newServiceWorkerDetected: true,\n    });\n  }\n\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n    const { newServiceWorkerDetected } = this.state;\n\n    return (\n      <Router>\n        <div className=\"App\" id=\"outer-container\">\n\n          {/* Menu */}\n          <AppMenu\n            newServiceWorkerDetected={ newServiceWorkerDetected }\n            onLoadNewServiceWorkerAccept={ this.handleLoadNewServiceWorkerAccept.bind(this) }\n          />\n\n          {/* App Route */}\n          <header className=\"App-header\" id=\"page-wrap\">\n            <GAListener>\n              <Switch>\n                <Route\n                  path=\"/directe\"\n                  render={ props => <Rac1Directe { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour/:minute\"\n                  render={ props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day/:hour\"\n                  render={ props => <Rac1ByDate { ...props } /> } />\n\n                <Route\n                  path=\"/:year/:month/:day\"\n                  render={props => <Rac1ByDate { ...props } /> } />\n\n                {/* Set default date to today */}\n                <Redirect to={{ pathname: todayStr }} />\n              </Switch>\n            </GAListener>\n          </header>\n        </div>\n      </Router>\n    )\n  }\n\n  handleLoadNewServiceWorkerAccept() {\n    this.props.onLoadNewServiceWorkerAccept(this.registration);\n  }\n}\n\nApp.defaultProps = {\n  onLoadNewServiceWorkerAccept: registration => {},\n};\n\nApp.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Callback to call when user accepts loading new service worker\n// - Send message to SW to trigger the update\n// - Once updated, reload this window to load new assets\nconst updateSW = (registration) => {\n  if( registration.waiting ) {\n\n    // When the user asks to refresh the UI, we'll need to reload the window\n    var preventDevToolsReloadLoop;\n    navigator.serviceWorker.addEventListener('controllerchange', function(event) {\n\n      // Ensure refresh is only called once.\n      // This works around a bug in \"force update on reload\".\n      if (preventDevToolsReloadLoop) {\n        return;\n      }\n\n      preventDevToolsReloadLoop = true;\n      console.log('Controller loaded');\n      window.location.reload();\n    });\n\n    // Send a message to the new serviceWorker to activate itself\n    registration.waiting.postMessage('skipWaiting');\n  }\n};\n\nReactDOM.render(\n  <App onLoadNewServiceWorkerAccept={ updateSW } />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({\n\n  // When new ServiceWorker is available, trigger an event on `document`,\n  // passing `registration` as extra data\n  onUpdate: registration => {\n    var event = new CustomEvent('onNewServiceWorker', { detail: { registration } });\n    document.dispatchEvent(event);\n  }\n\n});\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListenerProd extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n     super();\n\n     const GACode = 'UA-129704402-1';\n     this.loadGoogleTag(GACode);\n     ReactGA.initialize(GACode);\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\n// Renders GA+children in production, only children for the rest\nclass GAListener extends React.Component {\n  render() {\n\n    const dnt = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;\n\n    // Disable GA in dev and for people with DoNotTrack HTTP header\n    return process.env.NODE_ENV !== 'production' || dnt === \"1\" || dnt === \"yes\" ?\n      this.props.children : (\n      <GAListenerProd>\n        { this.props.children }\n      </GAListenerProd>\n    )\n  }\n}\n\nexport default GAListener;\n"],"sourceRoot":""}