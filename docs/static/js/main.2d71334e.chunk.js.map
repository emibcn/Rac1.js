{"version":3,"sources":["App.js","Controls.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","serviceWorker.js","index.js"],"names":["Rac1Player","props","history","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","initialTitle","document","title","state","podcasts","uuid","currentUUID","date","getDateFromParams","volume","completed","waitingUpdate","match","params","Date","year","month","day","hour","minute","unlisten","listen","handleHistoryChange","bind","rac1","Rac1","onListUpdate","handleListUpdate","_this2","_this$state","dateText","concat","getDate","getMonth","getFullYear","current","findCurrentPodcast","autoplay","currentPath","undefined","length","path","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","titleFull","_Controls__WEBPACK_IMPORTED_MODULE_13__","getPlayer","player","allowFocus","el","onPlayNext","playNext","onPlayPrev","playPrev","onSetVolume","v","setState","_home_node_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","onPodcastsLastRemove","handlePodcastsLastRemove","ref","keyHandlerFocus","react_audio_player__WEBPACK_IMPORTED_MODULE_12___default","element","_player","style","width","src","autoPlay","controls","preload","onEnded","_Playlist__WEBPACK_IMPORTED_MODULE_14__","completedDownload","onClickReload","handleClickReload","onDateBlur","onDateChange","handleDateChange","_PodcastsList__WEBPACK_IMPORTED_MODULE_15__","map","podcast","index","_Podcast__WEBPACK_IMPORTED_MODULE_16__","assign","key","onClick","handlePodcastClick","location","action","dateNew","getHours","getMinutes","selectPodcastByDate","replace","arguments","newPath","pathname","push","newList","_this$state2","waitingUpdateNext","_this3","historyPush","setTimeout","setDate","_home_node_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","slice","updateList","found","filter","playPodcast","findPodcastByUUID","forEach","_this$state3","setHours","Number","setMinutes","retry","audioEl","e","stopPropagation","preventDefault","Component","App","global","dataLayer","gtag","scriptTag","body","appendChild","todayStr","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","render","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","to","Controls","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","icon","react__WEBPACK_IMPORTED_MODULE_6___default","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__","faFastForward","flip","text","faForward","currentTime","position","left","faEject","rotation","paused","play","pause","_home_node_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","test","navigator","userAgent","doFocus","relatedTarget","_keyHandler","focus","onFocus","control","borderRadius","padding","margin","fontSize","fontWeight","minWidth","Function","color","name","height","border","backgroundColor","cursor","onKeyUp","handleKey","onBlur","increment","volumeNew","setVolume","shiftKey","incrementVolume","muted","defaultProps","Playlist","_this$props","children","react__WEBPACK_IMPORTED_MODULE_5___default","textAlign","disabled","top","right","marginBottom","faRefresh","react_date_picker__WEBPACK_IMPORTED_MODULE_6___default","onChange","handleDateBlur","minDate","maxDate","required","value","clearIcon","calendarIcon","faCalendar","PodcastsList","listStyleType","marginLeft","paddingLeft","child","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_6__","faPlay","Podcast","handleClick","num","href","textDecoration","handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","error","console","dataAttrsFind","dataAttrsClean","_podcastsData","_pages_uuids","_previous_uuids","pageNumber","pages","getPodcastsUUIDs","then","getPodcasts","getPodcastData","handlePodcastUpdate","w","page","pageUuids","podcastPage","allCompleted","every","podcastNew","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","fetch","credentials","catch","searchData","data","split","line","includes","_this5","Promise","resolve","json","audio","time","appTabletTitle","Boolean","window","hostname","ReactDOM","react_default","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d71334e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\nimport './App.css';\n\nclass Rac1Player extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour,\n        date.minute,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      volume: 1,\n      completed: false,\n      waitingUpdate: false,\n    };\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = (props) => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      }\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n  }\n\n  render() {\n    const { podcasts, volume, completed, date } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>\n          { podcasts !== undefined && podcasts.length > 0 ?\n                ( 'audio' in podcasts[current] ?\n                    `${podcasts[current].titleFull}` :\n                    dateText )\n              : dateText\n          }\n          </h3>\n          <Controls\n            getPlayer={ this.player.bind(this) }\n            volume={ volume }\n            allowFocus={ (el) => el.className.match(/date-?picker/) }\n            onPlayNext={ this.playNext.bind(this) }\n            onPlayPrev={ this.playPrev.bind(this) }\n            onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n            onPodcastsLastRemove={ this.handlePodcastsLastRemove.bind(this) }\n            ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          />\n          <ReactAudioPlayer\n            ref={(element) => { this._player = element; }}\n            style={{ width: '100%' }}\n            src={ currentPath }\n            autoPlay={ autoplay }\n            controls\n            preload={ (autoplay ? \"auto\" : \"metadata\") }\n            onEnded={ this.playNext.bind(this) }\n            volume={ volume }\n          />\n          <Playlist\n            date={ date }\n            completedDownload={ completed }\n            onClickReload={ this.handleClickReload.bind(this) }\n            onDateBlur={ () => this.keyHandlerFocus() }\n            onDateChange={ this.handleDateChange.bind(this) }\n          >\n            <PodcastsList\n              current={ current }\n            >\n            { podcasts.map((podcast, index) =>\n              <Podcast\n                key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n                { ...podcast }\n                onClick={ this.handlePodcastClick.bind(this, index) }\n              />\n            )}\n            </PodcastsList>\n          </Playlist>\n        </header>\n      </div>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if(action !== 'POP') {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if(date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if(this.history.location.pathname !== newPath) {\n      if(!replace) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if(completed && currentUUID === '') {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if(waitingUpdate === true && waitingUpdateNext === false) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if(date !== this.state.date) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if(date !== null) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n    // If there is not already an incomplete update\n    if(this.state.completed) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter(podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if(found.length > 0) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach((podcast, index) => {\n      if(podcast.uuid === uuid) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if(podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes()) {\n      date.setHours(Number(podcast.hour));\n      date.setMinutes(Number(podcast.minute));\n    }\n\n    replace = currentUUID === '';\n    document.title = `${this.initialTitle}: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if(current > 0) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if(current < (this.state.podcasts.length - 1) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if(retry) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if(!this.state.waitingUpdate) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nconst loadGoogleTag = () => {\n  // Global site tag (gtag.js) - Google Analytics\n  global.dataLayer = global.dataLayer || [];\n  global.gtag = function(){ global.dataLayer.push(arguments) }\n\n  global.gtag('js', new Date());\n  global.gtag('config', 'UA-129704402-1');\n\n  // Load GTag script async\n  setTimeout(() => {\n    let scriptTag = document.createElement('script');\n    scriptTag.src = \"https://www.googletagmanager.com/gtag/js?id=UA-129704402-1\";\n    document.body.appendChild(scriptTag);\n  }, 1);\n};\n\nclass App extends Component {\n  componentDidMount() {\n    loadGoogleTag();\n  }\n\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n\n    return (\n      <Router>\n        <Switch>\n          <Route\n            path=\"/:year/:month/:day/:hour/:minute\"\n            render={props => <Rac1Player { ...props } /> } />\n\n          {/* Set default date to today */}\n          <Redirect to={{ pathname: todayStr }} />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faEject,\n  faForward,\n  faFastForward,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Controls extends Component {\n  constructor(props) {\n    super();\n\n    // Initial state\n    this.state = {\n      controls: [],\n    };\n\n    // Controls definitions\n    this.controls = [\n      {\n        icon: <FontAwesomeIcon icon={faFastForward} flip=\"horizontal\" />,\n        text: 'Prev',\n        action: () => this.props.onPlayPrev(),\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n            <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n          </span>\n        ),\n        text: '-10m',\n        action: () => this.player().currentTime -= 600,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon\n              icon={faForward}\n              flip=\"horizontal\"\n              style={{ position: 'relative', left: '.25em' }} />\n            <FontAwesomeIcon\n              icon={faForward}\n              flip=\"horizontal\"\n              style={{ position: 'relative', left: '-.25em' }} />\n          </span>\n        ),\n        text: '-60s',\n        action: () => this.player().currentTime -= 60,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />,\n        text: '-10s',\n        action: () => this.player().currentTime -= 10,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faEject} rotation={90} />,\n        text: 'Play/Pause',\n        action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      },\n      {\n        icon: <FontAwesomeIcon icon={faForward} />,\n        text: '+10s',\n        action: () => this.player().currentTime += 10,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon\n              icon={faForward}\n              style={{ position: 'relative', left: '.25em' }} />\n            <FontAwesomeIcon\n              icon={faForward}\n              style={{ position: 'relative', left: '-.25em' }} />\n          </span>\n        ),\n        text: '+60s',\n        action: () => this.player().currentTime += 60,\n      },\n      {\n        icon: (\n          <span>\n            <FontAwesomeIcon icon={faForward} />\n            <FontAwesomeIcon icon={faForward} />\n          </span>\n        ),\n        text: '+10m',\n        action: () => this.player().currentTime += 600,\n      },\n      {\n        icon: <FontAwesomeIcon icon={faFastForward} />,\n        text: 'Next',\n        action: () => this.props.onPlayNext(),\n      },\n    ];\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n      // Add a button to remove the last podcast in the list\n      this.controls.push({\n          icon: 'RL',\n          text: 'Remove last',\n          action: () => this.props.onPodcastsLastRemove(),\n        });\n    }\n  }\n\n  keyHandlerFocus = () => {};\n\n  componentDidMount() {\n    this.keyHandlerFocus();\n    this.setState({\n      ...this.state,\n      controls: this.controls,\n    });\n\n    // Disable key handler on mobile devices\n    if (!(/Mobi|Android/i.test(navigator.userAgent))) {\n      this.keyHandlerFocus = (e) => {\n        let doFocus = true;\n\n        // Allow datepicker to get focus\n        if(e && e.relatedTarget &&\n          this.props.allowFocus(e.relatedTarget)) {\n          doFocus = false;\n        }\n\n        if(doFocus) {\n          setTimeout(() => this._keyHandler.focus(), 100);\n        }\n      };\n    }\n  }\n\n  player = () => this.props.getPlayer();\n\n  render() {\n    const { controls } = this.state;\n\n    return (\n      <div onFocus={ (e) => this.keyHandlerFocus(e) } >\n        { controls.map((control, index) => {\n          return (\n            <button\n              key={ index }\n              onClick={ control.action.bind(this) }\n              style={{\n                borderRadius: \"1em\",\n                padding: \"1em\",\n                margin: \"1em\",\n              }}\n            >\n              <div style={{\n                fontSize: 'calc(1em + 2.5vmin)',\n                fontWeight: 'bold',\n                minWidth: '1.5em',\n              }} >\n                { control.icon instanceof Function ? control.icon() : control.icon }\n              </div>\n              <span style={{ fontSize: 'calc(8px + 1vmin)', color: '#777' }}>\n                { control.text instanceof Function ? control.text() : control.text }\n              </span>\n            </button>\n          )\n        })}\n        <input\n          name=\"player-key-handler\"\n          style={{\n            width: '1px',\n            height: '1px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            position: 'fixed',\n            backgroundColor: 'transparent',\n            color: 'transparent',\n            cursor: 'default',\n          }}\n          ref={(element) => { this._keyHandler = element; }}\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n        />\n      </div>\n    );\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.state;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = true;\n    switch(e.key) {\n      case 'Enter':\n        this.props.onPlayNext();\n        break;\n      case ' ':\n      case 'p':\n      case 'P':\n        this.player().paused ? this.player().play() : this.player().pause();\n        break;\n      case 'ArrowLeft':\n        this.player().currentTime -= 10;\n        break;\n      case 'ArrowRight':\n        this.player().currentTime += 10;\n        break;\n      case 'ArrowUp':\n        if(e.shiftKey) {\n          this.incrementVolume(.05);\n        }\n        else {\n          this.player().currentTime -= 60;\n        }\n        break;\n      case 'ArrowDown':\n        if(e.shiftKey) {\n          this.incrementVolume(-.05);\n        }\n        else {\n          this.player().currentTime += 60;\n        }\n        break;\n      case 'PageUp':\n        this.player().currentTime -= 600;\n        break;\n      case 'PageDown':\n        this.player().currentTime += 600;\n        break;\n      case '*':\n        this.incrementVolume(.05);\n        break;\n      case '/':\n        this.incrementVolume(-.05);\n        break;\n      case 'm':\n      case 'M':\n        this.player().muted = !this.player().muted;\n        break;\n      case 'r':\n      case 'R':\n        this.handleClickReload();\n        break;\n      default:\n        stopPropagation = false;\n        break;\n    }\n\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:          (e) => {},\n  onPodcastsLastRemove: (e) => {},\n  onPlayPrev:           (e) => {},\n  onPlayNext:           (e) => {},\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPodcastsLastRemove: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Playlist extends Component {\n  render() {\n    const { completedDownload, date, children } = this.props;\n\n    return (\n      <div\n        style={{\n          color: \"#777\",\n          backgroundColor: \"white\",\n          padding: \"2em\",\n          borderRadius: \"1em\",\n          margin: \"1em\",\n          textAlign: \"left\",\n          position: \"relative\",\n        }}>\n        <button\n          onClick={ this.props.onClickReload.bind(this) }\n          disabled={ !completedDownload }\n          style={{\n            borderRadius: \".5em\",\n            padding: \".25em\",\n            margin: \"1.5em\",\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n          }}\n        >\n          <div style={{\n            fontSize: 'calc(.5em + 2vmin)',\n            fontWeight: 'bold',\n            marginBottom: '-.25em'\n          }}>\n            <FontAwesomeIcon icon={faRefresh} />\n          </div>\n          <span style={{\n            fontSize: 'calc(5px + 1vmin)',\n            color: '#777'\n          }}>\n            Reload\n          </span>\n        </button>\n        <div style={{ textAlign: 'center', fontSize: 'large' }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n            maxDate={ new Date() }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if(e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/)) {\n      focus = false;\n    }\n\n    if(focus) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends Component {\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: \"none\",\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left'\n        }}>\n          { children.map((child, index) =>\n            <li\n              key={ child.key }\n              style={{ position: \"relative\", marginLeft: \"1em\" }}>\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={faPlay}\n                  style={{\n                    position: 'absolute',\n                    left: '-1.25em',\n                    top: 'calc(.2vmin + .2em)',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends Component {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","// Raises exception on response error\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n// Catches the fetch error, original or 'self-raised'\nfunction catchFetchErrors(error) {\n  console.error(error);\n}\n\n// Cached/compiled regexps for parsing HTML\nconst dataAttrsFind   = / class=\"(audioteca-item|pagination-link)\" /;\nconst dataAttrsClean  = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\nclass Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n\n    this.updateList();\n  }\n\n  setDate(date) {\n    if(this.date !== date) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if(pageNumber === 0) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n      // Download podcast data if needed\n      .then(this.getPodcasts.bind(this, pageNumber))\n      // Trigger event for list updated\n      .then(this.handleListUpdate.bind(this, pageNumber));\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map(podcast => {\n        // If it's a podcast and is not in the cache\n        if(podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData)) {\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [...this._previous_uuids.filter(w => w.uuid !== '...')];\n    let completed = true;\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if(pageUuids === undefined) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n        // Add this page's podcasts to the list\n        pageUuids\n          // filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map(podcast => this._podcastsData[podcast.uuid] || podcast );\n\n    // Save complete list on finish\n    if(completed) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every(podcast => 'path' in podcast);\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach((podcast,index) => {\n      if(podcast.uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => { return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${date}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n      .catch(catchFetchErrors)\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter(line => dataAttrsFind.test(line))\n      .map(v => v.replace(dataAttrsClean, '$1=$2'))\n      .map(line => line.split('='))\n      .filter(v => searchData.includes(v[0]));\n\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if(uuid in this._podcastsData) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(`https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`)\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n        // Add some data to the podcast\n        podcast.uuid = uuid;\n        podcast.hour   = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute = Number(podcast.audio.time.split(':')[1]);\n        podcast.title = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n      .catch(catchFetchErrors)\n  }\n\n}\n\nexport default Rac1;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (( process.env.NODE_ENV === 'production' ) && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}