{"version":3,"sources":["GAListener.jsx","Controls.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","App.js","serviceWorker.js","index.js"],"names":["GAListener","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loadGoogleTag","ReactGA","initialize","sendPageView","context","router","history","location","listen","set","page","pathname","pageview","GACode","global","dataLayer","gtag","push","arguments","Date","setTimeout","scriptTag","document","createElement","src","concat","body","appendChild","props","children","Component","contextTypes","PropTypes","object","Controls","classCallCheck","possibleConstructorReturn","getPrototypeOf","controls","icon","react_default","a","index_es","faFastForward","flip","text","help","action","onPlayPrev","faForward","player","currentTime","keys","style","position","left","faEject","rotation","paused","play","pause","onPlayNext","incrementVolume","key","shiftKey","muted","keyHandlerFocus","_keyHandlerFocus","e","force","doFocus","relatedTarget","allowFocus","_keyHandler","focus","getPlayer","extraControls","length","test","navigator","userAgent","_this2","filter","control","map","index","onClick","bind","onMouseUp","aria-label","title","className","borderRadius","padding","margin","fontSize","fontWeight","minWidth","Function","color","name","width","height","border","bottom","right","backgroundColor","cursor","ref","element","onKeyUp","handleKey","onBlur","volume","onSetVolume","increment","volumeNew","setVolume","stopPropagation","forEach","key_orig","every","mod","console","log","preventDefault","React","PureComponent","defaultProps","ReloadButton","assign","marginBottom","faRefresh","Playlist","_this$props","completedDownload","date","minDate","maxDate","textAlign","display","justifyContent","alignItems","entry_default","onChange","handleDateChange","handleDateBlur","required","value","clearIcon","calendarIcon","faCalendar","Playlist_ReloadButton","onClickReload","disabled","setHours","setMinutes","onDateChange","match","onDateBlur","PodcastsList","current","undefined","listStyleType","marginLeft","paddingLeft","child","textIndent","faPlay","Podcast","handleClick","num","path","uuid","hour","minute","href","textDecoration","handleFetchErrors","response","ok","Error","statusText","catchFetchErrors","error","dataAttrsFind","dataAttrsClean","Rac1","_podcastsData","_pages_uuids","_previous_uuids","onListUpdate","updateList","pageNumber","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","toConsumableArray","w","completed","pageUuids","podcastPage","allCompleted","podcastNew","_this3","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","getDate","getMonth","getFullYear","fetch","credentials","catch","searchData","data","split","line","v","replace","includes","Number","_this5","Promise","resolve","json","audio","time","appTabletTitle","titleFull","Rac1Player","initialTitle","state","currentUUID","getDateFromParams","waitingUpdate","handleClickReload","assertThisInitialized","params","year","month","day","unlisten","handleHistoryChange","rac1","_this$state","dateText","findCurrentPodcast","autoplay","currentPath","src_Controls","el","playNext","playPrev","setState","objectSpread","bundle_default","_player","autoPlay","controlsList","preload","onEnded","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","_this$state2","waitingUpdateNext","historyPush","setDate","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","audioEl","App","todayStr","HashRouter","Switch","Route","render","App_Rac1Player","Redirect","to","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","src_App_0","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.72a125dd.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListener extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n     super();\n\n     const GACode = 'UA-129704402-1';\n     this.loadGoogleTag(GACode);\n     ReactGA.initialize(GACode);\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default GAListener;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faEject,\n  faForward,\n  faFastForward,\n} from '@fortawesome/free-solid-svg-icons'\n\nclass Controls extends React.PureComponent {\n\n  // Controls definitions\n  controls = [\n    {\n      icon: <FontAwesomeIcon icon={faFastForward} flip=\"horizontal\" />,\n      text: 'Prev',\n      help: 'Play previous podcast',\n      action: () => this.props.onPlayPrev(),\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n          <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />\n        </span>\n      ),\n      text: '-10m',\n      help: 'Go backwards 10 minutes',\n      action: () => this.player().currentTime -= 600,\n      keys: [ 'PageUp' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '-60s',\n      help: 'Go backwards 1 minute',\n      action: () => this.player().currentTime -= 60,\n      keys: [ 'ArrowUp' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faForward} flip=\"horizontal\" />,\n      text: '-10s',\n      help: 'Go backwards 10 seconds',\n      action: () => this.player().currentTime -= 10,\n      keys: [ 'ArrowLeft' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faEject} rotation={90} />,\n      text: 'Play/Pause',\n      help: 'Toggle Play/Pause',\n      action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      keys: [ ' ', 'p', 'P' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faForward} />,\n      text: '+10s',\n      help: 'Go forward 10 seconds',\n      action: () => this.player().currentTime += 10,\n      keys: [ 'ArrowRight' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '+60s',\n      help: 'Go forward 1 minute',\n      action: () => this.player().currentTime += 60,\n      keys: [ 'ArrowDown' ],\n    },\n    {\n      icon: (\n        <span>\n          <FontAwesomeIcon icon={faForward} />\n          <FontAwesomeIcon icon={faForward} />\n        </span>\n      ),\n      text: '+10m',\n      help: 'Go forward 10 minutes',\n      action: () => this.player().currentTime += 600,\n      keys: [ 'PageDown' ],\n    },\n    {\n      icon: <FontAwesomeIcon icon={faFastForward} />,\n      text: 'Next',\n      help: 'Play next podcast',\n      action: () => this.props.onPlayNext(),\n      keys: [ 'Enter' ],\n    },\n    {\n      help: 'Decrement volume 5%',\n      action: () => this.incrementVolume(-.05),\n      keys: [\n        '/',\n        {key: 'ArrowDown', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Increment volume 5%',\n      action: () => this.incrementVolume(.05),\n      keys: [\n        '*',\n        {key: 'ArrowUp', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Toggle mute status',\n      action: () => this.player().muted = !this.player().muted,\n      keys: [ 'm', 'M' ],\n    },\n  ];\n\n  constructor(props) {\n    super();\n\n    // Add extra controls\n    if ( props.extraControls.length ) {\n      this.controls = this.controls.concat(props.extraControls);\n    }\n  }\n\n  keyHandlerFocus = () => {};\n  _keyHandlerFocus = (e, force) => {\n    let doFocus = true;\n\n    // Allow datepicker to get focus\n    if ( e && e.relatedTarget &&\n          this.props.allowFocus(e.relatedTarget) ) {\n      doFocus = false;\n    }\n\n    if(doFocus || force) {\n      setTimeout(() => this._keyHandler.focus(), 100);\n    }\n  };\n\n  componentDidMount() {\n    // Disable key handler on mobile devices (enable on the rest)\n    if ( !(/Mobi|Android/i.test(navigator.userAgent)) ) {\n       this.keyHandlerFocus = this._keyHandlerFocus;\n       this.keyHandlerFocus();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        { this.controls\n            .filter( (control) => 'icon' in control)\n            .map((control, index) => {\n          return (\n            <button\n              key={ index }\n              onClick={ control.action.bind(this) }\n              onMouseUp={ (e) => this.keyHandlerFocus(e, true) }\n              aria-label={ control.help }\n              title={ control.help }\n              className='rac1-controls-button'\n              style={{\n                borderRadius: '1em',\n                padding: '1em',\n                margin: '1em',\n              }}\n            >\n              <div style={{\n                fontSize: 'calc(1em + 2.5vmin)',\n                fontWeight: 'bold',\n                minWidth: '1.5em',\n              }} >\n                { control.icon instanceof Function ? control.icon() : control.icon }\n              </div>\n              <span style={{\n                fontSize: 'calc(8px + 1vmin)',\n                color: '#333'\n              }}>\n                { control.text instanceof Function ? control.text() : control.text }\n              </span>\n            </button>\n          )\n        })}\n        <input\n          name='player-key-handler'\n          style={{ // Almost invisible ;)\n            width: '1px',\n            height: '1px',\n            border: 0,\n            margin: 0,\n            padding: 0,\n            bottom: 0,\n            right: 0,\n            position: 'fixed',\n            backgroundColor: 'transparent',\n            color: 'transparent',\n            cursor: 'default',\n          }}\n          ref={ (element) => { this._keyHandler = element } }\n          onKeyUp={ this.handleKey.bind(this) }\n          onBlur={ this.keyHandlerFocus.bind(this) }\n          aria-label=\"Key input handler\"\n        />\n      </div>\n    );\n  }\n\n  player = () => this.props.getPlayer();\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.props;\n    let volumeNew = volume;\n\n    // Increment\n    if(increment > 0 && volume < 1) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if(increment < 0 && volume > 0) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    // Prevent updating volume if limit reached\n    if(volumeNew !== volume) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = false;\n\n    // Handle controls keys\n    this.controls.forEach( (control) => {\n      (control.keys||[]).forEach( (key_orig) => {\n        let key = typeof key_orig === 'string' ? {key: key_orig} : key_orig;\n        if(e.key === key.key &&\n          ['shiftKey', 'altKey', 'ctrlKey', 'metaKey']\n            .every( (mod) => !!e[mod] === !!key[mod] )) {\n          console.log(control.help);\n          stopPropagation = true;\n          control.action();\n        }\n      });\n    });\n\n    if(stopPropagation) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:   (e) => {},\n  onPlayPrev:    (e) => {},\n  onPlayNext:    (e) => {},\n  extraControls: [],\n  volume:        1,\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n  extraControls: PropTypes.arrayOf( PropTypes.shape({\n    help: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    icon: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.node,\n    ]),\n    keys: PropTypes.arrayOf( PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        shiftKey: PropTypes.bool,\n        altKey: PropTypes.bool,\n        ctrlKey: PropTypes.bool,\n        metaKey: PropTypes.bool,\n      }),\n    ])),\n  })),\n};\n\nexport default Controls;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = (props) => {\n  const text = 'Reload';\n  return (\n    <button\n      { ...props }\n      aria-label={ text }\n      style={{\n        borderRadius: '.5em',\n        padding: '.25em',\n        margin: '0 0 0 1em',\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#333'\n      }}>\n        { text }\n      </span>\n    </button>\n  )\n};\n\nclass Playlist extends React.PureComponent {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: '#333',\n        backgroundColor: 'white',\n        padding: '2em',\n        borderRadius: '1em',\n        margin: '1em',\n        textAlign: 'left',\n        position: 'relative',\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-around',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if(e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/)) {\n      focus = false;\n    }\n\n    if(focus) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends React.PureComponent {\n  render() {\n    const { children, current } = this.props;\n\n    return children === undefined || children.length === 0 ?\n      null :\n      (\n        <ul style={{\n          listStyleType: 'none',\n          marginLeft: 0,\n          paddingLeft: 0,\n          textAlign: 'left'\n        }}>\n          { children.map( (child, index) =>\n            <li\n              key={ child.key }\n              style={{\n                position: 'relative',\n                marginLeft: '2.5em',\n                textIndent: '-1.5em',\n                padding: '1pt 0',\n              }}\n            >\n              { index === current ? (\n                <FontAwesomeIcon\n                  icon={ faPlay }\n                  style={{\n                    position: 'absolute',\n                    left: '-2.75em',\n                    padding: '1pt 0',\n                  }}/>\n              ) : null\n              }\n              { child }\n            </li>\n          )}\n        </ul>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends React.PureComponent {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","// Raises exception on response error\nfunction handleFetchErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\n// Catches the fetch error, original or 'self-raised'\nfunction catchFetchErrors(error) {\n  console.error(error);\n}\n\n// Cached/compiled regexps for parsing HTML\nconst dataAttrsFind   = / class=\"(audioteca-item|pagination-link)\" /;\nconst dataAttrsClean  = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\nclass Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  constructor(props) {\n    const noop = () => {};\n    this.date = props.date;\n    this.onListUpdate = props.onListUpdate || noop;\n\n    this.updateList();\n  }\n\n  setDate(date) {\n    if(this.date !== date) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if(pageNumber === 0) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n      // Download podcast data if needed\n      .then(this.getPodcasts.bind(this, pageNumber))\n      // Trigger event for list updated\n      .then(this.handleListUpdate.bind(this, pageNumber));\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map(podcast => {\n        // If it's a podcast and is not in the cache\n        if(podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData)) {\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [...this._previous_uuids.filter(w => w.uuid !== '...')];\n    let completed = true;\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if(pageUuids === undefined) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n        // Add this page's podcasts to the list\n        pageUuids\n          // filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map(podcast => this._podcastsData[podcast.uuid] || podcast );\n\n    // Save complete list on finish\n    if(completed) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every(podcast => 'path' in podcast);\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach((podcast,index) => {\n      if(podcast.uuid === podcastNew.uuid) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then(dataRaw => {\n\n        //console.log({pageNumber, dataRaw});\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if(pageNumber === 0) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map(uuid => { return {uuid, page: pageNumber} });\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + `text=&programId=&sectionId=HOUR&from=${date}&to=${date}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n      })\n      .then(handleFetchErrors)\n      .then(response => response.text())\n      .catch(catchFetchErrors)\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter(line => dataAttrsFind.test(line))\n      .map(v => v.replace(dataAttrsClean, '$1=$2'))\n      .map(line => line.split('='))\n      .filter(v => searchData.includes(v[0]));\n\n    return {\n      uuidsPage: data\n        .filter(v => v[0] === 'data-audio-id')\n        .map(v => v[1]),\n      pages: data\n        .filter(v => v[0] === 'data-audioteca-search-page')\n        .map(v => Number(v[1])),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if(uuid in this._podcastsData) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(`https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`)\n      .then(handleFetchErrors)\n      .then(data => data.json())\n      .then(podcast => {\n        // Add some data to the podcast\n        podcast.uuid = uuid;\n        podcast.hour   = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute = Number(podcast.audio.time.split(':')[1]);\n        podcast.title = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n      .catch(catchFetchErrors)\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\nimport GAListener from './GAListener';\n\nimport Rac1 from './rac1';\nimport './App.css';\n\nclass Rac1Player extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour,\n        date.minute,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      completed: false,\n      waitingUpdate: false,\n    };\n\n    this.extraControls = [\n      {\n        help: 'Reload playlist',\n        action: this.handleClickReload.bind(this),\n        keys: [ 'r', 'R' ],\n      },\n    ];\n\n    // Debugging on development\n    if(process.env.NODE_ENV === \"development\") {\n\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = (props) => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      }\n\n      // Add a button to remove the last podcast in the list\n      this.extraControls.push({\n        icon: 'RL',\n        text: 'Remove last',\n        help: 'Remove last podcast from playlist',\n        action: this.handlePodcastsLastRemove.bind(this),\n      });\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n  }\n\n  render() {\n    const { podcasts, volume, completed, date, maxDate } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>{ title }</h3>\n          <Controls\n            getPlayer={ this.player.bind(this) }\n            volume={ volume }\n            allowFocus={ (el) => el.className.match( /date-?picker/ ) }\n            onPlayNext={ this.playNext.bind(this) }\n            onPlayPrev={ this.playPrev.bind(this) }\n            onSetVolume={ (v) => this.setState({ ...this.state, volume: v }) }\n            ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n            extraControls={ this.extraControls }\n          />\n          <ReactAudioPlayer\n            ref={(element) => { this._player = element; }}\n            style={{ width: '100%' }}\n            src={ currentPath }\n            autoPlay={ autoplay }\n            controls\n            controlsList=\"nodownload\"\n            preload={ (autoplay ? \"auto\" : \"metadata\") }\n            onEnded={ this.playNext.bind(this) }\n            volume={ volume }\n          />\n          <Playlist\n            date={ date }\n            minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n            maxDate={ maxDate }\n            completedDownload={ completed }\n            onClickReload={ this.handleClickReload.bind(this) }\n            onDateBlur={ () => this.keyHandlerFocus() }\n            onDateChange={ this.handleDateChange.bind(this) }\n          >\n            <PodcastsList\n              current={ current }\n            >\n            { podcasts.map((podcast, index) =>\n              <Podcast\n                key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n                { ...podcast }\n                onClick={ this.handlePodcastClick.bind(this, index) }\n              />\n            )}\n            </PodcastsList>\n          </Playlist>\n        </header>\n      </div>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if(action !== 'POP') {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if(date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if(this.history.location.pathname !== newPath) {\n      if(!replace) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if(completed && currentUUID === '') {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if(waitingUpdate === true && waitingUpdateNext === false) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if(date !== this.state.date) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if(date !== null) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n\n    // If there is not already an incomplete update\n    if(this.state.completed) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter(podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if(found.length > 0) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach((podcast, index) => {\n      if(podcast.uuid === uuid) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if(podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes()) {\n      date.setHours(Number(podcast.hour));\n      date.setMinutes(Number(podcast.minute));\n    }\n\n    replace = currentUUID === '';\n    document.title = `${this.initialTitle}: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if(current > 0) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if(current < (this.state.podcasts.length - 1) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if(retry) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if(!this.state.waitingUpdate) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nclass App extends Component {\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n\n    return (\n      <Router>\n        <GAListener>\n          <Switch>\n            <Route\n              path=\"/:year/:month/:day/:hour/:minute\"\n              render={props => <Rac1Player { ...props } /> } />\n\n            {/* Set default date to today */}\n            <Redirect to={{ pathname: todayStr }} />\n          </Switch>\n        </GAListener>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}