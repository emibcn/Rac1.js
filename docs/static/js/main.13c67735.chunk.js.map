{"version":3,"sources":["GAListener.jsx","i18n/en-en.lang.js","i18n/ca-es.lang.js","i18n/es-es.lang.js","i18n/available.js","AppMenu.jsx","Button.jsx","Volume.jsx","Controls.jsx","Rac1Directe.jsx","Playlist.jsx","PodcastsList.jsx","Podcast.jsx","rac1.js","Rac1ByDate.jsx","App.js","serviceWorker.js","index.js"],"names":["GAListenerProd","_this","Object","_home_node_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_node_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_node_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loadGoogleTag","ReactGA","initialize","sendPageView","context","router","history","location","listen","set","page","pathname","pageview","GACode","global","dataLayer","gtag","push","arguments","Date","setTimeout","scriptTag","document","createElement","src","concat","body","appendChild","props","children","React","Component","contextTypes","PropTypes","object","GAListener","dnt","navigator","doNotTrack","window","msDoNotTrack","react__WEBPACK_IMPORTED_MODULE_5___default","a","en_en_lang","locale","AppMenu","By date","Live","Update!","New version available!","Language","Change application language","Rac1ByDate","Rac1 Radio Podcasts Player","Rac1Directe","Rac1 live","ReloadButton","Reload","Button","objectSpread","Key","Keys","Prev","Next","More","Less","Play","Pause","Mute","Unmute","Remove last","Remove last podcast from playlist","Play previous podcast","Play next podcast","Toggle mute status","Toggle Play/Pause","Show more controls","Show less controls","symbol","orig","reduce","res","item","_objectSpread2","defineProperty","ca_es_lang","lang","trans","_objectSpread3","es_es_lang","available","en","en_en","en-en","en-us","en-au","ca","ca_es","ca-es","es","es_es","es-es","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","isOpen","isLanguageOpen","_this2","_this$props","newServiceWorkerDetected","t","react_default","style","padding","background","process","backgroundSize","backgroundRepeat","backgroundPosition","Link","className","onClick","handleClick","bind","to","index_es","icon","faByDate","marginRight","faLive","href","color","title","handleClickUpdate","faUpgrade","handleLanguageSectionClick","faLanguage","faCaretDown","faCaretRight","marginLeft","listStyleType","marginTop","code","name","map","key","handleClickLanguage","_this3","extraClass","react_responsive_default","minWidth","matches","Menu","BigMenu","SmallMenu","pageWrapId","outerContainerId","onStateChange","handleMenuStateChange","disableCloseOnEsc","renderLinks","setState","e","preventDefault","language","onLanguageChange","onLoadNewServiceWorkerAccept","defaultProps","translate","ButtonLegacy","keys","length","toConsumableArray","Set","toUpperCase","join","text","help","action","restProps","objectWithoutProperties","styleButton","borderRadius","margin","helpExtra","keysString","assign","aria-label","fontSize","fontWeight","Function","PureComponent","ButtonsGroup","_this$props2","buttons","keyHandlerFocus","display","justifyContent","width","control","index","onMouseUp","force","Volume","volume","muted","faVolume","faVolumeMute","faVolumeOff","faVolumeDown","faVolumeUp","flexDirection","height","alignItems","paddingTop","onAfterChange","onChange","value","onSetVolume","vertical","onSetMuted","Controls","controls","faFastForward","flip","onPlayPrev","group","whiteSpace","faForward","player","currentTime","position","left","isPlaying","faPause","faPlay","paused","play","pause","onPlayNext","incrementVolume","shiftKey","setMuted","_keyHandlerFocus","doFocus","relatedTarget","allowFocus","timer","_keyHandler","focus","getPlayer","noKeys","extraControls","test","userAgent","clearTimeout","hideButtons","filter","includes","split","showAdvanced","volumeAsAdvanced","filterButtonsGroup","Button_ButtonsGroup","handleShowAdvancedChange","faEyeSlash","faEye","src_Volume","setVolume","border","bottom","right","backgroundColor","cursor","ref","element","onKeyUp","handleKey","onBlur","increment","volumeNew","stopPropagation","forEach","key_orig","every","mod","console","log","event","onShowAdvancedChange","_player","audioEl","initialTitle","_this$state","Fragment","src_Controls","el","match","bundle_default","autoPlay","controlsList","preload","onPlay","handlePlayStatusChange","onPause","onVolumeChanged","currentTarget","marginBottom","faRefresh","Playlist","completedDownload","date","minDate","maxDate","textAlign","entry_default","handleDateChange","handleDateBlur","required","clearIcon","calendarIcon","faCalendar","onClickReload","disabled","setHours","setMinutes","onDateChange","onDateBlur","PodcastsList","current","undefined","child","textIndent","styles","paddingLeft","columnCount","Math","floor","renderChildren","Podcast","num","path","uuid","hour","minute","textDecoration","Rac1","_podcastsData","_pages_uuids","_previous_uuids","controller","AbortController","dataAttrsFind","dataAttrsClean","onListUpdate","setDate","abort","response","ok","Error","statusText","err","message","error","updateList","pageNumber","pages","handleListUpdate","getPodcastsUUIDs","then","getPodcasts","catch","catchFetchErrors","podcasts","podcast","getPodcastData","handlePodcastUpdate","newList","w","completed","dateToString","d","getFullYear","getMonth","getDate","filterByDates","d1","d2","pageUuids","podcastPage","allCompleted","podcastNew","_this4","getPage","dataRaw","_this4$parsePage","parsePage","uuidsPage","reverse","pad2","next","getTime","dateNext","fetch","credentials","signal","handleFetchErrors","_this5","searchData","data","line","v","replace","Number","_this6","Promise","resolve","json","dateTime","startsWith","audio","time","appTabletTitle","titleFull","currentUUID","getDateFromParams","waitingUpdate","showAdvancedControls","handleClickReload","assertThisInitialized","params","year","month","day","unlisten","handleHistoryChange","rac1","dateText","findCurrentPodcast","autoplay","currentPath","playNext","playPrev","show","onEnded","playlist","src_Playlist","src_PodcastsList","src_Podcast","handlePodcastClick","dateNew","getHours","getMinutes","selectPodcastByDate","newPath","_this$state2","waitingUpdateNext","historyPush","slice","found","playPodcast","findPodcastByUUID","_this$state3","retry","App","registration","hasOwnProperty","addEventListener","handleNewServiceWorker","removeEventListener","detail","todayStr","translations","lib","HashRouter","id","build_default","parent","prefix","blacklist","src_AppMenu_0","handleLoadNewServiceWorkerAccept","handleLanguageChange","Switch","Route","render","src_Rac1Directe","Redirect","src_Rac1ByDate","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","ReactDOM","src_App_0","preventDevToolsReloadLoop","waiting","reload","postMessage","getElementById","URL","origin","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","CustomEvent","dispatchEvent"],"mappings":"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","file":"static/js/main.13c67735.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport ReactGA from 'react-ga';\n\nclass GAListenerProd extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object\n  };\n\n  constructor(){\n     super();\n\n     const GACode = 'UA-129704402-1';\n     this.loadGoogleTag(GACode);\n     ReactGA.initialize(GACode);\n  }\n\n  componentDidMount() {\n    this.sendPageView(this.context.router.history.location);\n    this.context.router.history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  loadGoogleTag(GACode) {\n    // Global site tag (gtag.js) - Google Analytics\n    global.dataLayer = global.dataLayer || [];\n    global.gtag = function(){ global.dataLayer.push(arguments) }\n\n    global.gtag('js', new Date());\n    global.gtag('config', GACode);\n\n    // Load GTag script async\n    setTimeout(() => {\n      let scriptTag = document.createElement('script');\n      scriptTag.src = `https://www.googletagmanager.com/gtag/js?id=${GACode}`;\n      document.body.appendChild(scriptTag);\n    }, 1);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\n// Renders GA+children in production, only children for the rest\nclass GAListener extends React.Component {\n  render() {\n\n    const dnt = navigator.doNotTrack || window.doNotTrack || navigator.msDoNotTrack;\n\n    // Disable GA in dev and for people with DoNotTrack HTTP header\n    return process.env.NODE_ENV !== 'production' || dnt === \"1\" || dnt === \"yes\" ?\n      this.props.children : (\n      <GAListenerProd>\n        { this.props.children }\n      </GAListenerProd>\n    )\n  }\n}\n\nexport default GAListener;\n","export default {\n  locale: \"en-en\",\n\n  AppMenu: {\n    \"By date\": \"By date\",\n    \"Live\": \"Live\",\n    \"Update!\": \"Update!\",\n    \"New version available!\": \"New version available!\",\n    \"Language\": \"Language\",\n    \"Change application language\": \"Change application language\",\n  },\n\n  Rac1ByDate: {\n    \"Rac1 Radio Podcasts Player\": \"Rac1 Radio Podcasts Player\",\n  },\n\n  Rac1Directe: {\n    \"Live\": \"Live\",\n    \"Rac1 live\": \"Rac1 Live\",\n    \"Rac1 Radio Podcasts Player\": \"Rac1 Radio Podcasts Player\",\n  },\n\n  ReloadButton: {\n    \"Reload\": \"Reload\",\n  },\n\n  Button: {\n    \"Key\": \"Key\",\n    \"Keys\": \"Keys\",\n    \"Prev\": \"Prev\",\n    \"Next\": \"Next\",\n    \"More\": \"More\",\n    \"Less\": \"Less\",\n    \"Play\": \"Play\",\n    \"Pause\": \"Pause\",\n    \"Mute\": \"Mute\",\n    \"Unmute\": \"Unmute\",\n    \"Remove last\": \"Remove last\",\n    \"Remove last podcast from playlist\": \"Remove last podcast from playlist\",\n    \"Play previous podcast\": \"Play previous podcast\",\n    \"Play next podcast\": \"Play next podcast\",\n    \"Toggle mute status\": \"Toggle mute status\",\n    \"Toggle Play/Pause\": \"Toggle Play/Pause\",\n    \"Show more controls\": \"Show more controls\",\n    \"Show less controls\": \"Show less controls\",\n    ...[\n        { symbol: '10s', orig: '10 seconds'},\n        { symbol: '60s', orig: '1 minute'  },\n        { symbol: '10m', orig: '10 minutes'},\n      ].reduce( (res, item) => {\n        return {\n          ...res,\n          [`-${ item.symbol }`]: [`-${ item.symbol }`],\n          [`+${ item.symbol }`]: [`+${ item.symbol }`],\n          [`Go backwards ${ item.orig }`]: `Go backwards ${ item.orig }`,\n          [`Go forward ${ item.orig }`  ]: `Go forward ${ item.orig }`,\n        }\n      }, {}),\n  },\n}\n","export default {\n  locale: \"fr\", // :(\n\n  AppMenu: {\n    \"By date\": \"Per data\",\n    \"Live\": \"En directe\",\n    \"Update!\": \"Actualitza!\",\n    \"New version available!\": \"Nova versió disponible!\",\n    \"Language\": \"Idioma\",\n    \"Change application language\": \"Canvia l'idioma de l'aplicació\",\n    ...['Català', 'Castellano', 'English']\n      .reduce( (res, lang) => {\n        return {\n          ...res,\n          [`Change language to ${lang}`]: `Canviar idioma a ${lang}`,\n        }\n      }, {}),\n  },\n\n  Rac1ByDate: {\n    \"Rac1 Radio Podcasts Player\": \"Reproductor de podcasts de Rac1\",\n  },\n\n  Rac1Directe: {\n    \"Live\": \"En directe\",\n    \"Rac1 live\": \"Rac1 en Directe\",\n    \"Rac1 Radio Podcasts Player\": \"Reproductor de podcasts de Rac1\",\n  },\n\n  ReloadButton: {\n    \"Reload\": \"Recarrega\",\n  },\n\n  Button: {\n    \"Key\": \"Tecla\",\n    \"Keys\": \"Tecles\",\n    \"Prev\": \"Ant.\",\n    \"Next\": \"Seg.\",\n    \"More\": \"Més\",\n    \"Less\": \"Menys\",\n    \"Play\": \"Play\",\n    \"Pause\": \"Pausa\",\n    \"Mute\": \"Silenciar\",\n    \"Unmute\": \"Act. so\",\n    \"Remove last\": \"Elimina últ\",\n    \"Remove last podcast from playlist\": \"Elimina l'últim podcast de la llista de reproducció\",\n    \"Play previous podcast\": \"Reprodueix el podcast anterior\",\n    \"Play next podcast\": \"Reprodueix el podcast següent\",\n    \"Toggle mute status\": \"Canvia l'estat del silenci\",\n    \"Toggle Play/Pause\": \"Canvia Reprodueix/Pausa\",\n    \"Show more controls\": \"Mostra més controls\",\n    \"Show less controls\": \"Mostra menys controls\",\n    ...[\n        { symbol: '10s', orig: '10 seconds', trans: '10 segons'},\n        { symbol: '60s', orig: '1 minute'  , trans: '1 minut'},\n        { symbol: '10m', orig: '10 minutes', trans: '10 minuts'},\n      ].reduce( (res, item) => {\n        return {\n          ...res,\n          [`-${ item.symbol }`]: [`-${ item.symbol }`],\n          [`+${ item.symbol }`]: [`+${ item.symbol }`],\n          [`Go backwards ${ item.orig }`]: `Retrocedir ${ item.trans }`,\n          [`Go forward ${ item.orig }`  ]: `Avançar ${ item.trans }`,\n        }\n      }, {}),\n  },\n}\n","export default {\n  locale: \"es-es\",\n\n  AppMenu: {\n    \"By date\": \"Por fecha\",\n    \"Live\": \"En directo\",\n    \"Update!\": \"¡Actualiza!\",\n    \"New version available!\": \"¡Nueva versión disponible!\",\n    \"Language\": \"Idioma\",\n    \"Change application language\": \"Cambiar el idioma de la aplicación\",\n    ...['Català', 'Castellano', 'English']\n      .reduce( (res, lang) => {\n        return {\n          ...res,\n          [`Change language to ${lang}`]: `Cambiar idioma a ${lang}`,\n        }\n      }, {}),\n  },\n\n  Rac1ByDate: {\n    \"Rac1 Radio Podcasts Player\": \"Reproductor de podcasts de Rac1\",\n  },\n\n  Rac1Directe: {\n    \"Live\": \"En directo\",\n    \"Rac1 live\": \"Rac1 en Directo\",\n    \"Rac1 Radio Podcasts Player\": \"Reproductor de podcasts de Rac1\",\n  },\n\n  ReloadButton: {\n    \"Reload\": \"Recarga\",\n  },\n\n  Button: {\n    \"Key\": \"Tecla\",\n    \"Keys\": \"Teclas\",\n    \"Prev\": \"Ant.\",\n    \"Next\": \"Sig.\",\n    \"More\": \"Más\",\n    \"Less\": \"Menos\",\n    \"Play\": \"Play\",\n    \"Pause\": \"Pausa\",\n    \"Mute\": \"Silenciar\",\n    \"Unmute\": \"Act. sonido\",\n    \"Remove last\": \"Eliminar últ\",\n    \"Remove last podcast from playlist\": \"Eliminar el último podcast de la lista de reproducción\",\n    \"Play previous podcast\": \"Reproducir el podcast anterior\",\n    \"Play next podcast\": \"Reproducir el podcast seguinte\",\n    \"Toggle mute status\": \"Canviar el estado del silencio\",\n    \"Toggle Play/Pause\": \"Canviar Reproducir/Pausa\",\n    \"Show more controls\": \"Mostrar más controles\",\n    \"Show less controls\": \"Mostrar menos controles\",\n    ...[\n        { symbol: '10s', orig: '10 seconds', trans: '10 segundos'},\n        { symbol: '60s', orig: '1 minute'  , trans: '1 minuto'},\n        { symbol: '10m', orig: '10 minutes', trans: '10 minutos'},\n      ].reduce( (res, item) => {\n        return {\n          ...res,\n          [`-${ item.symbol }`]: [`-${ item.symbol }`],\n          [`+${ item.symbol }`]: [`+${ item.symbol }`],\n          [`Go backwards ${ item.orig }`]: `Retroceder ${ item.trans }`,\n          [`Go forward ${ item.orig }`  ]: `Avanzar ${ item.trans }`,\n        }\n      }, {}),\n  },\n}\n","import en_en from \"./en-en.lang.js\";\nimport ca_es from \"./ca-es.lang.js\";\nimport es_es from \"./es-es.lang.js\";\n\nexport default {\n  'en'   : en_en,\n  'en-en': en_en,\n  'en-us': en_en,\n  'en-au': en_en,\n  'ca'   : ca_es,\n  'ca-es': ca_es,\n  'es'   : es_es,\n  'es-es': es_es,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nimport { translate } from \"react-translate\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCalendarAlt as faByDate,\n  faBroadcastTower as faLive,\n  faArrowAltCircleUp as faUpgrade,\n  faLanguage,\n  faCaretRight,\n  faCaretDown,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport MediaQuery from 'react-responsive';\nimport {\n  slide as SmallMenu,\n  scaleRotate as BigMenu,\n} from 'react-burger-menu'\n\nimport './AppMenu.css';\n\nclass AppMenu extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      isLanguageOpen: false,\n    };\n  }\n\n  renderLinks() {\n    const { newServiceWorkerDetected, children, t } = this.props;\n    const { isLanguageOpen } = this.state;\n\n    return (\n      <div\n        style={{\n          padding: '3em 1em 1em',\n          background: `url(${ process.env.PUBLIC_URL }/logo-rac1.png)`,\n          backgroundSize: 50,\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center .5em',\n        }}>\n        <Link className='bm-item' onClick={ this.handleClick.bind(this) } to=\"/\">\n          <FontAwesomeIcon icon={ faByDate } style={{ marginRight: '.5em' }} />\n          <span>{ t(\"By date\") }</span>\n        </Link>\n        <Link className='bm-item' onClick={ this.handleClick.bind(this) } to=\"/live\" >\n          <FontAwesomeIcon icon={ faLive } style={{ marginRight: '.5em' }} />\n          <span>{ t(\"Live\") }</span>\n        </Link>\n        { newServiceWorkerDetected ? (\n            <a\n              href='/'\n              className='bm-item'\n              style={{ color: 'green' }}\n              title={ t(\"New version available!\") }\n              onClick={ this.handleClickUpdate.bind(this) }\n              >\n              <FontAwesomeIcon icon={ faUpgrade } style={{ marginRight: '.5em' }} />\n              <span>{ t(\"Update!\") }</span>\n            </a>\n          ) : null\n        }\n        <a\n          href='/'\n          className='bm-item'\n          title={ t(\"Change application language\") }\n          onClick={ this.handleLanguageSectionClick.bind(this) }\n          >\n          <FontAwesomeIcon icon={ faLanguage } style={{ marginRight: '.5em' }} />\n          <span>{ t(\"Language\") }</span>\n          <FontAwesomeIcon\n            icon={ isLanguageOpen ? faCaretDown : faCaretRight }\n            style={{ marginLeft: '.5em' }} />\n        </a>\n        { isLanguageOpen ? (\n          <ul style={{\n            listStyleType: 'none',\n            marginTop: 0,\n          }}>\n            { [\n                {code: 'ca', name: \"Català\"},\n                {code: 'es', name: \"Castellano\"},\n                {code: 'en', name: \"English\"},\n              ].map( lang => (\n                <li key={ lang.code } >\n                  <a\n                    href='/'\n                    className='bm-item'\n                    title={ t(`Change language to ${lang.name}`) }\n                    onClick={ this.handleClickLanguage.bind(this, lang.code) }\n                  >\n                    <span>{ lang.name }</span>\n                  </a>\n                </li>\n              ))\n            }\n          </ul>\n        ) : null }\n        { children }\n      </div>\n    )\n  }\n\n  render() {\n    const { newServiceWorkerDetected } = this.props;\n    const { isOpen } = this.state;\n    const extraClass = newServiceWorkerDetected ? ' news' : '';\n\n    return (\n      <MediaQuery minWidth={ 1024 }>\n        { matches => {\n          const Menu = matches ? BigMenu : SmallMenu;\n\n          return (\n            <div className={ `menu-${matches ? 'big' : 'small'}${extraClass}` }>\n              <Menu\n                pageWrapId='page-wrap'\n                outerContainerId='router-container'\n                isOpen={ isOpen }\n                onStateChange={ state => this.handleMenuStateChange(state.isOpen) }\n                disableCloseOnEsc\n              >\n                { this.renderLinks() }\n              </Menu>\n            </div>\n          )\n        }}\n      </MediaQuery>\n    )\n  }\n\n  handleMenuStateChange(isOpen) {\n    this.setState({\n      isOpen,\n    });\n  }\n\n  handleClick(e) {\n    this.handleMenuStateChange(false);\n  }\n\n  handleLanguageSectionClick(e) {\n    const { isLanguageOpen } = this.state;\n    e.preventDefault();\n    this.setState({\n      ...this.state,\n      isLanguageOpen: !isLanguageOpen\n    });\n  }\n\n  handleClickLanguage(language, e) {\n    e.preventDefault();\n    this.handleMenuStateChange(false);\n    this.props.onLanguageChange(language);\n  }\n\n  handleClickUpdate(e) {\n    e.preventDefault();\n    this.handleMenuStateChange(false);\n    this.props.onLoadNewServiceWorkerAccept();\n  }\n}\n\nAppMenu.defaultProps = {\n  onLoadNewServiceWorkerAccept: () => {},\n  newServiceWorkerDetected: false,\n  onLanguageChange: (language) => {},\n};\n\nAppMenu.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n  newServiceWorkerDetected: PropTypes.bool.isRequired,\n  onLanguageChange: PropTypes.func.isRequired,\n};\n\nexport default translate('AppMenu')(AppMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from \"react-translate\"\n\nclass ButtonLegacy extends React.PureComponent {\n  keysString() {\n    if ( this.props.keys.length === 0 ) {\n      return '';\n    }\n\n    // Transform ' ' to 'Space'\n    // Transform letters (not texts) to uppercase\n    // Uniq with [...new Set()]\n    const { t } = this.props;\n    const keys = [\n      ...new Set(\n        this.props.keys\n          .map( key => key === ' ' ? 'Space' : key )\n          .map( key => key.length === 1 ? key.toUpperCase() : key )\n      )];\n    return ` | ${ t(`Key${ keys.length > 1 ? 's' : '' }`) }: ${ keys.join(', ') }`\n  }\n\n  render() {\n    const {\n      text,\n      help,\n      icon,\n      action,\n      keys,\n      style,\n      className,\n      t,\n      ...restProps\n    } = this.props;\n\n    const styleButton = {\n      borderRadius: '1em',\n      padding: '.7em',\n      margin: '1em',\n      ...style,\n    };\n\n    const helpExtra = t(help) + this.keysString();\n\n    return (\n      <button\n        onClick={ action }\n        aria-label={ helpExtra }\n        title={ helpExtra }\n        className={ 'rac1-controls-button' + (className ? ` ${className}` : '') }\n        style={ styleButton }\n        { ...restProps }\n      >\n        <div style={{\n          fontSize: 'calc(1em + 2.5vmin)',\n          fontWeight: 'bold',\n          minWidth: '1.5em',\n        }} >\n          { icon instanceof Function ? icon() : icon }\n        </div>\n        <span style={{\n          fontSize: 'calc(8px + 1vmin)',\n          color: '#333'\n        }}>\n          { t(text instanceof Function ? text() : text) }\n        </span>\n      </button>\n    )\n  }\n}\n\nButtonLegacy.defaultProps = {\n  action: () => {},\n  keys: [],\n};\n\nButtonLegacy.propTypes = {\n  text: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node,\n  ]).isRequired,\n  icon: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node,\n  ]).isRequired,\n  action: PropTypes.func.isRequired,\n  help: PropTypes.string.isRequired,\n\n  // Get keys to let user know how to access the button\n  keys: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        shiftKey: PropTypes.bool,\n        altKey: PropTypes.bool,\n        ctrlKey: PropTypes.bool,\n        metaKey: PropTypes.bool,\n      }),\n    ])\n  ),\n};\n\nclass ButtonsGroup extends React.PureComponent {\n  render() {\n    const { buttons, keyHandlerFocus, children } = this.props;\n    return (\n      <div style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100%',\n      }}>\n        { buttons.map( (control, index) => {\n            return <Button\n              key={ index }\n              onMouseUp={ e => keyHandlerFocus(e, true) }\n              action={ control.action.bind(this) }\n              help={ control.help }\n              text={ control.text }\n              icon={ control.icon }\n              keys={ control.keys }\n            />\n          })\n        }\n        { children }\n      </div>\n    )\n  }\n}\n\nButtonsGroup.defaultProps = {\n  keyHandlerFocus: (e, force) => {},\n};\n\nButtonsGroup.propTypes = {\n  keyHandlerFocus: PropTypes.func.isRequired,\n  buttons: PropTypes.arrayOf( PropTypes.shape( ButtonLegacy.propTypes ) )\n};\n\nconst Button = translate('Button')(ButtonLegacy);\nexport { Button, ButtonsGroup };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faVolumeUp,\n  faVolumeDown,\n  faVolumeOff,\n  faVolumeMute,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { Button } from './Button';\n\nclass Volume extends React.Component {\n  render() {\n    const { volume, muted } = this.props;\n    const title = \"Volume handler | Keys: Shift + Arrow Up, Shift + Arrow Down\";\n\n    // Select volume icon\n    const faVolume =\n      muted        ? faVolumeMute :\n      volume === 0 ? faVolumeOff  :\n      volume < .5  ? faVolumeDown : faVolumeUp;\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n      }}>\n        <div style={{\n          width: '100%',\n          minWidth: 40,\n          height: 100,\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n          paddingTop: '.3em',\n        }}>\n          <Slider\n            onAfterChange={ () => this.props.keyHandlerFocus() }\n            onChange={ value => this.props.onSetVolume(value / 100) }\n            value={ volume * 100 }\n            vertical\n            aria-label={ title }\n            title={ title }\n          />\n        </div>\n        <div>\n          <Button\n            onMouseUp={ e => this.props.keyHandlerFocus(e, true) }\n            action={ () => this.props.onSetMuted( !muted ) }\n            help={ 'Toggle mute status' }\n            text={ muted ? 'Unmute' : 'Mute' }\n            icon={ <FontAwesomeIcon icon={ faVolume } /> }\n            keys={ [ 'M' ] }\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nVolume.defaultProps = {\n  keyHandlerFocus: () => {},\n  onSetVolume:     volume => {},\n  onSetMuted:      muted => {},\n  volume:          1,\n  muted:           false,\n};\n\nVolume.propTypes = {\n  keyHandlerFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onSetMuted: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  muted: PropTypes.bool.isRequired,\n};\n\nexport default Volume;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faPlay,\n  faPause,\n  faForward,\n  faFastForward,\n  faEye,\n  faEyeSlash,\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { Button, ButtonsGroup } from './Button';\nimport Volume from './Volume';\n\nclass Controls extends React.Component {\n\n  // Controls definitions:\n  // - Only button\n  // - Only key binding\n  // - Both\n  controls = [\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } flip=\"horizontal\" />,\n      text: 'Prev',\n      help: 'Play previous podcast',\n      action: () => this.props.onPlayPrev(),\n      group: 'basic',\n    },\n    {\n      icon: (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n          <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />\n        </span>\n      ),\n      text: '-10m',\n      help: 'Go backwards 10 minutes',\n      action: () => this.player().currentTime -= 600,\n      keys: [ 'PageUp' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            flip=\"horizontal\"\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '-60s',\n      help: 'Go backwards 1 minute',\n      action: () => this.player().currentTime -= 60,\n      keys: [ 'ArrowUp' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } flip=\"horizontal\" />,\n      text: '-10s',\n      help: 'Go backwards 10 seconds',\n      action: () => this.player().currentTime -= 10,\n      keys: [ 'ArrowLeft' ],\n      group: 'advanced prev',\n    },\n    {\n      icon: () => this.props.isPlaying ?\n         <FontAwesomeIcon icon={ faPause } /> :\n         <FontAwesomeIcon icon={ faPlay } /> ,\n      text: () => this.props.isPlaying ? 'Pause' : 'Play',\n      help: 'Toggle Play/Pause',\n      action: () => this.player().paused ? this.player().play() : this.player().pause(),\n      keys: [ ' ', 'p', 'P' ],\n      group: 'basic',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faForward } />,\n      text: '+10s',\n      help: 'Go forward 10 seconds',\n      action: () => this.player().currentTime += 10,\n      keys: [ 'ArrowRight' ],\n      group: 'advanced next',\n    },\n    {\n      icon: (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '.25em' }} />\n          <FontAwesomeIcon\n            icon={faForward}\n            style={{ position: 'relative', left: '-.25em' }} />\n        </span>\n      ),\n      text: '+60s',\n      help: 'Go forward 1 minute',\n      action: () => this.player().currentTime += 60,\n      keys: [ 'ArrowDown' ],\n      group: 'advanced next',\n    },\n    {\n      icon: (\n        <span style={{ whiteSpace: 'nowrap' }}>\n          <FontAwesomeIcon icon={ faForward } />\n          <FontAwesomeIcon icon={ faForward } />\n        </span>\n      ),\n      text: '+10m',\n      help: 'Go forward 10 minutes',\n      action: () => this.player().currentTime += 600,\n      keys: [ 'PageDown' ],\n      group: 'advanced next',\n    },\n    {\n      icon: <FontAwesomeIcon icon={ faFastForward } />,\n      text: 'Next',\n      help: 'Play next podcast',\n      action: () => this.props.onPlayNext(),\n      keys: [ 'Enter' ],\n      group: 'basic',\n    },\n    {\n      help: 'Decrement volume 5%',\n      action: () => this.incrementVolume(-.05),\n      keys: [\n        '/',\n        {key: 'ArrowDown', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Increment volume 5%',\n      action: () => this.incrementVolume(.05),\n      keys: [\n        '*',\n        {key: 'ArrowUp', shiftKey: true}\n      ],\n    },\n    {\n      help: 'Toggle mute status',\n      action: () => this.setMuted( !this.player().muted ),\n      keys: [ 'm', 'M' ],\n    },\n  ];\n\n  constructor(props) {\n    super();\n\n    // Keybindings disabled by default\n    // Enable for anything but mobiles\n    this.state = {\n      noKeys: true,\n    };\n\n    // Add extra controls\n    if ( props.extraControls.length ) {\n      this.controls = this.controls.concat( props.extraControls );\n    }\n  }\n\n  keyHandlerFocus = () => {};\n  _keyHandlerFocus = (e, force) => {\n    let doFocus = true;\n\n    // Allow datepicker to get focus\n    if ( e && e.relatedTarget &&\n          this.props.allowFocus( e.relatedTarget ) ) {\n      doFocus = false;\n    }\n\n    if ( doFocus || force ) {\n      this.timer = setTimeout(() => this._keyHandler.focus(), 100);\n    }\n  };\n\n  componentDidMount() {\n\n    let noKeys = true;\n\n    // Disable key handler on mobile devices (enable on the rest)\n    if ( !(/Mobi|Android/i.test(navigator.userAgent)) ) {\n      noKeys = false;\n      this.keyHandlerFocus = this._keyHandlerFocus;\n      this.keyHandlerFocus();\n    }\n\n    this.setState({\n      ...this.state,\n      noKeys,\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  filterButtonsGroup(controls, group) {\n    const { hideButtons } = this.props;\n    const { noKeys } = this.state;\n\n    return controls\n\n      // Filter controls without button attributes\n      .filter( control => 'icon' in control && 'text' in control )\n\n      // Filter hidden buttons\n      .filter( control => !hideButtons.includes(control.text) )\n\n      // Filter buttons by group\n      .filter( control => control.group.split(' ').includes(group) )\n\n      // Remove keys info if keys are disabled\n      .map( control => {\n        if ( noKeys ) {\n          const { keys, ...rest } = control;\n          return rest\n        }\n        return control\n      })\n  }\n\n  render() {\n    const { showAdvanced, volumeAsAdvanced, volume, muted } = this.props;\n    const { noKeys } = this.state;\n    const buttons = ['basic','advanced'].reduce( (res, group) => {\n      res[group] = this.filterButtonsGroup(this.controls, group);\n      return res;\n    }, {});\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n      }}>\n        { buttons['basic'].length ? (\n          <div style={{\n            display: 'flex',\n            alignItems: 'flex-end',\n          }}>\n            <ButtonsGroup\n              buttons={ buttons['basic'] }\n              keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n            >\n              { buttons['advanced'].length ? (\n                <Button\n                  onMouseUp={ e => this.keyHandlerFocus(e, true) }\n                  action={ this.handleShowAdvancedChange.bind(this, !showAdvanced) }\n                  help={ `Show ${ showAdvanced ? 'less' : 'more' } controls` }\n                  text={ showAdvanced ? 'Less' : 'More' }\n                  icon={ <FontAwesomeIcon icon={ showAdvanced ? faEyeSlash : faEye } /> }\n                />\n              ) : null }\n            </ButtonsGroup>\n            { !volumeAsAdvanced ? (\n              <Volume\n                volume={ volume }\n                muted={ muted }\n                onSetVolume={ this.setVolume.bind(this) }\n                onSetMuted={ this.setMuted.bind(this) }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n            ) : null }\n          </div>\n        ) : null }\n        <div style={{ display: 'flex' }}>\n          { showAdvanced && buttons['advanced'].length ? (\n            <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'space-around',\n            }}>\n              <ButtonsGroup\n                buttons={ this.filterButtonsGroup(buttons['advanced'], 'prev') }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n              <ButtonsGroup\n                buttons={ this.filterButtonsGroup(buttons['advanced'], 'next') }\n                keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n              />\n            </div>\n          ) : null }\n          { showAdvanced && volumeAsAdvanced ? (\n            <Volume\n              volume={ volume }\n              muted={ muted }\n              onSetVolume={ this.setVolume.bind(this) }\n              onSetMuted={ this.setMuted.bind(this) }\n              keyHandlerFocus={ this.keyHandlerFocus.bind(this) }\n            />\n          ) : null }\n        </div>\n        { noKeys ? null : (\n          <input\n            name='player-key-handler'\n            style={{ // Almost invisible ;)\n              width: '1px',\n              height: '1px',\n              border: 0,\n              margin: 0,\n              padding: 0,\n              bottom: 0,\n              right: 0,\n              position: 'fixed',\n              backgroundColor: 'transparent',\n              color: 'transparent',\n              cursor: 'default',\n            }}\n            ref={ element => { this._keyHandler = element } }\n            onKeyUp={ this.handleKey.bind(this) }\n            onBlur={ this.keyHandlerFocus.bind(this) }\n            aria-label=\"Key input handler\"\n          />\n        )}\n      </div>\n    );\n  }\n\n  player = () => this.props.getPlayer();\n\n  setMuted(muted) {\n    this.player().muted = muted;\n    this.props.onSetMuted(muted);\n  }\n\n  setVolume(volume) {\n    this.player().volume = volume;\n    this.props.onSetVolume(volume);\n  }\n\n  incrementVolume(increment) {\n    const { volume } = this.props;\n    let volumeNew = volume;\n\n    // Increment\n    if ( increment > 0 && volume < 1 ) {\n      volumeNew = volume <= (1 - increment) ? volume + increment : 1;\n    }\n\n    // Decrement\n    if ( increment < 0 && volume > 0 ) {\n      volumeNew = volume >= (-increment) ? volume + increment : 0;\n    }\n\n    // Prevent updating volume if limit reached\n    if ( volumeNew !== volume ) {\n      this.setVolume(volumeNew);\n    }\n  }\n\n  handleKey(e) {\n    let stopPropagation = false;\n\n    // Handle controls keys\n    this.controls.forEach( control => {\n      (control.keys||[]).forEach( key_orig => {\n\n        // Understand plain string or custom key object\n        let key = typeof key_orig === 'string' ? {key: key_orig} : key_orig;\n\n        // If it's exact key match\n        if(e.key === key.key &&\n          ['shiftKey', 'altKey', 'ctrlKey', 'metaKey']\n            .every( (mod) => !!e[mod] === !!key[mod] )) {\n          console.log(control.help);\n          stopPropagation = true;\n          control.action();\n        }\n      });\n    });\n\n    if ( stopPropagation ) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  handleShowAdvancedChange(showAdvanced, event) {\n    event.preventDefault();\n    this.props.onShowAdvancedChange(showAdvanced);\n  }\n}\n\nControls.defaultProps = {\n  onSetVolume:   e => {},\n  onSetMuted:    e => {},\n  onPlayPrev:    e => {},\n  onPlayNext:    e => {},\n  allowFocus:    e => {},\n  onShowAdvancedChange: e => {},\n  extraControls: [],\n  hideButtons:   [],\n  volume:        1,\n  muted:         false,\n  isPlaying:     false,\n  showAdvanced:  false,\n  volumeAsAdvanced: false,\n};\n\nControls.propTypes = {\n  getPlayer: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  muted: PropTypes.bool.isRequired,\n  allowFocus: PropTypes.func.isRequired,\n  onSetVolume: PropTypes.func.isRequired,\n  onSetMuted: PropTypes.func.isRequired,\n  onPlayPrev: PropTypes.func.isRequired,\n  onPlayNext: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  volumeAsAdvanced: PropTypes.bool.isRequired,\n  showAdvanced: PropTypes.bool.isRequired,\n  onShowAdvancedChange: PropTypes.func.isRequired,\n  hideButtons: PropTypes.arrayOf(\n    PropTypes.oneOf(\n      ['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s', 'Play/Pause']\n  )).isRequired,\n  extraControls: PropTypes.arrayOf(\n    // As a button, but `text` and `icon` are not required\n    PropTypes.shape({\n      ...Button.propTypes,\n      text: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n      ]),\n      icon: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.node,\n      ]),\n    }) ),\n};\n\nexport default Controls;\n\n","import React, { Component } from 'react';\n\nimport { translate } from \"react-translate\"\nimport ReactAudioPlayer from 'react-audio-player';\n\nimport Controls from './Controls';\n\nclass Rac1Directe extends Component {\n  // Initial state\n  state = {\n    volume: 1,\n  };\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n\n    // Initial state\n    this.state = {\n      volume: 1,\n      muted: false,\n      isPlaying: false,\n    };\n  }\n\n  componentDidMount() {\n    const { t } = this.props;\n    this.initialTitle = document.title;\n    document.title = `${ t(this.initialTitle) } - ${ t(\"Live\") }`;\n  }\n\n  componentWillUnmount() {\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const { volume, muted, isPlaying } = this.state;\n    const { t } = this.props;\n    const currentPath = 'http://rac1.radiocat.net/;*.nsv';\n    const autoplay = true;\n    const title = t('Rac1 live');\n\n    return (\n      <React.Fragment>\n        <h3>{ title }</h3>\n        <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          allowFocus={ (el) => el.className.match( /rc-slider-handle/ ) }\n          isPlaying={ isPlaying }\n          onSetVolume={ volume => this.setState({ ...this.state, volume }) }\n          onSetMuted={ muted => this.setState({ ...this.state, muted }) }\n          hideButtons={['Prev', 'Next', '-10m', '-60s', '-10s', '+10m', '+60s', '+10s']}\n        />\n        <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          title={ title }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          volume={ volume }\n          muted={ muted }\n          onPlay={ this.handlePlayStatusChange.bind(this, true) }\n          onPause={ this.handlePlayStatusChange.bind(this, false) }\n          onVolumeChanged={ e => this.setState({\n            ...this.state,\n            volume: e.currentTarget.volume,\n            muted: e.currentTarget.muted,\n          }) }\n        />\n      </React.Fragment>\n    );\n  }\n\n  handlePlayStatusChange(isPlaying) {\n    this.setState({\n      ...this.state,\n      isPlaying,\n    });\n  }\n}\n\nexport default translate('Rac1Directe')(Rac1Directe);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { translate } from \"react-translate\"\nimport DatePicker from 'react-date-picker'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faSyncAlt as faRefresh,\n  faCalendarAlt as faCalendar,\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ReloadButton = translate(\"ReloadButton\")( props => {\n  const { t, restProps } = props;\n  const text = t('Reload');\n  return (\n    <button\n      { ...restProps }\n      aria-label={ text }\n      style={{\n        borderRadius: '.5em',\n        padding: '.25em',\n        margin: '0 0 0 1em',\n      }}\n    >\n      <div style={{\n        fontSize: 'calc(.5em + 2vmin)',\n        fontWeight: 'bold',\n        marginBottom: '-.25em'\n      }}>\n        <FontAwesomeIcon icon={faRefresh} />\n      </div>\n      <span style={{\n        fontSize: 'calc(5px + 1vmin)',\n        color: '#333'\n      }}>\n        { text }\n      </span>\n    </button>\n  )\n});\n\nclass Playlist extends React.PureComponent {\n  render() {\n    const { completedDownload, date, children, minDate, maxDate } = this.props;\n\n    return (\n      <div style={{\n        color: '#333',\n        backgroundColor: 'white',\n        padding: '2em',\n        borderRadius: '1em',\n        margin: '1em',\n        textAlign: 'left',\n        position: 'relative',\n        fontSize: 'large'\n      }}>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n          <DatePicker\n            onChange={ this.handleDateChange.bind(this) }\n            onBlur={ this.handleDateBlur.bind(this) }\n            minDate={ minDate }\n            maxDate={ maxDate }\n            required={ true }\n            value={ date }\n            clearIcon={ null }\n            calendarIcon={ <FontAwesomeIcon icon={faCalendar} /> }\n          />\n          <ReloadButton\n            onClick={ this.props.onClickReload.bind(this) }\n            disabled={ !completedDownload }\n          />\n        </div>\n        <div style={{\n          textAlign: 'center',\n        }}>\n          { children }\n        </div>\n      </div>\n    );\n  }\n\n  handleDateChange(date) {\n    date.setHours(0);\n    date.setMinutes(0);\n    this.props.onDateChange(date);\n  }\n\n  handleDateBlur(e) {\n    let focus = true;\n    if ( e && e.relatedTarget &&\n      e.relatedTarget.className.match(/(calendar|date-?picker)/) ) {\n      focus = false;\n    }\n\n    if ( focus ) {\n      this.props.onDateBlur(e);\n    }\n  }\n}\n\n\nPlaylist.defaultProps = {\n  onClickReload: (e) => {},\n  onDateBlur: (e) => {},\n  onDateChange: (e) => {},\n  completedDownload: true,\n  date: new Date(),\n  maxDate: new Date(),\n};\n\nPlaylist.propTypes = {\n  onClickReload: PropTypes.func.isRequired,\n  onDateBlur: PropTypes.func.isRequired,\n  onDateChange: PropTypes.func.isRequired,\n  completedDownload: PropTypes.bool.isRequired,\n  date: PropTypes.instanceOf(Date).isRequired,\n  minDate: PropTypes.instanceOf(Date).isRequired,\n  maxDate: PropTypes.instanceOf(Date).isRequired,\n};\n\nexport default Playlist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MediaQuery from 'react-responsive';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nclass PodcastsList extends React.PureComponent {\n\n  renderChildren() {\n    const { children, current } = this.props;\n    return children === undefined || children.length === 0 ?\n      null : children.map( (child, index) =>\n          <li\n            key={ child.key }\n            style={{\n              position: 'relative',\n              marginLeft: '2.5em',\n              textIndent: '-1.5em',\n              padding: '1pt 0',\n            }}\n          >\n            { index === current ? (\n              <FontAwesomeIcon\n                icon={ faPlay }\n                style={{\n                  position: 'absolute',\n                  left: '-2.75em',\n                  padding: '1pt 0',\n                }}/>\n            ) : null\n            }\n            { child }\n          </li>\n        )\n  }\n\n  render() {\n    const { children } = this.props;\n    const styles = {\n      listStyleType: 'none',\n      marginLeft: 0,\n      paddingLeft: 0,\n      textAlign: 'left',\n    };\n\n    return children === undefined || children.length === 0 ?\n      null : (\n        <MediaQuery minWidth={ 1024 }>\n          { matches => {\n            return (\n              <ul style={{\n                ...styles,\n                columnCount: matches ? Math.floor(children.length / 10) || 1 : 1,\n              }}>\n                { this.renderChildren() }\n              </ul>\n            )\n          }}\n        </MediaQuery>\n      )\n  }\n}\n\nPodcastsList.defaultProps = {\n};\n\nPodcastsList.propTypes = {\n  children: PropTypes.arrayOf( PropTypes.element ),\n  current: PropTypes.number.isRequired,\n};\n\n\nexport default PodcastsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Podcast extends React.PureComponent {\n  render() {\n    const { path, uuid, hour, minute, title} = this.props;\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n\n    return (\n      <span>\n        { !path ?\n            (\n              <span>{ uuid }</span>\n            ) :\n            (\n              <a\n                href={ path }\n                onClick={ this.handleClick.bind(this) }\n                style={{ textDecoration: \"none\" }}\n              >\n                { hour }h{ minute ? pad2(minute) : '' }: { title }\n              </a>\n            )\n        }\n      </span>\n    )\n  }\n\n  handleClick = (e) => this.props.onClick(e);\n}\n\nPodcast.defaultProps = {\n  onClick: (e) => {},\n};\n\nPodcast.propTypes = {\n  uuid: PropTypes.string.isRequired,\n  path: PropTypes.string,\n  title: PropTypes.string,\n  hour: PropTypes.number,\n  minute: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Podcast;\n","class Rac1 {\n\n  // Cache for UUID => podcast\n  _podcastsData = {};\n\n  // Cache for pageNumber => UUIDs\n  _pages_uuids = [];\n\n  // Cache for reloads\n  _previous_uuids = [];\n\n  // Abort controller\n  controller = new AbortController();\n\n  constructor(props) {\n    const noop = () => {};\n    this.onListUpdate = props.onListUpdate || noop;\n    this.setDate(props.date);\n  }\n\n  abort() {\n    this.controller.abort();\n  }\n\n  // Raises exception on response error\n  handleFetchErrors(response) {\n    if ( !response.ok ) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  // Catches the fetch error, original or 'self-raised'\n  catchFetchErrors(err) {\n    if ( err.name === 'AbortError' ) {\n      console.log(err.message);\n    }\n    else {\n      console.error(err);\n    }\n  }\n\n  // Cached/compiled regexps for parsing HTML\n  dataAttrsFind  = / class=\"(audioteca-item|pagination-link)\" /;\n  dataAttrsClean = /.* (data-[^=]*)=\"([^\"]*)\".*/;\n\n  setDate(date) {\n    if ( this.date !== date ) {\n      this._previous_uuids = [];\n    }\n    this.date = date;\n    this.updateList();\n  }\n\n  // Download podcasts UUIDs and then, each podcast data\n  updateList(pageNumber=0) {\n    if ( pageNumber === 0 ) {\n      this._pages_uuids = [];\n      this.pages = [0];\n      this.handleListUpdate();\n    }\n\n    // Get list of UUIDs\n    return this.getPodcastsUUIDs(pageNumber)\n\n      // Download podcast data if needed\n      .then( this.getPodcasts.bind(this, pageNumber) )\n\n      // Trigger event for list updated\n      .then( this.handleListUpdate.bind(this, pageNumber) )\n\n      // Catch Exceptions\n      .catch( this.catchFetchErrors )\n  }\n\n  getPodcasts(pageNumber, podcasts) {\n    return podcasts\n      .map( podcast => {\n\n        // If it's a podcast and is not in the cache\n        if ( podcast.uuid !== '...' && !(podcast.uuid in this._podcastsData) ) {\n\n          // Download podcast data and then trigger\n          // event when updated\n          this.getPodcastData(podcast.uuid)\n            .then( this.handlePodcastUpdate.bind(this, pageNumber) )\n            .catch( this.catchFetchErrors )\n        }\n        return podcast;\n      })\n  }\n\n  // Creates a list with all known podcast or UUIDs\n  // and fires event onListUpdate with that\n  // () => null\n  handleListUpdate() {\n    let newList = [ ...this._previous_uuids.filter(w => w.uuid !== '...') ];\n    let completed = true;\n\n    // Helper functions\n    const dateToString = d => `${d.getFullYear()}/${d.getMonth()+1}/${d.getDate()}`;\n    const compareDates = (d1, d2) => dateToString(d1) === dateToString(d2);\n    const filterByDates = podcast => {\n      return !(\"date\" in podcast) || compareDates( podcast.date, this.date )\n    };\n\n    // Create a virtual list of all podcasts correctly ordered\n    this.pages.forEach( page => {\n\n      // Get UUIDs from the pages cache\n      var pageUuids = this._pages_uuids[ page ];\n\n      // Set temporal UUID for unresolved pages\n      if ( pageUuids === undefined ) {\n        newList.push({uuid: '...'});\n        completed = false;\n      }\n      else {\n\n        // Add this page's podcasts to the list\n        pageUuids\n\n          // Filter out already added podcasts\n          .filter( podcastPage => {\n            const found = newList.filter(\n              podcast => podcast.uuid === podcastPage.uuid );\n            return found.length === 0;\n          })\n\n          // Filter out podcasts from other dates\n          .filter( filterByDates )\n\n          // Add remaining podcasts to the list\n          .forEach( podcast => newList.push( podcast ) );\n      }\n    });\n\n    // Get cached data if available\n    newList = newList.map( podcast => this._podcastsData[podcast.uuid] || podcast )\n          // Filter out podcasts from other dates\n          .filter( filterByDates );\n\n    // Save complete list on finish\n    if ( completed ) {\n      this._previous_uuids = newList;\n    }\n\n    // See if all podcasts have already been downloaded\n    const allCompleted = completed && newList.every( podcast => 'path' in podcast );\n\n    // Trigger update event\n    this.onListUpdate(newList, allCompleted);\n\n    return newList;\n  }\n\n  // Saves the new podcast to the pages cache and fires onPodcastUpdate\n  // (pageNumber, podcastNew) => null\n  handlePodcastUpdate(pageNumber, podcastNew) {\n    podcastNew.page = pageNumber;\n    this._pages_uuids[pageNumber].forEach( (podcast,index) => {\n      if ( podcast.uuid === podcastNew.uuid ) {\n        this._pages_uuids[pageNumber][index] = podcastNew;\n      }\n    });\n\n    // Trigger update event\n    this.handleListUpdate(podcastNew);\n  }\n\n  // Gets all the podcasts UUIDs of a date\n  // (pageNumber) => Promise(Array(String(UUID)))\n  getPodcastsUUIDs(pageNumber=0) {\n    return this.getPage(pageNumber)\n      .then( dataRaw => {\n\n        const { uuidsPage, pages } = this.parsePage(dataRaw);\n\n        // If it's the first page, call the rest\n        if ( pageNumber === 0 ) {\n\n          // Save the list of pages, in reverse order\n          // If there are no pages (only one page), create a one element array,\n          // with page zero in it's first element\n          this.pages = pages.length > 0 ? pages.reverse() : [0];\n\n          // Resolve first the last page, so we have first the first day's UUIDs\n          // Don't call again first page\n          this.pages.forEach( page => (page !== 0) && this.updateList( page ) );\n        }\n\n        // Save in reversed order and along with the page number\n        this._pages_uuids[pageNumber] = uuidsPage\n          .reverse()\n          .map( uuid => { return {uuid, page: pageNumber} } );\n\n        return this._pages_uuids[pageNumber];\n      });\n  }\n\n  // Gets a page with HTML containning a list of podcasts from the server\n  // (pageNumber) => Promise(String)\n  getPage(pageNumber=0) {\n\n    // Format day and month to 2 digits 0 padded strings\n    const pad2 = num => ( num < 10 ? '0' : '' ) + num;\n    const date =\n      pad2( this.date.getDate() ) + '/' +\n      pad2( 1 + this.date.getMonth() ) + '/' +\n      this.date.getFullYear();\n\n    // Set next day's date and string\n    let next = new Date(this.date.getTime());\n    next.setDate(next.getDate() + 1);\n    let dateNext = '';\n\n    // Don't use next day date if it's 2018's last day\n    if ( !(next.getFullYear() === 2019 && next.getMonth() === 0 && next.getDate() === 1) ) {\n      dateNext =\n        pad2( next.getDate() ) + '/' +\n        pad2( 1 + next.getMonth() ) + '/' +\n        next.getFullYear();\n    }\n\n    return fetch(\n      \"https://cors-anywhere.herokuapp.com/\" // Anti CORS\n      + \"https://api.audioteca.rac1.cat/a-la-carta/cerca?\"\n      + \"text=&programId=&sectionId=HOUR&\"\n      + `from=${date}&to=${dateNext}&pageNumber=${pageNumber}`,\n      {\n        credentials: 'same-origin',\n        signal: this.controller.signal,\n      })\n      .then( this.handleFetchErrors )\n      .then( response => response.text() )\n  }\n\n  // Parses a page raw HTML to obtain audio UUIDs and the list of pages\n  // (dataRawHTML) => {uuidsPage: Array(String), pages: Array(Number)}\n  parsePage(dataRaw) {\n    const searchData = ['data-audio-id','data-audioteca-search-page'];\n    const data = dataRaw\n      .split('\\n')\n      .filter( line => this.dataAttrsFind.test(line) )\n      .map( v => v.replace(this.dataAttrsClean, '$1=$2') )\n      .map( line => line.split('=') )\n      .filter( v => searchData.includes(v[0]) );\n\n    return {\n      uuidsPage: data\n        .filter( v => v[0] === 'data-audio-id' )\n        .map( v => v[1] ),\n      pages: data\n        .filter( v => v[0] === 'data-audioteca-search-page' )\n        .map( v => Number(v[1]) ),\n    };\n  }\n\n  // Downloads podcast JSON\n  // (uuid) => Promise(podcastJSON)\n  getPodcastData(uuid) {\n\n    // Return cached version if we've got it\n    if ( uuid in this._podcastsData ) {\n      // Return podcast as an immediatelly resolved Promise,\n      // as it is what's expected\n      return new Promise( resolve => resolve(this._podcastsData[uuid]) );\n    }\n\n    return fetch(\n      `https://api.audioteca.rac1.cat/piece/audio?id=${uuid}`,\n      { signal: this.controller.signal }\n    )\n      .then( this.handleFetchErrors )\n      .then( data => data.json() )\n      .then( podcast => {\n\n        // Fix server bug on year's last day, in which gives dates in the future\n        if ( podcast.dateTime.startsWith(\n          `${this.date.getFullYear() + 1}-${this.date.getMonth() + 1}`\n        )) {\n          podcast.dateTime = podcast.dateTime\n            .replace(`${this.date.getFullYear() + 1}`, `${this.date.getFullYear()}`);\n          console.log(\"Podcast date in future. Fixing to: \" + podcast.dateTime);\n        }\n\n        // Add some data to the podcast\n        podcast.uuid      = uuid;\n        podcast.date      = new Date(podcast.dateTime);\n        podcast.hour      = Number(podcast.audio.time.split(':')[0]);\n        podcast.minute    = Number(podcast.audio.time.split(':')[1]);\n        podcast.title     = podcast.appTabletTitle.replace(/ \\d\\d\\/.*/, '');\n        podcast.titleFull = podcast.appTabletTitle;\n\n        // Prevent a redirect of 400ms :/\n        podcast.path = podcast.path.replace(/\\/get\\//, '/file/').replace(/\\/(\\d)\\//, '/$1/-/')\n\n        // Save to cache\n        this._podcastsData[uuid] = podcast;\n\n        return podcast;\n      })\n  }\n\n}\n\nexport default Rac1;\n","import React, { Component } from 'react';\n\nimport { translate } from \"react-translate\"\nimport ReactAudioPlayer from 'react-audio-player';\nimport MediaQuery from 'react-responsive';\n\nimport Controls from './Controls';\nimport Playlist from './Playlist';\nimport PodcastsList from './PodcastsList';\nimport Podcast from './Podcast';\n\nimport Rac1 from './rac1';\n\nclass Rac1ByDate extends Component {\n\n  getDateFromParams(props) {\n    const date = props.match.params;\n    return new Date(\n        date.year,\n        date.month-1,\n        date.day,\n        date.hour||0,\n        date.minute||0,\n      )\n  }\n\n  constructor(props, history) {\n    super();\n\n    this.history = props.history;\n    this.initialTitle = document.title;\n\n    // Initial state\n    this.state = {\n      podcasts: [{uuid: '...'}],\n      currentUUID: '',\n      date: this.getDateFromParams(props),\n      maxDate: new Date(),\n      volume: 1,\n      muted: false,\n      isPlaying: false,\n      completed: false,\n      waitingUpdate: false,\n      showAdvancedControls: false,\n    };\n\n    this.extraControls = [\n      {\n        help: 'Reload playlist',\n        action: this.handleClickReload.bind(this),\n        keys: [ 'r', 'R' ],\n      },\n    ];\n\n    // Debugging on development\n    if ( process.env.NODE_ENV === 'development' ) {\n\n      // Log state changes\n      this._setState = this.setState;\n      this.setState = props => {\n        console.log({\n          a0_prev: JSON.parse(JSON.stringify(this.state)),\n          a1_next: JSON.parse(JSON.stringify(props)),\n        });\n        this._setState(props);\n      };\n\n      // Add a button to remove the last podcast in the list\n      this.extraControls.push({\n        icon: 'RL',\n        text: 'Remove last',\n        help: 'Remove last podcast from playlist',\n        action: this.handlePodcastsLastRemove.bind(this),\n        group: 'advanced basic',\n      });\n    }\n  }\n\n  componentWillMount() {\n\n    // Register history change event listener\n    this.unlisten = this.history.listen(this.handleHistoryChange.bind(this))\n\n    // Initiate backend library\n    this.rac1 = new Rac1({\n      date: this.state.date,\n      onListUpdate: this.handleListUpdate.bind(this),\n    });\n  }\n\n  componentWillUnmount() {\n    // Unregister history change event listener\n    this.unlisten();\n\n    // Abort backend fetches\n    this.rac1.abort();\n\n    // Reset initial title\n    document.title = this.initialTitle;\n  }\n\n  render() {\n    const {\n      podcasts,\n      volume,\n      muted,\n      completed,\n      date,\n      maxDate,\n      isPlaying,\n      showAdvancedControls,\n    } = this.state;\n    const dateText = date instanceof Date ?\n      `${date.getDate()}/${1 + date.getMonth()}/${date.getFullYear()}`\n      : '...';\n\n    // Find current podcast (selected by uuid instead of just position)\n    const current = this.findCurrentPodcast();\n    const autoplay = current > 0;\n    const currentPath =\n      podcasts !== undefined\n        && podcasts.length > current\n        && 'path' in podcasts[current]\n        ? podcasts[current].path : '';\n    const title = podcasts !== undefined && podcasts.length > 0 ?\n      ( 'audio' in podcasts[current] ?\n          `${podcasts[current].titleFull}` :\n          dateText )\n      : dateText;\n\n    const controls = <Controls\n          getPlayer={ this.player.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          allowFocus={ (el) => el.className.match( /date-?picker|rc-slider-handle/ ) }\n          onPlayNext={ this.playNext.bind(this) }\n          onPlayPrev={ this.playPrev.bind(this) }\n          onSetVolume={ volume => this.setState({ ...this.state, volume }) }\n          onSetMuted={ muted => this.setState({ ...this.state, muted }) }\n          showAdvanced={ showAdvancedControls }\n          volumeAsAdvanced={ true }\n          onShowAdvancedChange={ show => this.setState({ ...this.state, showAdvancedControls: show }) }\n          isPlaying={ isPlaying }\n          ref={ (el) => { if(el) { this.keyHandlerFocus = el.keyHandlerFocus } } }\n          extraControls={ this.extraControls }\n        />;\n    const player = <ReactAudioPlayer\n          ref={(element) => { this._player = element; }}\n          style={{ width: '100%' }}\n          src={ currentPath }\n          autoPlay={ autoplay }\n          title={ title }\n          controls\n          controlsList='nodownload'\n          preload={ (autoplay ? 'auto' : 'metadata') }\n          onEnded={ this.playNext.bind(this) }\n          volume={ volume }\n          muted={ muted }\n          onPlay={ this.handlePlayStatusChange.bind(this, true) }\n          onPause={ this.handlePlayStatusChange.bind(this, false) }\n          onVolumeChanged={ e => this.setState({\n            ...this.state,\n            volume: e.currentTarget.volume,\n            muted: e.currentTarget.muted,\n          }) }\n        />;\n    const playlist = <Playlist\n          date={ date }\n          minDate={ new Date(2015, 5, 1) /* 1st date with HOUR podcasts */ }\n          maxDate={ maxDate }\n          completedDownload={ completed }\n          onClickReload={ this.handleClickReload.bind(this) }\n          onDateBlur={ () => this.keyHandlerFocus() }\n          onDateChange={ this.handleDateChange.bind(this) }\n        >\n          <PodcastsList\n            current={ current }\n          >\n          { podcasts.map((podcast, index) =>\n            <Podcast\n              key={ podcast.uuid !== '...' ? podcast.uuid : `..._${index}` }\n              { ...podcast }\n              onClick={ this.handlePodcastClick.bind(this, index) }\n            />\n          )}\n          </PodcastsList>\n        </Playlist>;\n\n    return (\n      <MediaQuery minWidth={ 1024 }>\n        { matches => {\n          if ( matches ) {\n            return (\n              <div style={{\n                display: 'flex',\n                alignItems: 'stretch',\n              }}>\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'stretch',\n                  justifyContent: 'space-evenly',\n                }}>\n                  <h3>{ title }</h3>\n                  { controls }\n                  { player }\n                </div>\n                { playlist }\n              </div>\n            );\n          } else {\n            return (\n              <React.Fragment>\n                <h3>{ title }</h3>\n                { controls }\n                { player }\n                { playlist }\n              </React.Fragment>\n            );\n          }\n        }}\n      </MediaQuery>\n    );\n  }\n\n  handleHistoryChange(location, action) {\n    const dateNew = this.getDateFromParams(this.props);\n    const { date } = this.state;\n\n    // Do nothing when change is made by us\n    if( action !== 'POP' ) {\n      return;\n    }\n\n    /*\n     * Determine action depending on what changed\n     */\n\n    // Date changed\n    if ( date.getFullYear() !== dateNew.getFullYear() ||\n      date.getMonth() !== dateNew.getMonth() ||\n      date.getDate() !== dateNew.getDate() ) {\n      this.handleDateChange(dateNew);\n    }\n\n    // Podcast changed\n    else if ( date.getHours() !== dateNew.getHours()  ||\n      date.getMinutes() !== dateNew.getMinutes() ) {\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        dateNew,\n      });\n      this.selectPodcastByDate(dateNew, false);\n    }\n  }\n\n  historyPush(date, replace=false) {\n    const newPath = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/${date.getHours()}/${date.getMinutes()}`;\n\n    // Only PUSH or REPLACE if something have to change\n    if ( this.history.location.pathname !== newPath ) {\n      if ( !replace ) {\n        this.history.push(newPath);\n      }\n      else {\n        this.history.replace(newPath);\n      }\n    }\n  }\n\n  handlePlayStatusChange(isPlaying) {\n    this.setState({\n      ...this.state,\n      isPlaying,\n    });\n  }\n\n  handleListUpdate(newList, completed) {\n    // Stop waiting if completed\n    const { waitingUpdate, currentUUID, date } = this.state;\n    const waitingUpdateNext = waitingUpdate && completed ? false : waitingUpdate;\n\n    this.setState({\n      ...this.state,\n      podcasts: newList,\n      completed,\n      waitingUpdate: waitingUpdateNext,\n      maxDate: new Date(),\n    });\n\n    // If there is no podcast selected on update completed, select one\n    if ( completed && currentUUID === '' ) {\n      this.selectPodcastByDate(date);\n    }\n\n    // Play next podcast if stop waiting, but without retrying download\n    if ( waitingUpdate === true && waitingUpdateNext === false ) {\n      this.playNext(false);\n    }\n  }\n\n  handleDateChange(date) {\n    if ( date !== this.state.date ) {\n\n      // Save new date to state\n      this.setState({\n        ...this.state,\n        currentUUID: '',\n        date,\n      });\n\n      // If it's a valid date, trigger state change\n      if ( date !== null ) {\n        // Push new date to URL and history\n        this.historyPush(date);\n\n        // Call in background to prevent list update's state overwrite\n        setTimeout(() => this.rac1.setDate(date), 50);\n      }\n    }\n  }\n\n  // Removes last podcast from list\n  handlePodcastsLastRemove() {\n    this.setState({\n      ...this.state,\n      podcasts: [...this.state.podcasts].slice(0,-1),\n    });\n  }\n\n  // Updates podcasts list from backend\n  handleClickReload() {\n\n    // If there is not already an incomplete update\n    if ( this.state.completed ) {\n      this.setState({\n        ...this.state,\n        completed: false,\n      });\n\n      // Trigger a list update\n      return this.rac1.updateList();\n    }\n  }\n\n  // Select a podcast from list using date&time argument\n  selectPodcastByDate(date) {\n    // Find all podcasts matching >= date\n    const found = this.state.podcasts.filter( podcast => {\n      return podcast.hour >= date.getHours() &&\n        (podcast.hour > date.getHours() ||\n        podcast.minute >= date.getMinutes())\n    });\n\n    // Play first matched podcast\n    if ( found.length > 0 ) {\n      this.playPodcast(\n        this.findPodcastByUUID(found[0].uuid));\n    }\n  }\n\n  findPodcastByUUID(uuid) {\n    let found = 0;\n    this.state.podcasts.forEach( (podcast, index) => {\n      if ( podcast.uuid === uuid ) {\n        found = index\n      }\n    });\n\n    return found;\n  }\n\n  findCurrentPodcast() {\n    return this.findPodcastByUUID( this.state.currentUUID );\n  }\n\n  playPodcast(index) {\n    const { date, currentUUID } = this.state;\n    const { t } = this.props;\n    const podcast = this.state.podcasts[index];\n\n    // Force push&replace if it's not exact match with date, and update date in state\n    let replace = false;\n    if ( podcast.hour !== date.getHours() ||\n      podcast.minute !== date.getMinutes() ) {\n      date.setHours( Number(podcast.hour) );\n      date.setMinutes( Number(podcast.minute) );\n    }\n\n    replace = currentUUID === '';\n    document.title = `${ t(this.initialTitle) }: ${podcast.titleFull}`;\n    this.setState({\n      ...this.state,\n      currentUUID: podcast.uuid,\n      date,\n    });\n    this.historyPush(date, replace);\n  }\n\n  playPrev() {\n    const current = this.findCurrentPodcast();\n    if ( current > 0 ) {\n      this.playPodcast(current - 1);\n    }\n  }\n\n  playNext(retry=true) {\n    const current = this.findCurrentPodcast();\n\n    // If there is a next podcast and it has path, play it\n    if ( current < (this.state.podcasts.length - 1 ) &&\n       'path' in this.state.podcasts[current]) {\n      this.playPodcast(current + 1);\n    }\n    else {\n      // If we are called to retry, update list\n      if ( retry ) {\n        // If we are not already waiting for update,\n        // set  and trigger a list update\n        if ( !this.state.waitingUpdate ) {\n          this.handleClickReload();\n          this.setState({\n            ...this.state,\n            waitingUpdate: true,\n          });\n        }\n      }\n    }\n  }\n\n  player() {\n    return this._player.audioEl;\n  }\n\n  handlePodcastClick(index, e) {\n    e.stopPropagation();\n    e.preventDefault();\n    this.playPodcast(index);\n  }\n}\n\nexport default translate('Rac1ByDate')(Rac1ByDate);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Storage from \"react-simple-storage\";\nimport { TranslatorProvider } from \"react-translate\"\nimport available from \"./i18n/available\"\n\nimport AppMenu from './AppMenu';\nimport GAListener from './GAListener';\nimport Rac1Directe from './Rac1Directe';\nimport Rac1ByDate from './Rac1ByDate';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.registration = false;\n    this.state = {\n      newServiceWorkerDetected: false,\n      language: available.hasOwnProperty(navigator.language) ? navigator.language : 'en-en',\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('onNewServiceWorker', this.handleNewServiceWorker.bind(this));\n  }\n\n  handleNewServiceWorker(event) {\n    this.registration = event.detail.registration;\n    this.setState({\n      ...this.state,\n      newServiceWorkerDetected: true,\n    });\n  }\n\n  render() {\n    const date = new Date();\n    const todayStr = `/${date.getFullYear()}/${1 + date.getMonth()}/${date.getDate()}/0/0`;\n    const { newServiceWorkerDetected, language } = this.state;\n    const translations = available[language];\n    console.log({language, translations});\n\n    return (\n      <TranslatorProvider translations={ translations }>\n        <Router>\n          <div className=\"App\" id=\"router-container\">\n\n            <Storage\n              parent={ this }\n              prefix=\"App\"\n              blacklist={ ['newServiceWorkerDetected'] }\n            />\n\n            {/* Menu */}\n            <AppMenu\n              newServiceWorkerDetected={ newServiceWorkerDetected }\n              onLoadNewServiceWorkerAccept={ this.handleLoadNewServiceWorkerAccept.bind(this) }\n              language={ language }\n              onLanguageChange={ this.handleLanguageChange.bind(this) }\n            />\n\n            {/* App Route */}\n            <header className=\"App-header\" id=\"page-wrap\">\n              <GAListener>\n                <Switch>\n                  <Route\n                    path=\"/live\"\n                    render={ props => <Rac1Directe { ...props } /> } />\n\n                  <Route path=\"/directe\">\n                    <Redirect to={{ pathname: \"live\" }} />\n                  </Route>\n\n                  <Route\n                    path=\"/:year/:month/:day/:hour/:minute\"\n                    render={ props => <Rac1ByDate { ...props } /> } />\n\n                  <Route\n                    path=\"/:year/:month/:day/:hour\"\n                    render={ props => <Rac1ByDate { ...props } /> } />\n\n                  <Route\n                    path=\"/:year/:month/:day\"\n                    render={props => <Rac1ByDate { ...props } /> } />\n\n                  {/* Set default date to today */}\n                  <Redirect to={{ pathname: todayStr }} />\n                </Switch>\n              </GAListener>\n            </header>\n          </div>\n        </Router>\n      </TranslatorProvider>\n    )\n  }\n\n  handleLoadNewServiceWorkerAccept() {\n    this.props.onLoadNewServiceWorkerAccept(this.registration);\n  }\n\n  handleLanguageChange(language) {\n    this.setState({\n      ...this.state,\n      language,\n    });\n  }\n}\n\nApp.defaultProps = {\n  onLoadNewServiceWorkerAccept: registration => {},\n};\n\nApp.propTypes = {\n  onLoadNewServiceWorkerAccept: PropTypes.func.isRequired,\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Callback to call when user accepts loading new service worker\n// - Send message to SW to trigger the update\n// - Once updated, reload this window to load new assets\nconst updateSW = (registration) => {\n  if( registration.waiting ) {\n\n    // When the user asks to refresh the UI, we'll need to reload the window\n    var preventDevToolsReloadLoop;\n    navigator.serviceWorker.addEventListener('controllerchange', function(event) {\n\n      // Ensure refresh is only called once.\n      // This works around a bug in \"force update on reload\".\n      if (preventDevToolsReloadLoop) {\n        return;\n      }\n\n      preventDevToolsReloadLoop = true;\n      console.log('Controller loaded');\n      window.location.reload();\n    });\n\n    // Send a message to the new serviceWorker to activate itself\n    registration.waiting.postMessage('skipWaiting');\n  }\n};\n\nReactDOM.render(\n  <App onLoadNewServiceWorkerAccept={ updateSW } />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register({\n\n  // When new ServiceWorker is available, trigger an event on `document`,\n  // passing `registration` as extra data\n  onUpdate: registration => {\n    var event = new CustomEvent('onNewServiceWorker', { detail: { registration } });\n    document.dispatchEvent(event);\n  }\n\n});\n"],"sourceRoot":""}